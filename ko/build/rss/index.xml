<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JSer.info</title>
    <description>JavaScriptの最新情報を紹介する週刊ブログ</description>
    <link>https://jser.info/</link>
    <atom:link href="https://jser.info/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Tue, 23 Mar 2021 13:03:17 +0900</pubDate>
    <lastBuildDate>Tue, 23 Mar 2021 13:03:17 +0900</lastBuildDate>
    <generator>Jekyll v3.9.0</generator>
    
      <item>
        <title>2021-03-23のJS: Node.js 15.12.0(fs.promisesのパフォーマンス改善)、strict CSP、CSS Auditing Tools</title>
        <description>&lt;p&gt;JSer.info #532 - Node.js 15.12.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v15.12.0/&quot;&gt;Node v15.12.0 (Current) | Node.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;fs&lt;/code&gt;の&lt;code&gt;readFile&lt;/code&gt;/&lt;code&gt;writeFile&lt;/code&gt;に対してPromise版の&lt;code&gt;fs.promises&lt;/code&gt;の&lt;code&gt;readFile&lt;/code&gt;/&lt;code&gt;writeFile&lt;/code&gt;が遅くなるというIssueがあります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/node/issues/37583&quot;&gt;fs.promises.readFile is 40% slower than fs.readFile · Issue #37583 · nodejs/node&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Node.js 15.12.0ではこのパフォーマンス問題への改善が含まれています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/node/pull/37608&quot;&gt;fs: improve fsPromises readFile performance by Linkgoron · Pull Request #37608 · nodejs/node&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/node/pull/37610&quot;&gt;fs: improve fsPromises writeFile performance by Linkgoron · Pull Request #37610 · nodejs/node&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;writeに関してはコールバック版とほぼ同等になっている&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;その他には&lt;code&gt;crypto.create{Public,Private}Key&lt;/code&gt;がJWKオブジェクトをサポート、&lt;code&gt;AbortSignal.abort()&lt;/code&gt;の実装、&lt;code&gt;worker_threads&lt;/code&gt;モジュールに&lt;code&gt;{get,set}EnvironmentData&lt;/code&gt;が追加されています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://web.dev/strict-csp/&quot;&gt;Mitigate cross-site scripting (XSS) with a strict Content Security Policy (CSP)&lt;/a&gt;という記事では、Content Security Policy (CSP)を使ったXSSの影響を軽減するアプローチについて書かれています。&lt;/p&gt;

&lt;p&gt;CSPには、特定のURLを許可リスト方式で扱う設定がありますが、許可したURLにJSONPなどのエンドポイントがあるとバイパスされる問題が知られています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://speakerdeck.com/lweichselbaum/csp-is-dead-long-live-strict-csp-deepsec-2016?slide=15&quot;&gt;CSP Is Dead, Long Live Strict CSP! - DeepSec 2016 - Speaker Deck&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://speakerdeck.com/mikispag/content-security-policy-a-successful-mess-between-hardening-and-mitigation&quot;&gt;Content Security Policy: A successful mess between hardening and mitigation - Speaker Deck&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;そのため、nonceベースかhashベースのstrictなCSP設定をすることで、CSPがバイパスされる可能性は低くなります。&lt;br&gt;
この記事では、nonceベースとhashベースのstrict CSP設定をどのようにするかについて書かれています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2021/03/css-auditing-tools/&quot;&gt;CSS Auditing Tools — Smashing Magazine&lt;/a&gt;という記事では、CSSのAuditツールについてまとめられています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://cssstats.com/&quot;&gt;CSS Stats&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://yellowlab.tools/&quot;&gt;Yellow Lab Tools - Page Speed audit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://isellsoap.github.io/specificity-visualizer/&quot;&gt;Specificity Visualizer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.projectwallace.com/&quot;&gt;CSS Analytics - Project Wallace&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/katiefenn/parker&quot;&gt;katiefenn/parker: Stylesheet analysis tool.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Chrome DevTools

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://umaar.com/dev-tips/209-css-overview/&quot;&gt;CSS Overview Panel - Chrome DevTools - Dev Tips&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools/coverage&quot;&gt;Find Unused JavaScript And CSS Code With The Coverage Tab In Chrome DevTools&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;それぞれのツールの紹介やどのような項目を調べられるのかについてまとめられています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v15-12-0-current-node-js&quot;&gt;Node v15.12.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v15.12.0/&quot; title=&quot;Node v15.12.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v15.12.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 15.12.0リリース。&lt;br&gt;
&lt;code&gt;crypto.create{Public,Private}Key&lt;/code&gt;がJWKオブジェクトをサポート、&lt;code&gt;fs.promises&lt;/code&gt;のwriteFileとreadFileのパフォーマンス改善。&lt;br&gt;
&lt;code&gt;AbortSignal.abort()&lt;/code&gt;の実装、&lt;code&gt;worker_threads&lt;/code&gt;モジュールに&lt;code&gt;{get,set}EnvironmentData&lt;/code&gt;を追加など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/node/issues/37583&quot; title=&quot;fs.promises.readFile is 40% slower than fs.readFile · Issue #37583 · nodejs/node&quot;&gt;fs.promises.readFile is 40% slower than fs.readFile · Issue #37583 · nodejs/node&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;v8-release-v9-0-v8&quot;&gt;V8 release v9.0 · V8&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://v8.dev/blog/v8-release-90&quot; title=&quot;V8 release v9.0 · V8&quot;&gt;v8.dev/blog/v8-release-90&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;V8&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;V8 v9.0リリース。&lt;br&gt;
&lt;code&gt;RegExp#insices&lt;/code&gt;の実装、&lt;code&gt;super&lt;/code&gt;のプロパティアクセスのパフォーマンス改善、JavaScriptからWasmの関数を呼ぶときのパフォーマンスを改善など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v7-3-0-googlechrome-lighthouse&quot;&gt;Release v7.3.0 · GoogleChrome/lighthouse&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/GoogleChrome/lighthouse/releases/tag/v7.3.0&quot; title=&quot;Release v7.3.0 · GoogleChrome/lighthouse&quot;&gt;github.com/GoogleChrome/lighthouse/releases/tag/v7.3.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Lighthouse 7.3.0リリース。&lt;br&gt;
新しいauditとしてcsp-xssを試験的に追加。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/GoogleChrome/lighthouse/pull/12044&quot; title=&quot;new\_audit: csp-xss by adamraine · Pull Request #12044 · GoogleChrome/lighthouse&quot;&gt;new_audit: csp-xss by adamraine · Pull Request #12044 · GoogleChrome/lighthouse&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jasmine-3-7-0-md-at-main-jasmine-jasmine&quot;&gt;jasmine/3.7.0.md at main · jasmine/jasmine&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jasmine/jasmine/blob/main/release_notes/3.7.0.md&quot; title=&quot;jasmine/3.7.0.md at main · jasmine/jasmine&quot;&gt;github.com/jasmine/jasmine/blob/main/release_notes/3.7.0.md&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Jasmine 3.7リリース。&lt;br&gt;
Node.jsのSource Mapsに対応、Array.prototypeを拡張している際にテストが一部落ちる問題の修正、&lt;code&gt;.and.callFake&lt;/code&gt;がGenerator関数をサポートなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.medium.com/source-maps-in-node-js-482872b56116&quot; title=&quot;Source maps in Node.js. Supporting the many flavors of… | by Node.js | Medium&quot;&gt;Source maps in Node.js. Supporting the many flavors of… | by Node.js | Medium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ecmascript-proposal-updates-2021-03-ecmascript-daily&quot;&gt;ECMAScript proposal updates @ 2021-03 | ECMAScript Daily&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ecmascript-daily.github.io/ecmascript/2021/03/22/ecmascript-proposal-update&quot; title=&quot;ECMAScript proposal updates @ 2021-03 | ECMAScript Daily&quot;&gt;ecmascript-daily.github.io/ecmascript/2021/03/22/ecmascript-proposal-update&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;2021年3月のTC39でECMAScript Proposalのステータス変更のまとめ。&lt;br&gt;
Module FragmentsがStage 1へ、&lt;code&gt;Array#findLast&lt;/code&gt;がStage2へ、TemporalがStage 3へ更新など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://sosukesuzuki.dev/posts/stage-0-module-fragments/&quot; title=&quot;JavaScript の Module Fragments について&quot;&gt;JavaScript の Module Fragments について&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;sinon-changelog-md-at-master-sinonjs-sinon&quot;&gt;sinon/CHANGELOG.md at master · sinonjs/sinon&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/sinonjs/sinon/blob/master/CHANGELOG.md#1000--2021-03-22&quot; title=&quot;sinon/CHANGELOG.md at master · sinonjs/sinon&quot;&gt;github.com/sinonjs/sinon/blob/master/CHANGELOG.md#1000--2021-03-22&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Sinon.js 10.0.0リリース。&lt;br&gt;
IE 11、Legacy Edge、Legacy Safariのサポートを終了。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;mitigate-cross-site-scripting-xss-with-a-strict-content-security-policy-csp&quot;&gt;Mitigate cross-site scripting (XSS) with a strict Content Security Policy (CSP)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://web.dev/strict-csp/&quot; title=&quot;Mitigate cross-site scripting (XSS) with a strict Content Security Policy (CSP)&quot;&gt;web.dev/strict-csp/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSP&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ドメインの許可リストのCSPよりも、strict設定のCSPを推奨するという話。&lt;br&gt;
nonceとstrict-dynamicベースのCSP設定で防げるXSS、nonceベースとhashベースのCSPの設定、CSPの導入手順について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;supabse&quot;&gt;Supabseチームはどのようにフロントエンドの高速化に成功したのか - バンクーバーで考え中&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://jp.taishikato.com/posts/making-the-supabase-dashboard-supa-fast&quot; title=&quot;Supabseチームはどのようにフロントエンドの高速化に成功したのか - バンクーバーで考え中&quot;&gt;jp.taishikato.com/posts/making-the-supabase-dashboard-supa-fast&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Making the Supabase Dashboard Supa-fastの翻訳記事。&lt;br&gt;
ベースラインと目標設定、バンドルサイズの改善、パフォーマンス文化について&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://supabase.io/blog/2020/12/13/supabase-dashboard-performance&quot; title=&quot;Making the Supabase Dashboard Supa-fast&quot;&gt;Making the Supabase Dashboard Supa-fast&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-1-tip-to-familiarize-with-new-javascript-codebases&quot;&gt;The #1 tip to familiarize with new JavaScript Codebases&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.kevinpeters.net/the-fastest-way-to-understand-new-code-bases&quot; title=&quot;The #1 tip to familiarize with new JavaScript Codebases&quot;&gt;www.kevinpeters.net/the-fastest-way-to-understand-new-code-bases&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;code-complexity&lt;/code&gt;を使ったコードの複雑度分析について。&lt;br&gt;
ComplexityとChurnについて&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/simonrenoult/code-complexity&quot; title=&quot;simonrenoult/code-complexity: Measure the churn/complexity ratio. Higher values mean hotspots where refactorings should happen.&quot;&gt;simonrenoult/code-complexity: Measure the churn/complexity ratio. Higher values mean hotspots where refactorings should happen.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;css-auditing-tools-smashing-magazine&quot;&gt;CSS Auditing Tools — Smashing Magazine&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2021/03/css-auditing-tools/&quot; title=&quot;CSS Auditing Tools — Smashing Magazine&quot;&gt;www.smashingmagazine.com/2021/03/css-auditing-tools/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CSSのAuditツールについての記事。&lt;br&gt;
CSSセレクタの詳細度、複雑度の測定、Code Coverage、継続的な分析など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;next-10-years-of-node-js-understanding-the-needs-of-the-node-js-constituencies-by-node-js-mar-2021-medium&quot;&gt;Next 10 years of Node.js — Understanding the needs of the Node.js constituencies | by Node.js | Mar, 2021 | Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.medium.com/next-10-years-of-node-js-understanding-the-needs-of-the-node-js-constituencies-2f95a1df6a6f&quot; title=&quot;Next 10 years of Node.js — Understanding the needs of the Node.js constituencies | by Node.js | Mar, 2021 | Medium&quot;&gt;nodejs.medium.com/next-10-years-of-node-js-understanding-the-needs-of-the-node-js-constituencies-2f95a1df6a6f&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.jsの次の10年について&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/next-10&quot; title=&quot;nodejs/next-10: Repository for discussion on strategic directions for next 10 years of Node.js&quot;&gt;nodejs/next-10: Repository for discussion on strategic directions for next 10 years of Node.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;101arrowz-isoworker-isomorphic-workerization-with-context-support&quot;&gt;101arrowz/isoworker: Isomorphic workerization with context support&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/101arrowz/isoworker&quot; title=&quot;101arrowz/isoworker: Isomorphic workerization with context support&quot;&gt;github.com/101arrowz/isoworker&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;WebWorkerと&lt;code&gt;worker_threds&lt;/code&gt;に対応したWorkerライブラリ。&lt;br&gt;
Inline CodeをWorkerコードを作成し、Workerに対してクラスや関数を含めたデータを渡して実行した結果を取得できる&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;taoqf-node-html-parser-a-very-fast-html-parser-generating-a-simplified-dom-with-basic-element-query-support&quot;&gt;taoqf/node-html-parser: A very fast HTML parser, generating a simplified DOM, with basic element query support.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/taoqf/node-html-parser&quot; title=&quot;taoqf/node-html-parser: A very fast HTML parser, generating a simplified DOM, with basic element query support.&quot;&gt;github.com/taoqf/node-html-parser&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;HTMLパーサとDOM APIライブラリ。&lt;br&gt;
パースした結果のオブジェクトでDOM APIライクな操作ができる。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;hello-from-trpc-trpc&quot;&gt;Hello from tRPC | tRPC&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://trpc.io/&quot; title=&quot;Hello from tRPC | tRPC&quot;&gt;trpc.io/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Next.js&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;HTTP通信のデータレイヤーライブラリ。&lt;br&gt;
TypeScriptとyup/zodなどのバリデーターを使ったサーバ側のAPIエンドポイントを定義し、その型をクライアントからも利用できる。&lt;br&gt;
React向けのHooks/SSR対応のクライアントライブラリも公開されている。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;charts-css&quot;&gt;Charts.css&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://chartscss.org/&quot; title=&quot;Charts.css&quot;&gt;chartscss.org/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CSSを使ったグラフライブラリ。&lt;br&gt;
様々な種類のチャートの表示に対応している。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;learning-tensorflow-js&quot;&gt;Learning TensorFlow.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://learning.oreilly.com/library/view/learning-tensorflowjs/9781492090786/&quot; title=&quot;Learning TensorFlow.js&quot;&gt;learning.oreilly.com/library/view/learning-tensorflowjs/9781492090786/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;MachineLearning&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;2021年7月発売&lt;br&gt;
TensorFlow.jsの入門書&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 23 Mar 2021 12:32:29 +0900</pubDate>
        <link>https://jser.info/2021/03/23/node.js-15.12.0fs.promises-strict-csp-css-auditing-tools/</link>
        <guid isPermaLink="true">https://jser.info/2021/03/23/node.js-15.12.0fs.promises-strict-csp-css-auditing-tools/</guid>
        
        <category>node.js</category>
        
        <category>performance</category>
        
        <category>Tools</category>
        
        <category>testing</category>
        
        <category>browser</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2021-03-16のJS: Safari Technology Preview 122、React Native 0.64、SvelteKit</title>
        <description>&lt;p&gt;JSer.info #531 - Safari Technology Preview 122がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://webkit.org/blog/11577/release-notes-for-safari-technology-preview-122/&quot;&gt;Release Notes for Safari Technology Preview 122 | WebKit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Safari Technology Preview 122では色々な機能が実装されています。&lt;br&gt;
実験フラグ付きでCSS &lt;code&gt;:focus-visible&lt;/code&gt;とCSS Color 5の&lt;code&gt;color-mix()&lt;/code&gt;/&lt;code&gt;color-contrast()&lt;/code&gt;/&lt;a href=&quot;https://drafts.csswg.org/css-color-5/#relative-colors&quot;&gt;Relative color syntax&lt;/a&gt;が実装されています。&lt;br&gt;
ES Proposal Stage 3の&lt;a href=&quot;https://github.com/tc39/proposal-private-methods&quot;&gt;Private method&lt;/a&gt;、&lt;a href=&quot;https://github.com/tc39/proposal-static-class-features&quot;&gt;Static private methods&lt;/a&gt;、&lt;a href=&quot;https://github.com/tc39/proposal-top-level-await&quot;&gt;Top-Level await&lt;/a&gt;、&lt;a href=&quot;https://github.com/tc39/proposal-regexp-match-indices&quot;&gt;RegExp Match Indices&lt;/a&gt;のサポート。&lt;br&gt;
Web WorkerとService Workerで&lt;code&gt;type: module&lt;/code&gt;をサポート、Paint Timingの(再)有効化なども含まれます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/module-workers/&quot;&gt;Threading the web with module workers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://nhiroki.jp/2019/12/05/es-modules-for-dedicated-workers&quot;&gt;Chrome 80 から Web Worker (Dedicated Worker) で ES Modules が使えます&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Safariとは直接関係しませんが、2021年6月ごろにリリースされる予定のECMAScript 2021のリリース候補も公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tc39/ecma262/releases/tag/es2021-candidate-2021-03&quot;&gt;Release ES2021 Candidate March 2021 · tc39/ecma262&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://2ality.com/2020/09/ecmascript-2021.html&quot;&gt;ECMAScript 2021: the final feature set&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;SvelteKitのソースコードが公開されています。&lt;br&gt;
SvelteKitはSvelteベースのNext.jsライクなフレームワークであった&lt;a href=&quot;https://sapper.svelte.dev/&quot;&gt;Sapper&lt;/a&gt;を置き換える目的で作られています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sveltejs/kit&quot;&gt;sveltejs/kit: A monorepo for SvelteKit and friends&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;まだソースコードの公開だけでリリースはされていません。&lt;br&gt;
&lt;a href=&quot;https://sk-incognito.vercel.app/learn/what-is-sveltekit&quot;&gt;What is SvelteKit? | SK Incognito&lt;/a&gt;というチュートリアルサイトでは、SvelteKitがどのようなものか紹介されているので、興味がある人は見てみるといいかもしれません。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;React Native 0.64がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://reactnative.dev/blog/2021/03/12/version-0.64&quot;&gt;Announcing React Native 0.64 with Hermes on iOS · React Native&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;AOTによる事前コンパイルでfootprintを最適化してアプリの起動速度などを改善する目的である&lt;a href=&quot;https://github.com/facebook/hermes&quot;&gt;Hermes JS Engine&lt;/a&gt;がiOSでも利用可能になっています。&lt;br&gt;
また、HermesにES2015の&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy&quot;&gt;Proxy object&lt;/a&gt;のサポートが追加されています。&lt;br&gt;
その他には、MetroでInline Requiresがデフォルトで有効化、&lt;a href=&quot;https://reactjs.org/blog/2020/10/20/react-v17.html&quot;&gt;React 17&lt;/a&gt;へアップデートなどが含まれています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v0-9-0-evanw-esbuild&quot;&gt;Release v0.9.0 · evanw/esbuild&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/evanw/esbuild/releases/tag/v0.9.0&quot; title=&quot;Release v0.9.0 · evanw/esbuild&quot;&gt;github.com/evanw/esbuild/releases/tag/v0.9.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;relre&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;esbuild 0.9.0リリース。&lt;br&gt;
package.jsonの&lt;code&gt;exports&lt;/code&gt;フィールドのサポート、&lt;code&gt;esbuild.startService()&lt;/code&gt; APIの削除、bannerとfooterを言語ごとに指定できるように&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-notes-for-safari-technology-preview-122-webkit&quot;&gt;Release Notes for Safari Technology Preview 122 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/11577/release-notes-for-safari-technology-preview-122/&quot; title=&quot;Release Notes for Safari Technology Preview 122 | WebKit&quot;&gt;webkit.org/blog/11577/release-notes-for-safari-technology-preview-122/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webkit&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Safari Technology Preview 122リリース。&lt;br&gt;
実験フラグ付きでCSS &lt;code&gt;:focus-visible&lt;/code&gt;とCSS Color 5の実装を追加。&lt;br&gt;
ES ProposalのPrivate method、Top-Level await、RegExp Match Indicesのサポート。&lt;br&gt;
Workerで&lt;code&gt;type: module&lt;/code&gt;をサポート、Paint Timingの有効化など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chromium-blog-chrome-90-beta-av1-encoder-for-webrtc-new-origin-trials-and-more&quot;&gt;Chromium Blog: Chrome 90 Beta: AV1 Encoder for WebRTC, New Origin Trials, and More&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.chromium.org/2021/03/chrome-90-beta-av1-encoder-for-webrtc.html&quot; title=&quot;Chromium Blog: Chrome 90 Beta: AV1 Encoder for WebRTC, New Origin Trials, and More&quot;&gt;blog.chromium.org/2021/03/chrome-90-beta-av1-encoder-for-webrtc.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 90 Betaリリース。&lt;br&gt;
AV1 Encoderのサポート。&lt;br&gt;
Origin Trialとして&lt;code&gt;getCurrentBrowsingContextMedia()&lt;/code&gt;、Breakout Box、WebAssembly Exception Handlingのサポート。&lt;br&gt;
CSSの&lt;code&gt;aspect-ratio&lt;/code&gt;とwidthかheightが指定されているときに推論されるように、&lt;code&gt;:state&lt;/code&gt;、&lt;code&gt;overflow: clip&lt;/code&gt;のサポート。&lt;br&gt;
Feature-Policyに代わるPermissions-Policy、&lt;code&gt;StaticRange&lt;/code&gt;のサポートなど。&lt;br&gt;
&lt;code&gt;navigator.plugins&lt;/code&gt;と&lt;code&gt;navigator.mimeTypes&lt;/code&gt;が空要素を返すようになるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-react-native-0-64-with-hermes-on-ios-react-native&quot;&gt;Announcing React Native 0.64 with Hermes on iOS · React Native&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://reactnative.dev/blog/2021/03/12/version-0.64&quot; title=&quot;Announcing React Native 0.64 with Hermes on iOS · React Native&quot;&gt;reactnative.dev/blog/2021/03/12/version-0.64&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;iOS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Android&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React Native 0.64リリース。&lt;br&gt;
iOSでもJSエンジンのHermesを利用可能に、MetroでInline Requiresがデフォルトで有効化、HermesがES Proxyのサポート、React 17へアップデートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;sveltejs-kit-a-monorepo-for-sveltekit-and-friends&quot;&gt;sveltejs/kit: A monorepo for SvelteKit and friends&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/sveltejs/kit&quot; title=&quot;sveltejs/kit: A monorepo for SvelteKit and friends&quot;&gt;github.com/sveltejs/kit&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Svelte&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;SvelteKitのソースコードが公開された&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-es2021-candidate-march-2021-tc39-ecma262&quot;&gt;Release ES2021 Candidate March 2021 · tc39/ecma262&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tc39/ecma262/releases/tag/es2021-candidate-2021-03&quot; title=&quot;Release ES2021 Candidate March 2021 · tc39/ecma262&quot;&gt;github.com/tc39/ecma262/releases/tag/es2021-candidate-2021-03&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;spec&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ECMAScript 2021のリリース候補が公開された。ECMAScript 2021に入る予定の機能は決定され仕様もフリーズされたため、masterブランチはES 2022となった&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://2ality.com/2020/09/ecmascript-2021.html&quot; title=&quot;ECMAScript 2021: the final feature set&quot;&gt;ECMAScript 2021: the final feature set&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tc39/proposals/blob/master/finished-proposals.md&quot; title=&quot;proposals/finished-proposals.md at master · tc39/proposals&quot;&gt;proposals/finished-proposals.md at master · tc39/proposals&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;socket-io-4-0-0-socket-io&quot;&gt;Socket.IO 4.0.0 | Socket.IO&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://socket.io/blog/socket-io-4-release/&quot; title=&quot;Socket.IO 4.0.0 | Socket.IO&quot;&gt;socket.io/blog/socket-io-4-release/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebSocket&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Socket.IO 4.0.0リリース。&lt;br&gt;
破壊的な変更としてサーバ側の&lt;code&gt;io.to()&lt;/code&gt;がimmutableに変更、protocolは互換性を維持している。&lt;br&gt;
&lt;code&gt;pingTimeout&lt;/code&gt;のデフォルト値を5秒から20秒へ変更、Utilityメソッドの追加、&lt;code&gt;autoUnref&lt;/code&gt;オプションの追加など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://socket.io/docs/v3/migrating-from-3-x-to-4-0/&quot; title=&quot;Migrating from 3.x to 4.0 | Socket.IO&quot;&gt;Migrating from 3.x to 4.0 | Socket.IO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/socketio/engine.io/pull/616&quot; title=&quot;fix: set default protocol version to 3 to allow backward compatibilit… by simonemazzoni · Pull Request #616 · socketio/engine.io&quot;&gt;fix: set default protocol version to 3 to allow backward compatibilit… by simonemazzoni · Pull Request #616 · socketio/engine.io&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;debugging-layout-shifts&quot;&gt;Debugging layout shifts&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://web.dev/debugging-layout-shifts/&quot; title=&quot;Debugging layout shifts&quot;&gt;web.dev/debugging-layout-shifts/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Layout Instability APIでのCumulative Layout Shift (CLS)の計測とCLSの特定とデバッグ方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;digging-into-css-logical-properties&quot;&gt;Digging Into CSS Logical Properties&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ishadeed.com/article/css-logical-properties/&quot; title=&quot;Digging Into CSS Logical Properties&quot;&gt;ishadeed.com/article/css-logical-properties/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;RTLに対応したCSSの書き方と&lt;code&gt;margin-inline-end&lt;/code&gt;について。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;css-in-js&quot;&gt;レシピサービスのフロントエンドに CSS in JS を採用した話 - クックパッド開発者ブログ&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://techlife.cookpad.com/entry/2021/03/15/090000&quot; title=&quot;レシピサービスのフロントエンドに CSS in JS を採用した話 - クックパッド開発者ブログ&quot;&gt;techlife.cookpad.com/entry/2021/03/15/090000&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;emotionを使ったCSS-in-JSについて。&lt;br&gt;
styled-componentsの記法ではなくString Stylesを採用した理由、stylelintを使ったLint、Jestを使ったスナップショットテストについてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-what-is-the-meaning-of-this&quot;&gt;JavaScript: What is the meaning of this?&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://web.dev/javascript-this/&quot; title=&quot;JavaScript: What is the meaning of this?&quot;&gt;web.dev/javascript-this/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;いろいろなケースの&lt;code&gt;this&lt;/code&gt;の意味について解説している記事&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jsprimer.net/basic/function-this/&quot; title=&quot;関数とthis · JavaScript Primer #jsprimer&quot;&gt;関数とthis · JavaScript Primer #jsprimer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;beyond-console-log-level-up-your-debugging-skills-sitepoint&quot;&gt;Beyond Console.log() – Level up Your Debugging Skills - SitePoint&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.sitepoint.com/beyond-console-log-level-up-your-debugging-skills/&quot; title=&quot;Beyond Console.log() – Level up Your Debugging Skills - SitePoint&quot;&gt;www.sitepoint.com/beyond-console-log-level-up-your-debugging-skills/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;console&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Console APIやChrome DevToolsを使ったデバッグについての記事。&lt;br&gt;
ログフォーマット、Console APIの紹介、Dev Tools上で使える関数、Overrides、VScodeとの連携についてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-death-of-a-node-js-process-thomas-hunter-ii&quot;&gt;The Death of a Node.js Process - Thomas Hunter II&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://thomashunter.name/posts/2021-03-08-the-death-of-a-nodejs-process&quot; title=&quot;The Death of a Node.js Process - Thomas Hunter II&quot;&gt;thomashunter.name/posts/2021-03-08-the-death-of-a-nodejs-process&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.jsにおけるプロセス終了とエラーについて。&lt;br&gt;
uncaughtException、unhandledRejectionでのエラーのキャッチと&lt;code&gt;process.exit&lt;/code&gt;でのプロセス終了方法。&lt;br&gt;
また、Signalとそれをハンドリングできるかどうかについてのまとめ&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;post-spectre-web-development&quot;&gt;Post-Spectre Web Development&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://w3c.github.io/webappsec-post-spectre-webdev/&quot; title=&quot;Post-Spectre Web Development&quot;&gt;w3c.github.io/webappsec-post-spectre-webdev/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Spectre以後のウェブ開発における脅威モデルと戦略についてのドキュメント。&lt;br&gt;
Isolation、サブリソース、クロスオリジンを意図した操作についてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;what-is-sveltekit-sk-incognito&quot;&gt;What is SvelteKit? | SK Incognito&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://sk-incognito.vercel.app/learn/what-is-sveltekit&quot; title=&quot;What is SvelteKit? | SK Incognito&quot;&gt;sk-incognito.vercel.app/learn/what-is-sveltekit&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Svelte&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;SvelteKitのチュートリアルサイト&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;cloud9c-taro-a-lightweight-3d-game-engine-for-the-web&quot;&gt;Cloud9c/taro: A lightweight 3D game engine for the web.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Cloud9c/taro&quot; title=&quot;Cloud9c/taro: A lightweight 3D game engine for the web.&quot;&gt;github.com/Cloud9c/taro&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;3D&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;game&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;three.jsとcannon-esを使った3Dゲームエンジンライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;rsms-estrella-lightweight-and-versatile-build-tool-based-on-the-esbuild-compiler&quot;&gt;rsms/estrella: Lightweight and versatile build tool based on the esbuild compiler&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/rsms/estrella&quot; title=&quot;rsms/estrella: Lightweight and versatile build tool based on the esbuild compiler&quot;&gt;github.com/rsms/estrella&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;bundler&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;esbuildとtscのラッパーツール。&lt;br&gt;
esbuildでビルドしながら、tscでの型チェックを同時に実行できるビルドツール&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://dev.to/walpolea/through-the-pipeline-an-exploration-of-front-end-bundlers-ea1&quot; title=&quot;Through the pipeline: An exploration of front-end bundlers - DEV Community 👩‍💻👨‍💻&quot;&gt;Through the pipeline: An exploration of front-end bundlers - DEV Community 👩‍💻👨‍💻&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 16 Mar 2021 08:42:20 +0900</pubDate>
        <link>https://jser.info/2021/03/16/safari-technology-preview-122-react-native-0.64-sveltekit/</link>
        <guid isPermaLink="true">https://jser.info/2021/03/16/safari-technology-preview-122-react-native-0.64-sveltekit/</guid>
        
        <category>Tools</category>
        
        <category>debug</category>
        
        <category>Chrome</category>
        
        <category>CSS</category>
        
        <category>React</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2021-03-09のJS: Gatsby 3、Electron 12、ブラウザのライフサイクルの変化</title>
        <description>&lt;p&gt;JSer.info #530 - Gatsby v3がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gatsbyjs.com/blog/gatsby-v3/&quot;&gt;Gatsby v3 Incremental Builds in OSS, new Gatsby Image, and more | Gatsby&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gatsbyjs.com/docs/reference/release-notes/v3.0/&quot;&gt;Gatsby v3.0 (March 2021 #1)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ローカルでは実際にアクセスされたページだけをビルドすることで、全体を再構築せずにビルドする挙動がデフォルトとなっています。これによって必要なページだけをビルドするため、開発時のビルド待ち時間を少なくしています。&lt;/p&gt;

&lt;p&gt;破壊的変更としてNode.js 12未満のサポート終了、React 17/webpack 5/ESLint 7へアップデート、globalの&lt;code&gt;graphql&lt;/code&gt;ではなくimportして使うように変更、APIの変更などが含まれています。&lt;/p&gt;

&lt;p&gt;マイグレーション方法については、次のドキュメントに丁寧な解説が書かれています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gatsbyjs.com/docs/reference/release-notes/migrating-from-v2-to-v3/&quot;&gt;Migrating from v2 to v3 | Gatsby&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;Electron 12.0.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.electronjs.org/blog/electron-12-0&quot;&gt;Electron 12.0.0 | Electron Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Chromium 89、V8 8.9、Node.js 14.16(12.xからの更新)へアップデートされています。&lt;br&gt;
&lt;code&gt;exposeInMainWorld&lt;/code&gt;がオブジェクト以外をサポート、&lt;code&gt;webFrameMain&lt;/code&gt; APIの追加など含まれています。&lt;/p&gt;

&lt;p&gt;Electron 12.0.0では&lt;code&gt;contextIsolation&lt;/code&gt;と&lt;code&gt;worldSafeExecuteJavaScript&lt;/code&gt;がデフォルトで&lt;code&gt;true&lt;/code&gt;に変更されています。&lt;br&gt;
&lt;a href=&quot;https://www.electronjs.org/docs/tutorial/context-isolation&quot;&gt;Context Isolation&lt;/a&gt;は&lt;code&gt;preload&lt;/code&gt;のスクリプトと&lt;code&gt;webContents&lt;/code&gt;のスクリプトの実行コンテキスト分離することで、XSSなどの被害の範囲を軽減する仕組みです。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://speakerdeck.com/masatokinugawa/electron-abusing-the-lack-of-context-isolation-curecon-ja&quot;&gt;Electron: Context Isolationの欠如を利用した任意コード実行 / Electron: Abusing the lack of context isolation - CureCon(ja) - Speaker Deck&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://qiita.com/hibara/items/c59fb6924610fc22a9db&quot;&gt;Electron（v.12.0.0 現在）の IPC 通信入門 - よりセキュアな方法への変遷 - Qiita&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、&lt;a href=&quot;https://github.com/electron/electron/issues/21408&quot;&gt;段階的に廃止されている&lt;code&gt;remote&lt;/code&gt;モジュール&lt;/a&gt;が非推奨となり、&lt;a href=&quot;https://github.com/electron/remote&quot;&gt;@electron/remote&lt;/a&gt;という外部モジュールへと移行されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/electron/remote&quot;&gt;electron/remote: Bridge JavaScript objects from the main process to the renderer process in Electron.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;ブラウザのライフサイクルが変化してきているのでいくつかのニュースをまとめて紹介します。&lt;/p&gt;

&lt;p&gt;現在6週間ごとにリリースされているChromeですが、Q3 of 2021のChrome 94からはリリースサイクルを4週間ごとに短縮することを発表しました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.chromium.org/2021/03/speeding-up-release-cycle.html&quot;&gt;Chromium Blog: Speeding up Chrome&amp;#39;s release cycle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://chromiumdash.appspot.com/schedule&quot;&gt;Chromium Dash&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Microsoft Edge Legacyの廃止スケジュールが公開されています。&lt;br&gt;
Microsoft Edge Legacyは2021年3月9日でサポート終了されます。また、2021年4月13に配信されるセキュリティアップデートで削除され、同時に新しいChromiumベースのMSEdgeがインストールされます。(置き換わる)&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://techcommunity.microsoft.com/t5/microsoft-365-blog/new-microsoft-edge-to-replace-microsoft-edge-legacy-with-april-s/ba-p/2114224&quot;&gt;New Microsoft Edge to replace Microsoft Edge Legacy with April’s Windows 10 Update Tuesday release - Microsoft Tech Community&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Internet Explorer(IE)の廃止はEdgeとは異なるライフサイクルであるためまだまだ先ですが、&lt;br&gt;
IEでアクセスしたときにMSEdgeへリダイレクトする互換リストによって移行が進められています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/microsoft-edge/web-platform/ie-to-microsoft-edge-redirection&quot;&gt;Moving users to Microsoft Edge from Internet Explorer - Microsoft Edge Development | Microsoft Docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;この&lt;a href=&quot;https://edge.microsoft.com/neededge/v1&quot;&gt;NeedEdgeの互換リスト&lt;/a&gt;に記載されたサイトへIEで訪問すると、MSEdgeで開き直すように促すリダイレクトポップアップが表示されるようになります。&lt;br&gt;
この互換リストに&lt;a href=&quot;https://github.com/teppeis/history-of-ie-incompatible-sites-list/commits/master&quot;&gt;追加されているサイト&lt;/a&gt;は徐々に増えてきています。&lt;br&gt;
これとは、別にIEのサポート終了を宣言しているサイトについては次のドキュメントにまとめられています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.google.com/document/d/1XP58gVMyp_UCP4FFsf5ATpvRVwqi7v_EpEF3sl_Sobk/edit&quot;&gt;IE11 サポート終了の歴史 - Google ドキュメント&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;gatsby-v3-incremental-builds-in-oss-new-gatsby-image-and-more-gatsby&quot;&gt;Gatsby v3 Incremental Builds in OSS, new Gatsby Image, and more | Gatsby&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.gatsbyjs.com/blog/gatsby-v3/&quot; title=&quot;Gatsby v3 Incremental Builds in OSS, new Gatsby Image, and more | Gatsby&quot;&gt;www.gatsbyjs.com/blog/gatsby-v3/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;GraphQL&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Gatsby 3.0リリース。&lt;br&gt;
破壊的変更としてNode.js 12未満のサポート終了、webpack 5/ESLint 7へアップデート、globalの&lt;code&gt;graphql&lt;/code&gt;ではなくimportして使うように変更、APIの変更など。&lt;br&gt;
ローカルでは実際にアクセスされたページだけをビルドすることで、全体を再構築せずにビルドできるように&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.gatsbyjs.com/docs/reference/release-notes/migrating-from-v2-to-v3/&quot; title=&quot;Migrating from v2 to v3 | Gatsby&quot;&gt;Migrating from v2 to v3 | Gatsby&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jquery-3-6-0-released-official-jquery-blog&quot;&gt;jQuery 3.6.0 Released! | Official jQuery Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.jquery.com/2021/03/02/jquery-3-6-0-released/&quot; title=&quot;jQuery 3.6.0 Released! | Official jQuery Blog&quot;&gt;blog.jquery.com/2021/03/02/jquery-3-6-0-released/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;jQuery&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JSON&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;jQuery 3.6.0リリース。&lt;br&gt;
JSONPのリクエスト時に、エラーレスポンスがJSONを返した場合の挙動を変更。&lt;br&gt;
&lt;code&gt;.focus()&lt;/code&gt;のバグを修正など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;deno-1-8-release-notes&quot;&gt;Deno 1.8 Release Notes&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://deno.land/posts/v1.8&quot; title=&quot;Deno 1.8 Release Notes&quot;&gt;deno.land/posts/v1.8&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;deno&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Deno 1.8.0リリース。&lt;br&gt;
試験的にWebGPU APIのサポート。&lt;br&gt;
ICUに対応しECMA i18n APIである&lt;code&gt;Intl&lt;/code&gt; オブジェクトなどのサポート。&lt;code&gt;DENO_AUTH_TOKENS&lt;/code&gt;でモジュールを取得する際の認証トークンをサポート、Exit sanitierを&lt;code&gt;Deno.test&lt;/code&gt;に追加、&lt;code&gt;deno fmt&lt;/code&gt;がJSONをサポート、TypeScript 4.2へアップデート。&lt;br&gt;
Import Map、&lt;code&gt;Deno.permissions&lt;/code&gt;、&lt;code&gt;Deno.link&lt;/code&gt;、&lt;code&gt;Deno.symlink&lt;/code&gt; APIがそれぞれStable APIとなった。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;new-microsoft-edge-to-replace-microsoft-edge-legacy-with-april-s-windows-10-update-tuesday-release-microsoft-tech-community&quot;&gt;New Microsoft Edge to replace Microsoft Edge Legacy with April’s Windows 10 Update Tuesday release - Microsoft Tech Community&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://techcommunity.microsoft.com/t5/microsoft-365-blog/new-microsoft-edge-to-replace-microsoft-edge-legacy-with-april-s/ba-p/2114224&quot; title=&quot;New Microsoft Edge to replace Microsoft Edge Legacy with April’s Windows 10 Update Tuesday release - Microsoft Tech Community&quot;&gt;techcommunity.microsoft.com/t5/microsoft-365-blog/new-microsoft-edge-to-replace-microsoft-edge-legacy-with-april-s/ba-p/2114224&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;MSEdge&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Microsoft Edge Legacyは2021年3月9日でサポート終了される。&lt;br&gt;
また、2021年4月13に削除されるセキュリティアップデートが配信され、同時に新しいChromiumベースのMSEdgeがインストールされる。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chromium-blog-speeding-up-chromes-release-cycle&quot;&gt;Chromium Blog: Speeding up Chrome&amp;#039;s release cycle&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.chromium.org/2021/03/speeding-up-release-cycle.html&quot; title=&quot;Chromium Blog: Speeding up Chrome&amp;amp;#039;s release cycle&quot;&gt;blog.chromium.org/2021/03/speeding-up-release-cycle.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chromeのリリースサイクルが6週間ごとから4週間ごとに短縮される。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-the-new-typescript-handbook-typescript&quot;&gt;Announcing the New TypeScript Handbook | TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://devblogs.microsoft.com/typescript/announcing-the-new-typescript-handbook/&quot; title=&quot;Announcing the New TypeScript Handbook | TypeScript&quot;&gt;devblogs.microsoft.com/typescript/announcing-the-new-typescript-handbook/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScript Handbookが刷新された。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.typescriptlang.org/docs/&quot; title=&quot;TypeScript: The starting point for learning TypeScript&quot;&gt;TypeScript: The starting point for learning TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;electron-12-0-0-electron-blog&quot;&gt;Electron 12.0.0 | Electron Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.electronjs.org/blog/electron-12-0&quot; title=&quot;Electron 12.0.0 | Electron Blog&quot;&gt;www.electronjs.org/blog/electron-12-0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Electron&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Electron 12.0.0リリース。&lt;br&gt;
Chromium 89、V8 8.9、Node.js 14.16へアップデート。&lt;br&gt;
&lt;code&gt;exposeInMainWorld&lt;/code&gt;がオブジェクト以外をサポート、&lt;code&gt;webFrameMain&lt;/code&gt; APIの追加など。&lt;br&gt;
&lt;code&gt;contextIsolation&lt;/code&gt;と&lt;code&gt;worldSafeExecuteJavaScript&lt;/code&gt;がデフォルトで&lt;code&gt;true&lt;/code&gt;に変更、&lt;code&gt;remote&lt;/code&gt;モジュールが非推奨となり&lt;code&gt;@electron/remote&lt;/code&gt;外部モジュール化&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/electron/remote&quot; title=&quot;electron/remote: Bridge JavaScript objects from the main process to the renderer process in Electron.&quot;&gt;electron/remote: Bridge JavaScript objects from the main process to the renderer process in Electron.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v6-0-0-pixijs-pixi-js&quot;&gt;Release v6.0.0 · pixijs/pixi.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/pixijs/pixi.js/releases/tag/v6.0.0&quot; title=&quot;Release v6.0.0 · pixijs/pixi.js&quot;&gt;github.com/pixijs/pixi.js/releases/tag/v6.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;game&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;canvas&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebGL&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;pixi.js 6.0.0リリース。&lt;br&gt;
TypeScriptの型改善、DeprecatedとなっていたAPIの削除、&lt;code&gt;alpha&lt;/code&gt;オプションのデフォルト値を&lt;code&gt;true&lt;/code&gt;に変更、&lt;code&gt;FAIL_IF_MAJOR_PERFORMANCE_CAVEAT&lt;/code&gt;のデフォルト値を&lt;code&gt;false&lt;/code&gt;に変更など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;google-developers-blog-announcing-flutter-2&quot;&gt;Google Developers Blog: Announcing Flutter 2&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.googleblog.com/2021/03/announcing-flutter-2.html&quot; title=&quot;Google Developers Blog: Announcing Flutter 2&quot;&gt;developers.googleblog.com/2021/03/announcing-flutter-2.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Flutter&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Flutter 2リリース。&lt;br&gt;
WebサポートとデスクトップサポートがStableとなり、Dart 2.12をサポート。&lt;br&gt;
iOSでAutocompleteとScaffoldMessengerのサポートなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/dartlang/announcing-dart-2-12-499a6e689c87&quot; title=&quot;Dart 2.12&quot;&gt;Dart 2.12&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/flutter/flutter-web-support-hits-the-stable-milestone-d6b84e83b425&quot; title=&quot;Flutter web support hits the stable milestone | Flutter&quot;&gt;Flutter web support hits the stable milestone | Flutter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/flutter/whats-new-in-flutter-2-0-fe8e95ecc65&quot; title=&quot;What’s New in Flutter 2. by Chris Sells | Mar, 2021 | Medium | Flutter | Flutter&quot;&gt;What’s New in Flutter 2. by Chris Sells | Mar, 2021 | Medium | Flutter | Flutter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;mini-apps-web-dev&quot;&gt;Mini apps - web.dev&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://web.dev/mini-apps/&quot; title=&quot;Mini apps - web.dev&quot;&gt;web.dev/mini-apps/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Mini appsのエコシステムの記事&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;hiding-content-responsibly-kitty-giraudel&quot;&gt;Hiding Content Responsibly | Kitty Giraudel&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://kittygiraudel.com/2021/02/17/hiding-content-responsibly/&quot; title=&quot;Hiding Content Responsibly | Kitty Giraudel&quot;&gt;kittygiraudel.com/2021/02/17/hiding-content-responsibly/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;accessibility&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;コンテンツの非表示を意味するCSSやWAI-ARIA属性のそれぞれの動作とアクセシビリティ的な挙動についてのまとめ。&lt;br&gt;
データ、ビジュアル、レイアウト、セマンティクス、コンテンツ、キーボード、ポインター、スタイルなどの状態について&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://codepen.io/vincent-valentin/full/JjGmxzV&quot; title=&quot;removal techniques and implications&quot;&gt;removal techniques and implications&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;serverless-stack-serverless-stack-serverless-stack-sst-is-a-framework-that-makes-it-easy-to-build-serverless-apps&quot;&gt;serverless-stack/serverless-stack: Serverless Stack (SST) is a framework that makes it easy to build serverless apps.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/serverless-stack/serverless-stack&quot; title=&quot;serverless-stack/serverless-stack: Serverless Stack (SST) is a framework that makes it easy to build serverless apps.&quot;&gt;github.com/serverless-stack/serverless-stack&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;serverless&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;aws&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;AWS CDKを使ったserverless管理、開発ツール。&lt;br&gt;
Lambdaの開発、デプロイ、ビルドやLintの設定、各種AWSスタックとの連携などを含む&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;nightlycommit-twing-first-class-twig-engine-for-node-js&quot;&gt;NightlyCommit/twing: First-class Twig engine for Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/NightlyCommit/twing&quot; title=&quot;NightlyCommit/twing: First-class Twig engine for Node.js&quot;&gt;github.com/NightlyCommit/twing&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;テンプレートエンジンであるTwigのJavaScript実装ライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jakepartusch-serverlessui-a-command-line-utility-for-deploying-serverless-applications-to-aws-complete-with-custom-domains-deploy-previews-typescript-support-and-more&quot;&gt;JakePartusch/serverlessui: A command-line utility for deploying serverless applications to AWS. Complete with custom domains, deploy previews, TypeScript support, and more.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/JakePartusch/serverlessui&quot; title=&quot;JakePartusch/serverlessui: A command-line utility for deploying serverless applications to AWS. Complete with custom domains, deploy previews, TypeScript support, and more.&quot;&gt;github.com/JakePartusch/serverlessui&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;aws&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;serverless&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;AWSへserverlessアプリケーションをデプロイするためのツール。&lt;br&gt;
CDKを使って静的なサイトとlambdaなどのデプロイを一括で行う&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;nanojsx-nano-ssr-first-lightweight-1kb-jsx-library&quot;&gt;nanojsx/nano: 🎯 SSR first, lightweight 1kB JSX library.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/nanojsx/nano&quot; title=&quot;nanojsx/nano: 🎯 SSR first, lightweight 1kB JSX library.&quot;&gt;github.com/nanojsx/nano&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;jsx&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JSXを使ったSSR firstなUIライブラリ。&lt;br&gt;
指定したコンポーネントのみをHydrate、Lazy Hydrateができ、ビルトインでRouterやHead周りのコンポーネントを持っている。&lt;br&gt;
ReactライクなライフサイクルメソッドやHooksの処理を持っている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://nanojsx.github.io/&quot; title=&quot;Nano JSX • Lightweight 1kB JSX library&quot;&gt;Nano JSX • Lightweight 1kB JSX library&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;
</description>
        <pubDate>Mon, 08 Mar 2021 23:53:58 +0900</pubDate>
        <link>https://jser.info/2021/03/08/gatsby-3-electron-12/</link>
        <guid isPermaLink="true">https://jser.info/2021/03/08/gatsby-3-electron-12/</guid>
        
        <category>React</category>
        
        <category>serverless</category>
        
        <category>aws</category>
        
        <category>GraphQL</category>
        
        <category>jQuery</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2021-03-02のJS: Bundle Size以外のJavaScriptパフォーマンス、CORS 完全手冊</title>
        <description>&lt;p&gt;JSer.info #529 - &lt;a href=&quot;https://nolanlawson.com/2021/02/23/javascript-performance-beyond-bundle-size/&quot;&gt;JavaScript performance beyond bundle size | Read the Tea Leaves&lt;/a&gt;という記事では、JavaScriptのパフォーマンス測定について書かれています。&lt;br&gt;
最近では、Bundle Sizeについては&lt;a href=&quot;https://bundlephobia.com/&quot;&gt;BundlePhobia&lt;/a&gt;や&lt;a href=&quot;https://github.com/webpack-contrib/webpack-bundle-analyzer&quot;&gt;Webpack Bundle Analyzer&lt;/a&gt;など分かりやすく測定するツールがありますが、それ以外のJavaScriptのパフォーマンスのメトリクスについて書かれています。&lt;/p&gt;

&lt;p&gt;ランタイムのCPUコスト、電力消費量、メモリ使用量、ディスクの使用量などのBundle Size以外のメトリクスをどのように見るのかについてまとめられています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.huli.tw/2021/02/19/cors-guide-1/&quot;&gt;CORS 完全手冊&lt;/a&gt;というCORSについての連載記事では、&lt;br&gt;
CORSの概念、対応方法、よくある間違い、CORB/CORP/COEP/COOPなど最近のオリジン関連のルール、セキュリティ的な問題について書かれています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.huli.tw/2021/02/19/cors-guide-1/&quot;&gt;CORS 完全手冊（一）：為什麼會發生 CORS 錯誤？&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;クロスオリジンリクエストとは何か? CORSエラーはなぜおきるのかについて &lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.huli.tw/2021/02/19/cors-guide-2/&quot;&gt;CORS 完全手冊（二）：如何解決 CORS 問題？&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;CORS対応の仕方(expressを例にしている)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.huli.tw/2021/02/19/cors-guide-3/&quot;&gt;CORS 完全手冊（三）：CORS 詳解&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;CORSの仕組み、それぞれのヘッダの意味をシナリオと合わせて解説している&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.huli.tw/2021/02/19/cors-guide-4/&quot;&gt;CORS 完全手冊（四）：一起看規範&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;CORSの仕様を&lt;a href=&quot;https://fetch.spec.whatwg.org/&quot;&gt;Fetch Standard&lt;/a&gt;と共に解説。&lt;code&gt;Vary&lt;/code&gt;ヘッダでのキャッシュの注意点についても書かれている&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.huli.tw/2021/02/19/cors-guide-5/&quot;&gt;CORS 完全手冊（五）：跨來源的安全性問題&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;res.headers[&amp;#39;Access-Control-Allow-Origin&amp;#39;] = req.headers[&amp;#39;Origin&amp;#39;]&lt;/code&gt; のようにOriginをオウム返しするよくある設定ミス(脆弱性)について&lt;/li&gt;
&lt;li&gt;CORB/CORP/COEP/COOPとSite Isolationについて&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.huli.tw/2021/02/19/cors-guide-6/&quot;&gt;CORS 完全手冊（六）：總結、後記與遺珠&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;CORSのエラーのパターン分類、Origin Policy、CORSの細かな話など&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;CORSについて必要な知識がほとんど書かれているため、おすすめです。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-env-a-better-way-to-read-environment-variables-in-javascript-human-who-codes&quot;&gt;Introducing Env: a better way to read environment variables in JavaScript - Human Who Codes&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://humanwhocodes.com/blog/2021/02/introducing-env-javascript-environment-variables/&quot; title=&quot;Introducing Env: a better way to read environment variables in JavaScript - Human Who Codes&quot;&gt;humanwhocodes.com/blog/2021/02/introducing-env-javascript-environment-variables/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;環境変数のよくある問題を回避するライブラリについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;css-in-js-support-in-devtools-web-google-developers&quot;&gt;CSS-in-JS support in DevTools  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2021/02/css-in-js&quot; title=&quot;CSS-in-JS support in DevTools  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/updates/2021/02/css-in-js&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 85 DevToolsのCSS-in-JSの対応について。&lt;br&gt;
今まではCSSOM APIで追加されたルールのスタイルは編集できなかったが、編集できるようになったという話&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-performance-beyond-bundle-size-read-the-tea-leaves&quot;&gt;JavaScript performance beyond bundle size | Read the Tea Leaves&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nolanlawson.com/2021/02/23/javascript-performance-beyond-bundle-size/&quot; title=&quot;JavaScript performance beyond bundle size | Read the Tea Leaves&quot;&gt;nolanlawson.com/2021/02/23/javascript-performance-beyond-bundle-size/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptのBundle sizeとランタイムのCPUコスト、メモリ使用量、電力使用量の調べ方について。&lt;br&gt;
Bundle SizeについてはBundlePhobiaやWeb Vitalsなどで分かるようになってきているが、パフォーマンスはもっと多面的なものであるため、他のメトリクスをどのように見るかについて&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://bundlephobia.com/&quot; title=&quot;BundlePhobia ❘ cost of adding a npm package&quot;&gt;BundlePhobia ❘ cost of adding a npm package&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;how-web-content-can-affect-power-usage-webkit&quot;&gt;How Web Content Can Affect Power Usage | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/8970/how-web-content-can-affect-power-usage/&quot; title=&quot;How Web Content Can Affect Power Usage | WebKit&quot;&gt;webkit.org/blog/8970/how-web-content-can-affect-power-usage/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webkit&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CPU、GPU、ネットワークなどが電力消費に与える影響について。&lt;br&gt;
バックグラウンド時にCPU消費をなくす方法、Web InspectorのEnergy Impactの表示について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;why-javascript-developers-should-prefer-axios-over-fetch-by-sabesan-sathananthan-feb-2021-better-programming&quot;&gt;Why JavaScript Developers Should Prefer Axios Over Fetch | by Sabesan Sathananthan | Feb, 2021 | Better Programming&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://betterprogramming.pub/why-javascript-developers-should-prefer-axios-over-fetch-294b28a96e2c&quot; title=&quot;Why JavaScript Developers Should Prefer Axios Over Fetch | by Sabesan Sathananthan | Feb, 2021 | Better Programming&quot;&gt;betterprogramming.pub/why-javascript-developers-should-prefer-axios-over-fetch-294b28a96e2c&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Fetch&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Fetch APIとaxiosの比較。&lt;br&gt;
レスポンスデータの自動変換、エラー処理、ダウンロードのprogress処理、アップロードのprogress処理、HTTPのインターセプト、タイムアウト、並列リクエストについて比較している&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;use-css-variables-instead-of-react-context-epic-react-by-kent-c-dodds&quot;&gt;Use CSS Variables instead of React Context | Epic React by Kent C. Dodds&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://epicreact.dev/css-variables/&quot; title=&quot;Use CSS Variables instead of React Context | Epic React by Kent C. Dodds&quot;&gt;epicreact.dev/css-variables/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CSS-in-JSを使ったThemeコンポーネントのようなテーマの切り替えをCSS Custom Propertiesで実装してみる話。&lt;br&gt;
実装の違い、レンダリングフローの違いについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-context-export-stins-blog&quot;&gt;React Context を export するのはアンチパターンではないかと考える | stin&amp;#039;s blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.stin.ink/articles/do-not-export-react-context&quot; title=&quot;React Context を export するのはアンチパターンではないかと考える | stin&amp;amp;#039;s blog&quot;&gt;blog.stin.ink/articles/do-not-export-react-context&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React Contextをモジュールからexportするのではなく、Custom Hookとしてexportするという話。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;cors-cors-huli&quot;&gt;CORS 完全手冊（一）：為什麼會發生 CORS 錯誤？ - Huli&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.huli.tw/2021/02/19/cors-guide-1/&quot; title=&quot;CORS 完全手冊（一）：為什麼會發生 CORS 錯誤？ - Huli&quot;&gt;blog.huli.tw/2021/02/19/cors-guide-1/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CORS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CORSの概念、対応方法、よくある間違い、CORB/CORP/COEP/COOPなどオリジン関連のルール、セキュリティ的な問題についての連載記事。&lt;br&gt;
クロスオリジンリクエストはなぜブロックされるのか、CORSの仕様解説、CORSのキャッシュ、CORSの設定ミスなどについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;whats-new-in-devtools-chrome-90-web-google-developers&quot;&gt;What&amp;#039;s New In DevTools (Chrome 90)  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2021/02/devtools&quot; title=&quot;What&amp;amp;#039;s New In DevTools (Chrome 90)  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/updates/2021/02/devtools&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 90のDev Toolsの変更点について。&lt;br&gt;
CSS flexboxのデバッグツールの追加、Core Web Vitalsのオーバーレイ表示、&lt;br&gt;
Issues tabの改善、CSS color-gamutのエミュレート機能の追加。&lt;br&gt;
Dev Toolsを開いた状態でのデバッグのパフォーマンス改善、&lt;code&gt;fn.displayName&lt;/code&gt;のサポートを非推奨化など&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;goudekettingrm-link-overview-jsworld-2021&quot;&gt;GoudekettingRM/link-overview-jsworld-2021&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/GoudekettingRM/link-overview-jsworld-2021&quot; title=&quot;GoudekettingRM/link-overview-jsworld-2021&quot;&gt;github.com/GoudekettingRM/link-overview-jsworld-2021&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Conference&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JS World 2021のスライドや動画のまとめ&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://frontenddeveloperlove.com/&quot; title=&quot;JS World - Online Conference by Frontend Love&quot;&gt;JS World - Online Conference by Frontend Love&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jcubic-tagger-zero-dependency-vanilla-javascript-tag-editor&quot;&gt;jcubic/tagger: Zero Dependency, Vanilla JavaScript Tag Editor&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jcubic/tagger&quot; title=&quot;jcubic/tagger: Zero Dependency, Vanilla JavaScript Tag Editor&quot;&gt;github.com/jcubic/tagger&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;依存のないタグ入力UIライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;wynntee-joss-joss-can-serialize-almost-every-javascript-data-type-and-data-structure-so-data-can-be-seamlessly-exchanged-between-browsers-and-servers-deno-or-node-js&quot;&gt;wynntee/joss: JOSS can serialize almost every JavaScript data type and data structure, so data can be seamlessly exchanged between browsers and servers (Deno or Node.js).&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/wynntee/joss&quot; title=&quot;wynntee/joss: JOSS can serialize almost every JavaScript data type and data structure, so data can be seamlessly exchanged between browsers and servers (Deno or Node.js).&quot;&gt;github.com/wynntee/joss&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JOSSというJavaScriptオブジェクトのシリアライズ、デシアライズの仕様とそのリファレンス実装ライブラリ。&lt;br&gt;
BigInt、循環参照、疎な配列、&lt;code&gt;-0&lt;/code&gt;などJSONにはない部分もサポートしている。&lt;br&gt;
ブラウザ、Node、Denoで動作する&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.wynntee.com/projects/serialization/specification/index.html&quot; title=&quot;JS Open Serialization Scheme&quot;&gt;JS Open Serialization Scheme&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;andrewcourtice-harlem-simple-unopinionated-lightweight-and-extensible-state-management-for-vue-3&quot;&gt;andrewcourtice/harlem: Simple, unopinionated, lightweight and extensible state management for Vue 3&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/andrewcourtice/harlem&quot; title=&quot;andrewcourtice/harlem: Simple, unopinionated, lightweight and extensible state management for Vue 3&quot;&gt;github.com/andrewcourtice/harlem&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Vue 3向けのステート管理ライブラリ。&lt;br&gt;
pluginでVue DevToolsへの対応や、SSR、Storage保存、トランザクション対応などができる。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react&quot;&gt;React テスト応用、テストに悩む人へ&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://zenn.dev/tkdn/books/react-testing-patterns&quot; title=&quot;React テスト応用、テストに悩む人へ&quot;&gt;zenn.dev/tkdn/books/react-testing-patterns&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ReactコンポーネントとHooksのテストについての書籍。&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 02 Mar 2021 06:33:41 +0900</pubDate>
        <link>https://jser.info/2021/03/02/bundle-sizejavascript-cors/</link>
        <guid isPermaLink="true">https://jser.info/2021/03/02/bundle-sizejavascript-cors/</guid>
        
        <category>debug</category>
        
        <category>React</category>
        
        <category>Chrome</category>
        
        <category>CSS</category>
        
        <category>performance</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2021-02-24のJS: Vite v2、Babel 7.13.0(設定の共通化)、WHATWG Streams入門ガイド</title>
        <description>&lt;p&gt;JSer.info #528 - 開発環境ツールのVite 2.0リリース。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://dev.to/yyx990803/announcing-vite-2-0-2f0a&quot;&gt;Announcing Vite 2.0 - DEV Community 👩‍💻👨‍💻&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://vitejs.dev/&quot;&gt;Vite&lt;/a&gt; 2.0ではフレームワークに依存しない作りとなり、&lt;a href=&quot;https://github.com/vitejs/vite/tree/main/packages/create-app&quot;&gt;さまざまなフレームワークに対応したテンプレート&lt;/a&gt;が用意されています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/preactjs/wmr&quot;&gt;PreactのWMR&lt;/a&gt;をインスパイアしたRollupを拡張したプラグインのサポート、CSSの扱いを改善しています。&lt;br&gt;
また、試験的に&lt;a href=&quot;https://vitejs.dev/guide/ssr.html&quot;&gt;SSR&lt;/a&gt;のサポートが追加されています。&lt;/p&gt;

&lt;p&gt;あわせて1.xからのマイグレーションガイドも公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://vitejs.dev/guide/migration.html#config-options-change&quot;&gt;Migration from v1 | Vite&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;Babel 7.13.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://babeljs.io/blog/2021/02/22/7.13.0&quot;&gt;7.13.0 Released: Records and Tuples, granular compiler assumptions, and top-level targets · Babel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Babelの設定内で各pluginsやpresetsで重複していた設定をまとめて扱えるものとして、&lt;code&gt;targets&lt;/code&gt;と&lt;code&gt;assumptions&lt;/code&gt;のサポートが追加されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;targets&lt;/code&gt;: サポートするブラウザの情報を記述するオプション
-&lt;code&gt;assumptions&lt;/code&gt;:  仕様のエッジケースを無視してより小さなコードを出力するためのオプション&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;assumptions&lt;/code&gt;は各pluginsやpresetsで&lt;code&gt;loose&lt;/code&gt;として実装されていたものをまとめたオプションです。&lt;br&gt;
その他には、ES Proposal Stage 2のRecordsとTuplesのサポート、Flowの&lt;code&gt;this&lt;/code&gt;パラメータのサポート、TypeScript 4.2のサポートなどが追加されています。&lt;br&gt;
また、&lt;code&gt;@babel/runtime&lt;/code&gt;がNode.jsの&lt;code&gt;exports&lt;/code&gt;フィールドに対応し、&lt;code&gt;useESModules&lt;/code&gt;オプションは非推奨となりました。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://web.dev/streams/&quot;&gt;Streams—The definitive guide&lt;/a&gt;という記事では、WHATWG Streamについて詳しく解説されています。&lt;/p&gt;

&lt;p&gt;Streamの基本的なコンセプト、仕組み、&lt;code&gt;ReadableStream&lt;/code&gt;/&lt;code&gt;WritableStream&lt;/code&gt;/&lt;code&gt;TransformStream&lt;/code&gt;の使い方と&lt;code&gt;pipeTo&lt;/code&gt;でのつなぎ方について書かれています。&lt;br&gt;
また、Fetch API、Text Encoding、Compression、File System API、Web SocketsなどStreamをサポートしているAPIについても紹介しています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-vite-2-0-dev-community&quot;&gt;Announcing Vite 2.0 - DEV Community 👩‍💻👨‍💻&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://dev.to/yyx990803/announcing-vite-2-0-2f0a&quot; title=&quot;Announcing Vite 2.0 - DEV Community 👩‍💻👨‍💻&quot;&gt;dev.to/yyx990803/announcing-vite-2-0-2f0a&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;フレームワークに依存しない開発環境ツールのVite 2.0リリース。&lt;br&gt;
公式のテンプレートを用意しVue以外もサポート、WMRをインスパイアしたRollupを拡張したプラグインのサポート、CSSの扱いを改善。&lt;br&gt;
また、試験的にSSRのサポートしている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://vitejs.dev/guide/migration.html#config-options-change&quot; title=&quot;Migration from v1 | Vite&quot;&gt;Migration from v1 | Vite&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v15-9-0-current-node-js&quot;&gt;Node v15.9.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v15.9.0/&quot; title=&quot;Node v15.9.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v15.9.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 15.9.0リリース。&lt;br&gt;
&lt;code&gt;fs/promises&lt;/code&gt;に&lt;code&gt;watch()&lt;/code&gt;を追加、&lt;code&gt;fs.watch&lt;/code&gt;がAbortSignalをサポート、&lt;code&gt;timers/promises&lt;/code&gt;で&lt;code&gt;setInterval&lt;/code&gt;をasync iteratorとして扱えるように&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-3-9-0-2021-02-19-zloirock-core-js&quot;&gt;Release 3.9.0 - 2021.02.19 · zloirock/core-js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zloirock/core-js/releases/tag/v3.9.0&quot; title=&quot;Release 3.9.0 - 2021.02.19 · zloirock/core-js&quot;&gt;github.com/zloirock/core-js/releases/tag/v3.9.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;polyfill&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;core-js 3.9.0リリース。&lt;br&gt;
ES Proposal Stage 1の&lt;code&gt;Array#findLast()&lt;/code&gt;、&lt;code&gt;Array#findLastIndex()&lt;/code&gt;のサポート。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v2-0-0-svg-svgo&quot;&gt;Release v2.0.0 · svg/svgo&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/svg/svgo/releases/tag/v2.0.0&quot; title=&quot;Release v2.0.0 · svg/svgo&quot;&gt;github.com/svg/svgo/releases/tag/v2.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;SVG&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;SVG最適化ツールであるSVGO 2.0リリース。&lt;br&gt;
設定ファイルの書式の変更、CLIでinline json configを渡せないように変更、Node.js APIの変更。&lt;br&gt;
また、ブラウザ向けのbundleを同梱するようになるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v1-0-0-rc-1-video-dev-hls-js&quot;&gt;Release v1.0.0-rc.1 · video-dev/hls.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/video-dev/hls.js/releases/tag/v1.0.0-rc.1&quot; title=&quot;Release v1.0.0-rc.1 · video-dev/hls.js&quot;&gt;github.com/video-dev/hls.js/releases/tag/v1.0.0-rc.1&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;HLS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;hls.js 1.0.0 RC1リリース。&lt;br&gt;
破壊的な変更としてAPIの一部変更、Promiseへ依存するようになった。&lt;br&gt;
Low-Latency HLSサポート、実験的にIMSC1の基本的な機能をサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v5-24-0-webpack-webpack&quot;&gt;Release v5.24.0 · webpack/webpack&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/webpack/webpack/releases/tag/v5.24.0&quot; title=&quot;Release v5.24.0 · webpack/webpack&quot;&gt;github.com/webpack/webpack/releases/tag/v5.24.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;webpack 5.24.0リリース。&lt;br&gt;
Concatenationするモジュールを探索する際のパフォーマンス改善&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/webpack/webpack/pull/12745&quot; title=&quot;improve performance of finding modules for concatenation by sokra · Pull Request #12745 · webpack/webpack&quot;&gt;improve performance of finding modules for concatenation by sokra · Pull Request #12745 · webpack/webpack&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;7-13-0-released-records-and-tuples-granular-compiler-assumptions-and-top-level-targets-babel&quot;&gt;7.13.0 Released: Records and Tuples, granular compiler assumptions, and top-level targets · Babel&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://babeljs.io/blog/2021/02/22/7.13.0&quot; title=&quot;7.13.0 Released: Records and Tuples, granular compiler assumptions, and top-level targets · Babel&quot;&gt;babeljs.io/blog/2021/02/22/7.13.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Babel 7.13.0リリース。&lt;br&gt;
&lt;code&gt;targets&lt;/code&gt;の設定をTop-Levelに書くことで各プラグインがその設定を利用するように、仕様のエッジケースを無視してより小さなコードを出力する&lt;code&gt;assumptions&lt;/code&gt;オプションの追加。&lt;br&gt;
ES Proposal Stage 2のRecordsとTuplesのサポート、Flowの&lt;code&gt;this&lt;/code&gt;パラメータのサポート、TypeScript 4.2のサポートなど。&lt;br&gt;
また、&lt;code&gt;@babel/runtime&lt;/code&gt;がNode.jsの&lt;code&gt;exports&lt;/code&gt;フィールドに対応するなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;a-fabulous-february-firefox-86-mozilla-hacks-the-web-developer-blog&quot;&gt;A Fabulous February Firefox — 86! - Mozilla Hacks - the Web developer blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2021/02/a-fabulous-february-firefox-86/&quot; title=&quot;A Fabulous February Firefox — 86! - Mozilla Hacks - the Web developer blog&quot;&gt;hacks.mozilla.org/2021/02/a-fabulous-february-firefox-86/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Firefox 86リリース。&lt;br&gt;
ETPのStrict ModeでState Partitioningを導入、Dev Toolsで&lt;code&gt;iframe&lt;/code&gt;のinspectionを改善。&lt;br&gt;
CSSでprefixなし&lt;code&gt;:autofill&lt;/code&gt;のサポート、&lt;code&gt;Intl.DisplayNames&lt;/code&gt;をデフォルトで有効化など。&lt;br&gt;
また、異なるドメインからページをロードした際に&lt;code&gt;Window.name&lt;/code&gt;が空文字列となるように変更されている&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.mozilla.org/en-US/firefox/86.0/releasenotes/&quot; title=&quot;Firefox 86.0, See All New Features, Updates and Fixes&quot;&gt;Firefox 86.0, See All New Features, Updates and Fixes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Releases/86&quot; title=&quot;Firefox 86 for developers - Mozilla | MDN&quot;&gt;Firefox 86 for developers - Mozilla | MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mdn/browser-compat-data/pull/9129&quot; title=&quot;Note Window.name privacy behavior in Firefox 86+ by Rumyra · Pull Request #9129 · mdn/browser-compat-data&quot;&gt;Note Window.name privacy behavior in Firefox 86+ by Rumyra · Pull Request #9129 · mdn/browser-compat-data&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-typescript-4-2-typescript&quot;&gt;Announcing TypeScript 4.2 | TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://devblogs.microsoft.com/typescript/announcing-typescript-4-2/&quot; title=&quot;Announcing TypeScript 4.2 | TypeScript&quot;&gt;devblogs.microsoft.com/typescript/announcing-typescript-4-2/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScript 4.2リリース。&lt;br&gt;
Tuple TypesでRest Elementをサポート、Type Aliasの型追跡の改善、オブジェクトではないオペランドに対する&lt;code&gt;in&lt;/code&gt;演算子のチェックを追加。&lt;code&gt;noPropertyAccessFromIndexSignature&lt;/code&gt;オプションの追加、&lt;code&gt;abstract new&lt;/code&gt;のサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;february-2021-security-releases-node-js&quot;&gt;February 2021 Security Releases | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/vulnerability/february-2021-security-releases/&quot; title=&quot;February 2021 Security Releases | Node.js&quot;&gt;nodejs.org/en/blog/vulnerability/february-2021-security-releases/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.jsのセキュリティアップデートとして10.x、12.x、14.x、15.xがそれぞれリリースされている。&lt;br&gt;
HTTP2のunknownProtocolを使ったDoSの修正、&lt;code&gt;--inspect&lt;/code&gt;時のDNS rebindingの修正、OpenSSLのセキュリティアップデート&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;interview-with-ryan-dahl-node-js-deno-creator-by-evrone&quot;&gt;Interview with Ryan Dahl, Node.js &amp;amp; Deno creator by Evrone&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://evrone.com/ryan-dahl-interview&quot; title=&quot;Interview with Ryan Dahl, Node.js &amp;amp;amp; Deno creator by Evrone&quot;&gt;evrone.com/ryan-dahl-interview&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;deno&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Interview&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;opinion&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.jsとDenoの作者であるRyan Dahlのインタビュー記事。&lt;br&gt;
JavaScript/TypeScript、Denoの設計、プログラミング言語の特性と問題領域、オープンソースについてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;understanding-z-index-in-css&quot;&gt;Understanding Z-Index in CSS&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ishadeed.com/article/understanding-z-index/&quot; title=&quot;Understanding Z-Index in CSS&quot;&gt;ishadeed.com/article/understanding-z-index/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CSSの&lt;code&gt;z-index&lt;/code&gt;について図とともに視覚的に学べるチュートリアル。&lt;br&gt;
スタックコンテキスト、スタックコンテキストを作るプロパティ、&lt;code&gt;z-index&lt;/code&gt;との関係について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;using-abortcontroller-as-an-alternative-for-removing-event-listeners-css-tricks&quot;&gt;Using AbortController as an Alternative for Removing Event Listeners | CSS-Tricks&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://css-tricks.com/using-abortcontroller-as-an-alternative-for-removing-event-listeners/&quot; title=&quot;Using AbortController as an Alternative for Removing Event Listeners | CSS-Tricks&quot;&gt;css-tricks.com/using-abortcontroller-as-an-alternative-for-removing-event-listeners/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 88から&lt;code&gt;addEventListener&lt;/code&gt;がAbort Signalに対応したため、&lt;code&gt;removeEventListener&lt;/code&gt;を使わずにイベントリスナーを解除できるという話&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;listify-a-javascript-array&quot;&gt;Listify a JavaScript Array&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://kentcdodds.com/blog/listify-a-java-script-array&quot; title=&quot;Listify a JavaScript Array&quot;&gt;kentcdodds.com/blog/listify-a-java-script-array&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;i18n&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Intl.ListFormat&lt;/code&gt;を使うことで、&amp;quot;A, B, and C&amp;quot;のような言語に応じたandとorの表現を作成できるという話&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-state-partitioning-mozilla-hacks-the-web-developer-blog&quot;&gt;Introducing State Partitioning - Mozilla Hacks - the Web developer blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2021/02/introducing-state-partitioning/&quot; title=&quot;Introducing State Partitioning - Mozilla Hacks - the Web developer blog&quot;&gt;hacks.mozilla.org/2021/02/introducing-state-partitioning/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Firefox 86でETPのStrictモードを使っている際に有効化されたState Partitioningについて。&lt;br&gt;
Cookieの保存もサイトごとのdoubled keyとなり、3rd party cookieなども分離される。&lt;br&gt;
SSOなどを壊さないようにopenerを使った動作に対するヒューリスティックな回避策やStorage Access APIについても書かれている&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Privacy/State_Partitioning&quot; title=&quot;State Partitioning - Mozilla | MDN&quot;&gt;State Partitioning - Mozilla | MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.mozilla.org/security/2021/02/23/total-cookie-protection/&quot; title=&quot;Firefox 86 Introduces Total Cookie Protection - Mozilla Security Blog&quot;&gt;Firefox 86 Introduces Total Cookie Protection - Mozilla Security Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;streams-the-definitive-guide&quot;&gt;Streams—The definitive guide&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://web.dev/streams/&quot; title=&quot;Streams—The definitive guide&quot;&gt;web.dev/streams/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WHATWG&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;stream&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;WHATWG Streamsについての解説記事。&lt;br&gt;
コンセプト、仕組み、&lt;code&gt;ReadableStream&lt;/code&gt;/&lt;code&gt;WritableStream&lt;/code&gt;/&lt;code&gt;TransformStream&lt;/code&gt;の使い方と&lt;code&gt;pipeTo&lt;/code&gt;での連携。&lt;br&gt;
Fetch API、Text Encoding、Compression、File System API、Web SocketsなどStreamをサポートしているAPIについても紹介している&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;w3c-browser-statuses-implementation-support-information-of-web-technologies-on-main-desktop-and-mobile-browsers&quot;&gt;w3c/browser-statuses: Implementation support information of Web technologies on main desktop and mobile browsers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/w3c/browser-statuses&quot; title=&quot;w3c/browser-statuses: Implementation support information of Web technologies on main desktop and mobile browsers&quot;&gt;github.com/w3c/browser-statuses&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebPlatformAPI&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Can I Use、Chrome Platform Status、MDN、WebKit Feature Statusのデータをノーマライズしたデータセット。&lt;br&gt;
APIごとにブラウザやPolyfillのサポート状況を取得できるライブラリ。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;thomasaribart-json-schema-to-ts-infer-ts-types-from-json-schemas&quot;&gt;ThomasAribart/json-schema-to-ts: Infer TS types from JSON schemas 📝&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ThomasAribart/json-schema-to-ts&quot; title=&quot;ThomasAribart/json-schema-to-ts: Infer TS types from JSON schemas 📝&quot;&gt;github.com/ThomasAribart/json-schema-to-ts&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JSON&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JSON SchemaからTypeScriptの型推論をするライブラリ&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Wed, 24 Feb 2021 12:07:37 +0900</pubDate>
        <link>https://jser.info/2021/02/24/vite-v2-babel-7.13.0-whatwg-streams/</link>
        <guid isPermaLink="true">https://jser.info/2021/02/24/vite-v2-babel-7.13.0-whatwg-streams/</guid>
        
        <category>Tools</category>
        
        <category>node.js</category>
        
        <category>TypeScript</category>
        
        <category>Firefox</category>
        
        <category>security</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2021-02-16のJS: TypeScript 4.2 RC、WebdriverIO v7、Nuxt.js 2.15.0</title>
        <description>&lt;p&gt;JSer.info #527 - TypeScript 4.2 RCがリリースされています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://devblogs.microsoft.com/typescript/announcing-typescript-4-2-rc/&quot;&gt;Announcing TypeScript 4.2 RC | TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tuple TypesでRest Elementをサポート、Type Aliasの型追跡の仕組みを改善して表示される型が分かりやすくなるように。&lt;br&gt;
また、オブジェクトではないオペランドに対して&lt;code&gt;in&lt;/code&gt;演算子を利用した場合に、コンパイルエラーとなるように変更。&lt;br&gt;
その他には、&lt;code&gt;noPropertyAccessFromIndexSignature&lt;/code&gt;オプションの追加、&lt;code&gt;abstract new&lt;/code&gt;のサポート、&lt;code&gt;--explainFiles&lt;/code&gt;フラグが追加されています。&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://devblogs.microsoft.com/typescript/announcing-typescript-4-2-beta/&quot;&gt;TypeScript 4.2 Beta&lt;/a&gt;の時点では、Template Literal式をデフォルトでTemplate Literal Typeとして扱うように変更されていました。&lt;br&gt;
しかし、この挙動は&lt;a href=&quot;https://github.com/microsoft/TypeScript/issues/42589&quot;&gt;望ましくないケース&lt;/a&gt;もあることがわかり、revertしてデフォルトでは&lt;code&gt;string&lt;/code&gt;として扱うようになっています。&lt;br&gt;
4.2 RCでは、Template Literal式に &lt;code&gt;as const&lt;/code&gt; をつけた場合のみ、Template Literal Typeとして扱うようになっています。&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span class=&quot;kr&quot;&gt;declare&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;yourName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 'bar' has type '`hello ${string}`'.&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;hello &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;yourName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//                              ^^^^^^^^&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 'baz' has type 'string'.&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;baz&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;hello &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;yourName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;WebdriverIO v7がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://webdriver.io/blog/2021/02/09/webdriverio-v7-released/&quot;&gt;WebdriverIO v7 Released | WebdriverIO&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Node.js 10のサポート終了、TypeScriptでの書き直し、Cucumber v7へアップデート、Lightouse連携の改善が含まれています。&lt;br&gt;
&lt;code&gt;browser.checkPWA()&lt;/code&gt;の追加、&lt;code&gt;@babel/register&lt;/code&gt;や&lt;code&gt;ts-node&lt;/code&gt;がインストールされている場合に自動的にコンパイルする&lt;a href=&quot;https://webdriver.io/docs/configurationfile&quot;&gt;&lt;code&gt;autoCompileOpts&lt;/code&gt;&lt;/a&gt;オプションの追加などが含まれています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Nuxt.js 2.15.0がリリースされています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nuxt/nuxt.js/releases/tag/v2.15.0&quot;&gt;Release v2.15.0 · nuxt/nuxt.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nuxt/components#migration-guide&quot;&gt;nuxt/components: Scan and auto import components for Nuxt.js 2.13+&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nuxt-contrib/jiti&quot;&gt;nuxt-contrib/jiti: Runtime Typescript and ESM support for Node.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;破壊的な変更としてNode.js 10のサポート終了、&lt;code&gt;@nuxt/components&lt;/code&gt; v2へのアップデートが含まれています。&lt;br&gt;
&lt;code&gt;@nuxt/components&lt;/code&gt; v2へのアップデートするマイグレーションガイドも公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nuxt/components#migration-guide&quot; title=&quot;nuxt/components: Scan and auto import components for Nuxt.js 2.13+&quot;&gt;nuxt/components: Scan and auto import components for Nuxt.js 2.13+&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;その他にはYarnのPlug&amp;#39;n&amp;#39;Playのサポート、PostCSS 8をopt-inでサポートしています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v4-0-0-lerna-lerna&quot;&gt;Release v4.0.0 · lerna/lerna&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/lerna/lerna/releases/tag/v4.0.0&quot; title=&quot;Release v4.0.0 · lerna/lerna&quot;&gt;github.com/lerna/lerna/releases/tag/v4.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;monorepo&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;lerna 4.0.0リリース。&lt;br&gt;
Node.js 10未満のサポート終了、依存のアップデートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-typescript-4-2-rc-typescript&quot;&gt;Announcing TypeScript 4.2 RC | TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://devblogs.microsoft.com/typescript/announcing-typescript-4-2-rc/&quot; title=&quot;Announcing TypeScript 4.2 RC | TypeScript&quot;&gt;devblogs.microsoft.com/typescript/announcing-typescript-4-2-rc/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScript 4.2 RCリリース。&lt;br&gt;
Tuple TypesでRest Elementをサポート、Type Aliasの型追跡の改善、オブジェクトではないオペランドに対する&lt;code&gt;in&lt;/code&gt;演算子のチェックを追加。&lt;code&gt;noPropertyAccessFromIndexSignature&lt;/code&gt;オプションの追加、&lt;code&gt;abstract new&lt;/code&gt;のサポート、&lt;code&gt;--explainFiles&lt;/code&gt;フラグの追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v2-0-0-markedjs-marked&quot;&gt;Release v2.0.0 · markedjs/marked&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/markedjs/marked/releases/tag/v2.0.0&quot; title=&quot;Release v2.0.0 · markedjs/marked&quot;&gt;github.com/markedjs/marked/releases/tag/v2.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Markdown&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;marked 2.0.0リリース&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ebay-launches-marko-5&quot;&gt;eBay Launches Marko 5&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://tech.ebayinc.com/engineering/ebay-launches-marko-5/&quot; title=&quot;eBay Launches Marko 5&quot;&gt;tech.ebayinc.com/engineering/ebay-launches-marko-5/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Marko 5リリース。&lt;br&gt;
コンパイラにBabelを使うように、webpackとRollupでのbundleに対応、&lt;code&gt;@marko/testing-library&lt;/code&gt;の追加、VScodeなどのエディタ拡張のサポートなど。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://markojs.com/docs/marko-5-upgrade/&quot; title=&quot;Upgrading to Marko 5&quot;&gt;Upgrading to Marko 5&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;webdriverio-v7-released-webdriverio&quot;&gt;WebdriverIO v7 Released | WebdriverIO&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webdriver.io/blog/2021/02/09/webdriverio-v7-released/&quot; title=&quot;WebdriverIO v7 Released | WebdriverIO&quot;&gt;webdriver.io/blog/2021/02/09/webdriverio-v7-released/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webdriver&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;WebdriverIO v7リリース。&lt;br&gt;
Node.js 10のサポート終了、TypeScriptでの書き直し、Cucumber v7へアップデート、Lightouse連携の改善。&lt;br&gt;
&lt;code&gt;browser.checkPWA()&lt;/code&gt;の追加、&lt;code&gt;@babel/register&lt;/code&gt;や&lt;code&gt;ts-node&lt;/code&gt;がインストールされている場合に自動的にコンパイルする&lt;code&gt;autoCompileOpts&lt;/code&gt;の追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v2-15-0-nuxt-nuxt-js&quot;&gt;Release v2.15.0 · nuxt/nuxt.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/nuxt/nuxt.js/releases/tag/v2.15.0&quot; title=&quot;Release v2.15.0 · nuxt/nuxt.js&quot;&gt;github.com/nuxt/nuxt.js/releases/tag/v2.15.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Nuxtjs 2.15.0リリース。&lt;br&gt;
Node.js 10のサポート終了、YarnのPlug&amp;#39;n&amp;#39;Playのサポート、&lt;code&gt;@nuxt/components&lt;/code&gt; v2へのアップデートなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nuxt/components#migration-guide&quot; title=&quot;nuxt/components: Scan and auto import components for Nuxt.js 2.13+&quot;&gt;nuxt/components: Scan and auto import components for Nuxt.js 2.13+&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nuxt-contrib/jiti&quot; title=&quot;nuxt-contrib/jiti: Runtime Typescript and ESM support for Node.js&quot;&gt;nuxt-contrib/jiti: Runtime Typescript and ESM support for Node.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;dynamic-static-typing-in-typescript-smashing-magazine&quot;&gt;Dynamic Static Typing In TypeScript — Smashing Magazine&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2021/01/dynamic-static-typing-typescript/&quot; title=&quot;Dynamic Static Typing In TypeScript — Smashing Magazine&quot;&gt;www.smashingmagazine.com/2021/01/dynamic-static-typing-typescript/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;express&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;expressのルーティングの型を書きながら、TypeScriptの高度な型について見ていくチュートリアル&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;generators-in-javascript-how-to-use-them-dev-community&quot;&gt;Generators in Javascript: How to use them - DEV Community 👩‍💻👨‍💻&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://dev.to/karimelghamry/generators-in-javascript-how-to-use-them-372d&quot; title=&quot;Generators in Javascript: How to use them - DEV Community 👩‍💻👨‍💻&quot;&gt;dev.to/karimelghamry/generators-in-javascript-how-to-use-them-372d&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;generator関数の使い方とユースケースについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;lazy-load-routes-in-vue-with-webpack-dynamic-comments-css-tricks&quot;&gt;Lazy Load Routes in Vue with webpack Dynamic Comments | CSS-Tricks&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://css-tricks.com/lazy-load-routes-in-vue-with-webpack-dynamic-comments/&quot; title=&quot;Lazy Load Routes in Vue with webpack Dynamic Comments | CSS-Tricks&quot;&gt;css-tricks.com/lazy-load-routes-in-vue-with-webpack-dynamic-comments/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Vue Routerを使った遅延ロードについての解説記事。&lt;br&gt;
webpackでのchunkの分離、&lt;code&gt;webpackChunkName&lt;/code&gt;でのchunkのファイル名の指定についてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;just-js-on-javascript-performance&quot;&gt;Just(js): On Javascript Performance&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://just.billywhizz.io/blog/on-javascript-performance-01/&quot; title=&quot;Just(js): On Javascript Performance&quot;&gt;just.billywhizz.io/blog/on-javascript-performance-01/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;benchmark&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;C++&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Just(js)はどのような最適化をしてTechempowerのベンチマークのスコアをあげていったかについての記事&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.techempower.com/benchmarks/#section=intro&quot; title=&quot;Introduction - TechEmpower Framework Benchmarks&quot;&gt;Introduction - TechEmpower Framework Benchmarks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;write-videos-in-react-remotion&quot;&gt;Write videos in React | Remotion&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.remotion.dev/&quot; title=&quot;Write videos in React | Remotion&quot;&gt;www.remotion.dev/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Reactを使って動画を作るための開発環境とライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;tildeio-simple-html-tokenizer-a-lightweight-javascript-library-for-tokenizing-non-script-html-expected-to-be-found-in-the-body-of-a-document&quot;&gt;tildeio/simple-html-tokenizer: A lightweight JavaScript library for tokenizing non-&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; HTML expected to be found in the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; of a document&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tildeio/simple-html-tokenizer&quot; title=&quot;tildeio/simple-html-tokenizer: A lightweight JavaScript library for tokenizing non-`&amp;lt;script&amp;gt;` HTML expected to be found in the `&amp;lt;body&amp;gt;` of a document&quot;&gt;github.com/tildeio/simple-html-tokenizer&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;HTMLをパースしてトークナイズするライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ethan-arrowood-undici-fetch-a-whatwg-fetch-implementation-based-on-nodejs-undici&quot;&gt;Ethan-Arrowood/undici-fetch: A WHATWG Fetch implementation based on @nodejs/undici&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Ethan-Arrowood/undici-fetch&quot; title=&quot;Ethan-Arrowood/undici-fetch: A WHATWG Fetch implementation based on @nodejs/undici&quot;&gt;github.com/Ethan-Arrowood/undici-fetch&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Fetch&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js向けのFetch APIの実装ライブラリ。&lt;br&gt;
undiciをベースに実装している。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/undici&quot; title=&quot;nodejs/undici: An HTTP/1.1 client, written from scratch for Node.js&quot;&gt;nodejs/undici: An HTTP/1.1 client, written from scratch for Node.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;vercel-nft-node-js-dependency-tracing-utility&quot;&gt;vercel/nft: Node.js dependency tracing utility&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/vercel/nft&quot; title=&quot;vercel/nft: Node.js dependency tracing utility&quot;&gt;github.com/vercel/nft&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CommonJS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptファイルの依存関係をトレースするライブラリ。&lt;br&gt;
&lt;code&gt;node_modules&lt;/code&gt;などを含むモジュールが依存するファイルパスを取得できる&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;gzuidhof-sunder-a-minimal-framework-for-service-workers-such-as-cloudflare-workers&quot;&gt;gzuidhof/sunder: A minimal framework for Service Workers (such as Cloudflare Workers).&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/gzuidhof/sunder&quot; title=&quot;gzuidhof/sunder: A minimal framework for Service Workers (such as Cloudflare Workers).&quot;&gt;github.com/gzuidhof/sunder&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ServiceWorker&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;cloudflare&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Service WorkerやCloudflare Worker向けのルーティングライブラリ&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;zeroturnaround-sql-formatter-a-whitespace-formatter-for-different-query-languages&quot;&gt;zeroturnaround/sql-formatter: A whitespace formatter for different query languages&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zeroturnaround/sql-formatter&quot; title=&quot;zeroturnaround/sql-formatter: A whitespace formatter for different query languages&quot;&gt;github.com/zeroturnaround/sql-formatter&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;SQL&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScriptで書かれたSQLのフォーマッター&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;mizdra-eslint-interactive&quot;&gt;mizdra/eslint-interactive&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/mizdra/eslint-interactive&quot; title=&quot;mizdra/eslint-interactive&quot;&gt;github.com/mizdra/eslint-interactive&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ESLint&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ESLintをルールごとにチェックして、ルールごとに&lt;code&gt;--fix&lt;/code&gt;での修正をインタラクティブにできるコマンドラインツール&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.mizdra.net/entry/2021/02/11/211856&quot; title=&quot;rule ごとに高速に eslint --fix できるツールを作った - mizdra&amp;amp;#x27;s blog&quot;&gt;rule ごとに高速に eslint --fix できるツールを作った - mizdra&amp;#39;s blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 16 Feb 2021 12:07:05 +0900</pubDate>
        <link>https://jser.info/2021/02/16/typescript-4.2-rc-webdriverio-v7-nuxt.js-2.15.0/</link>
        <guid isPermaLink="true">https://jser.info/2021/02/16/typescript-4.2-rc-webdriverio-v7-nuxt.js-2.15.0/</guid>
        
        <category>TypeScript</category>
        
        <category>Vue</category>
        
        <category>HTML</category>
        
        <category>node.js</category>
        
        <category>Fetch</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2021-02-09のJS: npm 7正式リリース、Vuex v4.0.0、Puppeteer v6.0.0</title>
        <description>&lt;p&gt;JSer.info #526 - npm 7が正式リリースされました。&lt;br&gt;
&lt;code&gt;npm install --global npm&lt;/code&gt; で npm 7がインストールされるようになっています。&lt;br&gt;
npm 7がNode.jsに同梱されるのは、Node.js 15からになります。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.blog/2021-02-02-npm-7-is-now-generally-available/&quot;&gt;npm 7 is now generally available! - The GitHub Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.blog/2020-10-13-presenting-v7-0-0-of-the-npm-cli/&quot;&gt;Presenting v7.0.0 of the npm CLI - The GitHub Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;npm 7では&lt;code&gt;package-lock.json&lt;/code&gt;のフォーマットが変更されています。&lt;br&gt;
あわせて&lt;code&gt;yarn.lock&lt;/code&gt;ファイルのサポートが追加されています。&lt;br&gt;
その他の破壊的として、&lt;code&gt;peerDependencies&lt;/code&gt;が自動インストール、&lt;code&gt;npx&lt;/code&gt;コマンドの変更、&lt;code&gt;npm audit&lt;/code&gt;の出力形式変更などが含まれています。&lt;/p&gt;

&lt;p&gt;機能追加としては、&lt;code&gt;acceptDependencies&lt;/code&gt;のサポート、&lt;code&gt;workspaces&lt;/code&gt;のサポートが追加されています。&lt;br&gt;
コマンドとしては、&lt;a href=&quot;https://docs.npmjs.com/cli/v7/commands/npm-exec&quot;&gt;&lt;code&gt;npm exec&lt;/code&gt;&lt;/a&gt;、&lt;a href=&quot;https://blog.npmjs.org/post/636604708661886976/release-v710&quot;&gt;&lt;code&gt;npm set-script&lt;/code&gt;&lt;/a&gt;、&lt;a href=&quot;https://dev.to/ruyadorno/npm-diff-23dh&quot;&gt;&lt;code&gt;npm diff&lt;/code&gt;&lt;/a&gt;などが追加されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.watilde.com/2020/10/14/npm-v7%E3%81%AE%E4%B8%BB%E3%81%AA%E5%A4%89%E6%9B%B4%E7%82%B9%E3%81%BE%E3%81%A8%E3%82%81/&quot;&gt;npm v7の主な変更点まとめ – watilde&amp;#39;s blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;また、正式リリースに合わせてDependabotがnpm 7をサポートしています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.blog/changelog/2021-02-08-dependabot-npm-v7-support/&quot;&gt;Dependabot: &lt;code&gt;npm&lt;/code&gt; v7 support - GitHub Changelog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;renovatebotについては次のIssueを参照してください。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/renovatebot/renovate/issues/7474&quot;&gt;npm v7 support · Issue #7474 · renovatebot/renovate&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;Vuex 4.0.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vuejs/vuex/releases/tag/v4.0.0&quot;&gt;Release v4.0.0 · vuejs/vuex&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Vue 3サポート、インストールプロセスの変更、グローバルの&lt;code&gt;this.$store&lt;/code&gt;の型定義をしなくなるといった変更が含まれています。&lt;br&gt;
また、Vue 3の配布形式に合わせてesm, cjs, globalといった複数形式でのビルドを公開しています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://v3.vuejs.org/guide/installation.html#explanation-of-different-builds&quot;&gt;Installation | Vue.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Vuex 4.0.0ではComposition API に対応する&lt;code&gt;useStore&lt;/code&gt; APIが追加されています。&lt;br&gt;
3.xからの4.xへのマイグレーションについては、次のドキュメントにまとめられています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://next.vuex.vuejs.org/guide/migrating-to-4-0-from-3-x.html#typescript-support&quot;&gt;Migrating to 4.0 from 3.x | Vuex&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;npm-7-is-now-generally-available-github-changelog&quot;&gt;npm 7 is now Generally Available - GitHub Changelog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.blog/changelog/2021-02-02-npm-7-is-now-generally-available/&quot; title=&quot;npm 7 is now Generally Available - GitHub Changelog&quot;&gt;github.blog/changelog/2021-02-02-npm-7-is-now-generally-available/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;npm 7がlatestとしてリリースされ、&lt;code&gt;npm install --global npm&lt;/code&gt;でnpm 7がインストールされるようになった&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v6-0-0-puppeteer-puppeteer&quot;&gt;Release v6.0.0 · puppeteer/puppeteer&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/puppeteer/puppeteer/releases/tag/v6.0.0&quot; title=&quot;Release v6.0.0 · puppeteer/puppeteer&quot;&gt;github.com/puppeteer/puppeteer/releases/tag/v6.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Puppeteer v6.0.0リリース。&lt;br&gt;
&lt;code&gt;aria/*&lt;/code&gt; selectorが非表示などスキップされた要素にはマッチしないように変更、TypeScriptの型定義を同梱するようになるなど。&lt;br&gt;
また、Chromiumのアップデート、&lt;code&gt;page.emulateNetworkConditions&lt;/code&gt;の追加、Apple M1のサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v15-8-0-current-node-js&quot;&gt;Node v15.8.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v15.8.0/&quot; title=&quot;Node v15.8.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v15.8.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 15.8.0リリース。&lt;br&gt;
&lt;code&gt;crypto&lt;/code&gt;モジュールに&lt;code&gt;generatePrime&lt;/code&gt;と&lt;code&gt;checkPrime&lt;/code&gt;メソッドを追加、npm 7.5.0へアップデート。&lt;br&gt;
&lt;code&gt;dgram.createSocket&lt;/code&gt;と&lt;code&gt;readline.question&lt;/code&gt;がAbortSignalをサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v4-0-0-vuejs-vuex&quot;&gt;Release v4.0.0 · vuejs/vuex&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/vuejs/vuex/releases/tag/v4.0.0&quot; title=&quot;Release v4.0.0 · vuejs/vuex&quot;&gt;github.com/vuejs/vuex/releases/tag/v4.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Vuex 4.0リリース。&lt;br&gt;
Vue 3サポート、インストールプロセスの変更、Vue 3に合わせたbundleの配布など。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-js-14-x-runtime-now-available-in-aws-lambda-aws-compute-blog&quot;&gt;Node.js 14.x runtime now available in AWS Lambda | AWS Compute Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://aws.amazon.com/jp/blogs/compute/node-js-14-x-runtime-now-available-in-aws-lambda/&quot; title=&quot;Node.js 14.x runtime now available in AWS Lambda | AWS Compute Blog&quot;&gt;aws.amazon.com/jp/blogs/compute/node-js-14-x-runtime-now-available-in-aws-lambda/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;aws&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Lambda&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;AWS LambdaがNode.js 14をサポート&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;typicodes-blog-husky-5&quot;&gt;Typicode&amp;#39;s blog - Husky 5&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.typicode.com/husky-5/&quot; title=&quot;Typicode&amp;#39;s blog - Husky 5&quot;&gt;blog.typicode.com/husky-5/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;git &lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Git Hooksを扱うhusky 5が正式リリース。&lt;br&gt;
依存なしに変更、ライセンスがMITからLicense Zero&amp;#39;s Parity Licenseに変更。&lt;br&gt;
4.xからのマイグレーションツールも公開している。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/typicode/husky-4-to-5&quot; title=&quot;typicode/husky-4-to-5: Quickly migrate your hooks from husky v4 to v5&quot;&gt;typicode/husky-4-to-5: Quickly migrate your hooks from husky v4 to v5&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-by-numbers-2020-nodesource&quot;&gt;Node By Numbers 2020 - NodeSource&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodesource.com/blog/node-by-numbers-2020&quot; title=&quot;Node By Numbers 2020 - NodeSource&quot;&gt;nodesource.com/blog/node-by-numbers-2020&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;NodesourceのLinux環境向けのNode.jsの2020年を数字で振り返る記事。&lt;br&gt;
rpmとdebのダウンロード数、地域、バージョンごとのダウンロード数など。&lt;br&gt;
セキュリティリリースがあった場合にはダウンロードのスパイクが発生している点についてなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;sms-otp-akaki-i-o&quot;&gt;SMS OTPの自動入力によるリスクとその対策 - Akaki I/O&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://akaki.io/2021/sms_otp_autofill&quot; title=&quot;SMS OTPの自動入力によるリスクとその対策 - Akaki I/O&quot;&gt;akaki.io/2021/sms_otp_autofill&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;iOS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Android&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;iOSとAndroidにおけるSMS OTPの自動入力(&lt;code&gt;autocomplete=&amp;quot;one-time-code&amp;quot;&lt;/code&gt;)の動作の検証。&lt;br&gt;
フィッシングなどの攻撃への利用やDomain-bound codesでの自動入力の検証や仕様などについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;webgl-typescript-vercel&quot;&gt;生 WebGL と TypeScript で Vercel のロゴを作る&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://zenn.dev/ixkaito/articles/webgl-typescript-vercel-logo&quot; title=&quot;生 WebGL と TypeScript で Vercel のロゴを作る&quot;&gt;zenn.dev/ixkaito/articles/webgl-typescript-vercel-logo&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebGL&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;WebGLを使って図形を描画するまでをstep by stepで解説しているチュートリアル&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;useencapsulation-kyle-shevlin&quot;&gt;useEncapsulation | Kyle Shevlin&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://kyleshevlin.com/use-encapsulation&quot; title=&quot;useEncapsulation | Kyle Shevlin&quot;&gt;kyleshevlin.com/use-encapsulation&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React Componentで扱うStateをCustom Hooksで構築するパターンについて。&lt;br&gt;
Custom HooksにまとめることでStateや操作をカプセル化したり、依存関係がわかりやすくなるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-private-click-measurement-pcm-webkit&quot;&gt;Introducing Private Click Measurement, PCM | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/11529/introducing-private-click-measurement-pcm/&quot; title=&quot;Introducing Private Click Measurement, PCM | WebKit&quot;&gt;webkit.org/blog/11529/introducing-private-click-measurement-pcm/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;iOS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;privacy&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ad &lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;iOS 14.5ベータでSafariとアプリでできるPrivate Click Measurement(PCM)についての解説。&lt;br&gt;
トラッカーからプライバシーを保護しながら、広告のコンバージョンを遅延して送信する仕組みについて&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;10-bad-typescript-habits-to-break-this-year&quot;&gt;10 bad TypeScript habits to break this year&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://startup-cto.net/10-bad-typescript-habits-to-break-this-year/&quot; title=&quot;10 bad TypeScript habits to break this year&quot;&gt;startup-cto.net/10-bad-typescript-habits-to-break-this-year/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScriptでの良くない習慣について。&lt;br&gt;
何故良くないのかと、どうするべきなのについて書かれている。&lt;br&gt;
&lt;code&gt;strict&lt;/code&gt;、&lt;code&gt;||&lt;/code&gt;、&lt;code&gt;any&lt;/code&gt;、&lt;code&gt;as&lt;/code&gt;、Optional、Genricsの名前、真偽値チェック、&lt;code&gt;!!&lt;/code&gt;、&lt;code&gt;!= null&lt;/code&gt;などについて&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;replay-record-and-replay-web-applications&quot;&gt;Replay: Record and replay web applications&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://replay.io/&quot; title=&quot;Replay: Record and replay web applications&quot;&gt;replay.io/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;リプレイデバッグサービス。&lt;br&gt;
Firefoxベースのリプレイを記録/再生するためのブラウザをオープンソースとして公開している&lt;br&gt;
&lt;a href=&quot;https://github.com/RecordReplay/&quot;&gt;https://github.com/RecordReplay/&lt;/a&gt;&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;samthor-gumnut-js-parser-in-web-assembly-c&quot;&gt;samthor/gumnut: JS parser in Web Assembly / C&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/samthor/gumnut&quot; title=&quot;samthor/gumnut: JS parser in Web Assembly / C&quot;&gt;github.com/samthor/gumnut&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebAssembly&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Cで書かれたJavaScriptパーサをWebAssemblyにコンパイルして扱う、JavaScriptパーサライブラリ。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;davidjbradshaw-eslint-config-auto-automatically-configure-eslint-based-on-project-dependencies&quot;&gt;davidjbradshaw/eslint-config-auto: Automatically configure ESLint based on project dependencies&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/davidjbradshaw/eslint-config-auto&quot; title=&quot;davidjbradshaw/eslint-config-auto: Automatically configure ESLint based on project dependencies&quot;&gt;github.com/davidjbradshaw/eslint-config-auto&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ESLint&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;プロジェクトの&lt;code&gt;package.json&lt;/code&gt;を元にAirbnbのルールを基本としたESLintルール設定を自動で行うツール&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 09 Feb 2021 12:18:50 +0900</pubDate>
        <link>https://jser.info/2021/02/09/npm-7-vuex-v4.0.0-puppeteer-v6.0.0/</link>
        <guid isPermaLink="true">https://jser.info/2021/02/09/npm-7-vuex-v4.0.0-puppeteer-v6.0.0/</guid>
        
        <category>node.js</category>
        
        <category>Tools</category>
        
        <category>iOS</category>
        
        <category>TypeScript</category>
        
        <category>npm</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2021-02-02のJS: WebRTC 1.0、Firefox 85、Chrome 89 Beta</title>
        <description>&lt;p&gt;JSer.info #525 - WebRTC 1.0がW3C RecommendationとIETF標準となりました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.w3.org/2021/01/pressrelease-webrtc-rec.html.en&quot;&gt;Web Real-Time Communications (WebRTC) transforms the communications landscape; becomes a World Wide Web Consortium (W3C) Recommendation and multiple Internet Engineering Task Force (IETF) standards&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.ietf.org/blog/webrtc-milestone/&quot;&gt;IETF | WebRTC: Marking a milestone in real-time communications&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.rfc-editor.org/search/rfc_search_detail.php?page=All&amp;pubstatus%5B%5D=Any&amp;from_month=January&amp;from_year=2021&amp;pub_date_type=range&amp;to_month=January&amp;to_year=2021&amp;sortkey=Number&amp;sorting=ASC&quot;&gt;RFC Search Detail&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://datatracker.ietf.org/wg/rtcweb/documents/&quot;&gt;Real-Time Communication in WEB-browsers (rtcweb) - Documents&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;W3Cの仕様ではJavaScriptのAPIが定義されており、IETFの仕様ではプロトコルが定義されています。&lt;br&gt;
すでに&lt;a href=&quot;https://wpt.fyi/results/webrtc?label=master&amp;label=experimental&amp;aligned&quot;&gt;ブラウザ上にJavaScript APIが実装&lt;/a&gt;されていたり、&lt;a href=&quot;https://news.ycombinator.com/item?id=25933366&quot;&gt;多くのWebRTCの実装&lt;/a&gt;が存在するため、利用できる/利用している状態です。&lt;br&gt;
今回のアナウンスは、WebRTCの仕様が1.0に到達し安定したことを意味しています。&lt;/p&gt;

&lt;p&gt;次の仕様改善については、&lt;a href=&quot;https://web.dev/webrtc-standard-announcement/&quot;&gt;WebRTC is now a W3C and IETF standard&lt;/a&gt;というGoogleのブログにも書かれていますが、&lt;a href=&quot;https://www.w3.org/TR/webrtc-nv-use-cases/&quot;&gt;WebRTC Next Version Use Cases&lt;/a&gt;などでユースケースを集めながら整理していくようです。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Firefox 85がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://hacks.mozilla.org/2021/01/january-brings-us-firefox-85/&quot;&gt;January brings us Firefox 85 - Mozilla Hacks - the Web developer blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.mozilla.org/en-US/firefox/85.0/releasenotes/&quot;&gt;Firefox 85.0, See All New Features, Updates and Fixes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Flashのサポートを終了しています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Plugins/Roadmap&quot;&gt;Plugin Roadmap for Firefox - Plugins | MDN&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;CSSでPrefixなしの&lt;code&gt;:focus-visible&lt;/code&gt;をサポート、&lt;code&gt;&amp;lt;link rel=&amp;quot;preload&amp;quot;&amp;gt;&lt;/code&gt;をデフォルトでサポートしています。&lt;br&gt;
また、キャッシュなどをつかったトラッキングを防止するためにNetwork partitioningの導入されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.mozilla.org/security/2021/01/26/supercookie-protections/&quot;&gt;Firefox 85 Cracks Down on Supercookies - Mozilla Security Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2020/10/http-cache-partitioning&quot;&gt;Gaining security and privacy by partitioning the cache  |  Web&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;Chrome 89ベータがリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.chromium.org/2021/01/chrome-89-beta-advanced-hardware.html&quot;&gt;Chromium Blog: Chrome 89 Beta: Advanced Hardware Interactions, Web Sharing on Desktop, and More&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;WebHID API、Web NFC、Web Serial APIのデフォルト有効化、デスクトップでのWeb Sharingが有効化されています。&lt;br&gt;
また、Cross-origin opener policy reporting API、Manifastに&lt;code&gt;display_override&lt;/code&gt;が追加されています。&lt;br&gt;
その他には、Top-Level awaitのサポート、&lt;code&gt;performance.measureUserAgentSpecificMemory()&lt;/code&gt;の追加、Streams APIがByte Streamsをサポートされています。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;january-brings-us-firefox-85-mozilla-hacks-the-web-developer-blog&quot;&gt;January brings us Firefox 85 - Mozilla Hacks - the Web developer blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2021/01/january-brings-us-firefox-85/&quot; title=&quot;January brings us Firefox 85 - Mozilla Hacks - the Web developer blog&quot;&gt;hacks.mozilla.org/2021/01/january-brings-us-firefox-85/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Firefox 85リリース。&lt;br&gt;
Flashのサポート終了。&lt;br&gt;
CSSでPrefixなしの&lt;code&gt;:focus-visible&lt;/code&gt;をサポート、&lt;code&gt;&amp;lt;link rel=&amp;quot;preload&amp;quot;&amp;gt;&lt;/code&gt;のサポート。&lt;br&gt;
また、Network partitioningの導入など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.mozilla.org/en-US/firefox/85.0/releasenotes/&quot; title=&quot;Firefox 85.0, See All New Features, Updates and Fixes&quot;&gt;Firefox 85.0, See All New Features, Updates and Fixes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.mozilla.org/security/2021/01/26/supercookie-protections/&quot; title=&quot;Firefox 85 Cracks Down on Supercookies - Mozilla Security Blog&quot;&gt;Firefox 85 Cracks Down on Supercookies - Mozilla Security Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2020/10/http-cache-partitioning#what_is_the_impact_of_this_behavioral_change&quot; title=&quot;Gaining security and privacy by partitioning the cache  |  Web&quot;&gt;Gaining security and privacy by partitioning the cache  |  Web&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Releases/85&quot; title=&quot;Firefox 85 for developers - Mozilla | MDN&quot;&gt;Firefox 85 for developers - Mozilla | MDN&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-notes-for-safari-technology-preview-119-webkit&quot;&gt;Release Notes for Safari Technology Preview 119 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/11525/release-notes-for-safari-technology-preview-119/&quot; title=&quot;Release Notes for Safari Technology Preview 119 | WebKit&quot;&gt;webkit.org/blog/11525/release-notes-for-safari-technology-preview-119/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Safari Technology Preview 119リリース。&lt;br&gt;
SpeechRecognition APIの有効化、CSS &lt;code&gt;aspect-ratio&lt;/code&gt;プロパティのサポート改善、&lt;code&gt;prefers-contrast: more&lt;/code&gt;のサポートなど。&lt;br&gt;
WebAssemblyで&lt;code&gt;memory.copy&lt;/code&gt;、&lt;code&gt;memory.init&lt;/code&gt;、&lt;code&gt;memory.fill&lt;/code&gt;をフラグ付きでサポートなど&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/WebAssembly/bulk-memory-operations/blob/master/proposals/bulk-memory-operations/Overview.md&quot; title=&quot;bulk-memory-operations/Overview.md at master · WebAssembly/bulk-memory-operations&quot;&gt;bulk-memory-operations/Overview.md at master · WebAssembly/bulk-memory-operations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://drafts.csswg.org/mediaqueries-5/#prefers-contrast&quot; title=&quot;Media Queries Level 5&quot;&gt;Media Queries Level 5&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v7-5-0-npm-cli&quot;&gt;Release v7.5.0 · npm/cli&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/npm/cli/releases/tag/v7.5.0&quot; title=&quot;Release v7.5.0 · npm/cli&quot;&gt;github.com/npm/cli/releases/tag/v7.5.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;npm 7.5.0リリース。&lt;br&gt;
npmパッケージのDiffを取得する&lt;code&gt;npm diff&lt;/code&gt;コマンドの追加など&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://dev.to/ruyadorno/npm-diff-23dh&quot; title=&quot;npm diff - DEV Community 👩‍💻👨‍💻&quot;&gt;npm diff - DEV Community 👩‍💻👨‍💻&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chromium-blog-chrome-89-beta-advanced-hardware-interactions-web-sharing-on-desktop-and-more&quot;&gt;Chromium Blog: Chrome 89 Beta: Advanced Hardware Interactions, Web Sharing on Desktop, and More&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.chromium.org/2021/01/chrome-89-beta-advanced-hardware.html&quot; title=&quot;Chromium Blog: Chrome 89 Beta: Advanced Hardware Interactions, Web Sharing on Desktop, and More&quot;&gt;blog.chromium.org/2021/01/chrome-89-beta-advanced-hardware.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 89ベータリリース。&lt;br&gt;
WebHID API、Web NFC、Web Serial APIのデフォルト有効化、デスクトップでのWeb Sharingの有効化。&lt;br&gt;
Cross-origin opener policy reporting API、Manifastに&lt;code&gt;display_override&lt;/code&gt;の追加。&lt;br&gt;
&lt;code&gt;performance.measureUserAgentSpecificMemory()&lt;/code&gt;の追加、Streams APIがByte Streamsをサポート。&lt;br&gt;
その他にはTop-Level awaitのサポートなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;webrtc-1-0-is-a-w3c-recommendation-w3c-news&quot;&gt;WebRTC 1.0 is a W3C Recommendation | W3C News&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.w3.org/blog/news/archives/8897&quot; title=&quot;WebRTC 1.0 is a W3C Recommendation | W3C News&quot;&gt;www.w3.org/blog/news/archives/8897&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;W3C&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebRTC&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;WebRTC 1.0がW3C Recommendationとなった&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.w3.org/2021/01/pressrelease-webrtc-rec.html.en&quot; title=&quot;Web Real-Time Communications (WebRTC) transforms the communications landscape; becomes a World Wide Web Consortium (W3C) Recommendation and multiple Internet Engineering Task Force (IETF) standards&quot;&gt;Web Real-Time Communications (WebRTC) transforms the communications landscape; becomes a World Wide Web Consortium (W3C) Recommendation and multiple Internet Engineering Task Force (IETF) standards&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/webrtc-standard-announcement/&quot; title=&quot;WebRTC is now a W3C and IETF standard&quot;&gt;WebRTC is now a W3C and IETF standard&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;toast-ui-chart-4-0-is-here-toast-ui-make-your-web-delicious&quot;&gt;TOAST UI Chart 4.0 is here! | TOAST UI :: Make Your Web Delicious!&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ui.toast.com/weekly-pick/en_20210126&quot; title=&quot;TOAST UI Chart 4.0 is here! | TOAST UI :: Make Your Web Delicious!&quot;&gt;ui.toast.com/weekly-pick/en_20210126&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;chart&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;グラフライブラリのTOAST UI Chart v4.0リリース。&lt;br&gt;
依存をなくしファイルサイズの削減、レスポンシブサポート、ライブアップデートに対応したグラフの追加、テーマオプションの改善など。&lt;br&gt;
v3からのマイグレーションガイドも公開している&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nhn/tui.chart/blob/main/docs/v4.0-migration-guide-en.md&quot; title=&quot;tui.chart/v4.0-migration-guide-en.md at main · nhn/tui.chart&quot;&gt;tui.chart/v4.0-migration-guide-en.md at main · nhn/tui.chart&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ckeditor-5-v25-0-0-with-flexible-annotations-improved-text-blocks-handling-and-performance-fixes&quot;&gt;CKEditor 5 v25.0.0 with flexible annotations, improved text blocks handling and performance fixes&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ckeditor.com/blog/CKEditor-5-v25.0.0-with-flexible-annotations-improved-text-blocks-handling-and-performance-fixes/&quot; title=&quot;CKEditor 5 v25.0.0 with flexible annotations, improved text blocks handling and performance fixes&quot;&gt;ckeditor.com/blog/CKEditor-5-v25.0.0-with-flexible-annotations-improved-text-blocks-handling-and-performance-fixes/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;editor&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CKEditor 5 v25.0.0リリース。&lt;br&gt;
ReDoSの問題の修正、コンテンツブロックの動作改善、大量のテキストのフォーマットのパフォーマンス改善、画像管理の改善など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v5-3-4-vuejs-vue-devtools&quot;&gt;Release v5.3.4 · vuejs/vue-devtools&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/vuejs/vue-devtools/releases/tag/v5.3.4&quot; title=&quot;Release v5.3.4 · vuejs/vue-devtools&quot;&gt;github.com/vuejs/vue-devtools/releases/tag/v5.3.4&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Extension&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Vue DevTools 5.3.4リリース。&lt;br&gt;
Universal XSS脆弱性の修正&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vuejs/vue-devtools/issues/1353&quot; title=&quot;Vue.js devtools Universal XSS (Chrome extension) · Issue #1353 · vuejs/vue-devtools&quot;&gt;Vue.js devtools Universal XSS (Chrome extension) · Issue #1353 · vuejs/vue-devtools&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;babel-8-release-plan-issue-10746-babel-babel&quot;&gt;Babel 8 Release Plan · Issue #10746 · babel/babel&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/babel/babel/issues/10746&quot; title=&quot;Babel 8 Release Plan · Issue #10746 · babel/babel&quot;&gt;github.com/babel/babel/issues/10746&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;issue&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Babel 8のRoadmap Issue&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;when-to-use-https-for-local-development&quot;&gt;When to use HTTPS for local development&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://web.dev/when-to-use-local-https/&quot; title=&quot;When to use HTTPS for local development&quot;&gt;web.dev/when-to-use-local-https/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;HTTPS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ローカル開発でもHTTPSが必要なものと&lt;code&gt;localhost&lt;/code&gt;について。&lt;br&gt;
また、ローカルでの開発に使うべきTLDについて&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/how-to-use-local-https/&quot; title=&quot;How to use HTTPS for local development&quot;&gt;How to use HTTPS for local development&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;visitor-pattern-in-typescript-writing-kirill-vasiltsov&quot;&gt;Visitor pattern in TypeScript | Writing | Kirill Vasiltsov&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.kirillvasiltsov.com/writing/visitor-pattern-typescript/&quot; title=&quot;Visitor pattern in TypeScript | Writing | Kirill Vasiltsov&quot;&gt;www.kirillvasiltsov.com/writing/visitor-pattern-typescript/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScriptのinterfaceを使ったVisitor Patternの実装方法についての記事&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;cypress-vs-selenium-vs-playwright-vs-puppeteer-speed-comparison-checkly-blog&quot;&gt;Cypress vs Selenium vs Playwright vs Puppeteer speed comparison | Checkly blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.checklyhq.com/cypress-vs-selenium-vs-playwright-vs-puppeteer-speed-comparison/&quot; title=&quot;Cypress vs Selenium vs Playwright vs Puppeteer speed comparison | Checkly blog&quot;&gt;blog.checklyhq.com/cypress-vs-selenium-vs-playwright-vs-puppeteer-speed-comparison/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;E2E&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;テストフレームワークの実行速度について比較した記事。&lt;br&gt;
Puppeteer、Playwright、WebDriverIO、Selenium、Cypressをいくつかのシナリオで比較している。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.checklyhq.com/puppeteer-vs-selenium-vs-playwright-speed-comparison/&quot; title=&quot;Puppeteer vs Selenium vs Playwright, a speed comparison | Checkly blog&quot;&gt;Puppeteer vs Selenium vs Playwright, a speed comparison | Checkly blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;undefined-vs-null-revisited&quot;&gt;`undefined` vs. `null` revisited&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://2ality.com/2021/01/undefined-null-revisited.html&quot; title=&quot;\`undefined\` vs. \`null\` revisited&quot;&gt;2ality.com/2021/01/undefined-null-revisited.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;opinion&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;undefined&lt;/code&gt;と&lt;code&gt;null&lt;/code&gt;について。&lt;br&gt;
&lt;code&gt;undefined&lt;/code&gt;と&lt;code&gt;null&lt;/code&gt;の歴史、&lt;code&gt;undefined&lt;/code&gt;と&lt;code&gt;null&lt;/code&gt;が言語的に発生するケース。言語的に特別扱いされるケース、どれを値がない値として使うかについて&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;azu-express-lazy-router-lazy-loading-for-express-router&quot;&gt;azu/express-lazy-router: Lazy loading for express router&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/azu/express-lazy-router&quot; title=&quot;azu/express-lazy-router: Lazy loading for express router&quot;&gt;github.com/azu/express-lazy-router&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;express&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;expressのRouterを遅延ロードするライブラリ。&lt;br&gt;
ts-node-devとか@babel/registerでruntime compileしているケースで、起動時に全コンパイルじゃなくて分散コンパイルできるようにする目的&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;webreflection-linkedom-a-triple-linked-lists-based-dom-implementation&quot;&gt;WebReflection/linkedom: A triple-linked lists based DOM implementation.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/WebReflection/linkedom&quot; title=&quot;WebReflection/linkedom: A triple-linked lists based DOM implementation.&quot;&gt;github.com/WebReflection/linkedom&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js向けのHTML/DOMの実装ライブラリ。&lt;br&gt;
基本的なユースケースにおけるHTML文字列のパース、DOM APIを一定のパフォーマンスで実現できるものを目指している。&lt;br&gt;
DOM標準互換を目指すのではなく、basichtmlの置き換えを目的に治している。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/WebReflection/basicHTML#readme&quot; title=&quot;WebReflection/basicHTML: A NodeJS based, standard oriented, HTML implementation.&quot;&gt;WebReflection/basicHTML: A NodeJS based, standard oriented, HTML implementation.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;shinyoshiaki-werift-webrtc-webrtc-implementation-for-typescript-node-js&quot;&gt;shinyoshiaki/werift-webrtc: WebRTC Implementation for TypeScript (Node.js)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/shinyoshiaki/werift-webrtc&quot; title=&quot;shinyoshiaki/werift-webrtc: WebRTC Implementation for TypeScript (Node.js)&quot;&gt;github.com/shinyoshiaki/werift-webrtc&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebRTC&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.jsでのWebRTCの実装。&lt;br&gt;
STUN、TURN、ICE、DataChannel、MediaChannelなどの実装&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;willmendesneto-perf-marks-the-isomorphic-simplest-and-lightweight-solution-for-user-timing-api-in-javascript-only-208b-tree-shaking-and-entry-points-built-in-simple-as-that&quot;&gt;willmendesneto/perf-marks: The isomorphic, simplest, and lightweight solution for User Timing API in Javascript - 🚀 only 208B 🚀. Tree-shaking and entry points built-in. Simple as that!&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/willmendesneto/perf-marks&quot; title=&quot;willmendesneto/perf-marks: The isomorphic, simplest, and lightweight solution for User Timing API in Javascript - 🚀 only 208B 🚀. Tree-shaking and entry points built-in. Simple as that!&quot;&gt;github.com/willmendesneto/perf-marks&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;User Timing APIのラッパーライブラリ。&lt;br&gt;
ブラウザとNode.js(&lt;code&gt;perf_hooks&lt;/code&gt;)で利用できる。&lt;br&gt;
User Timing APIのラップ、サポートしているかの判定処理、関数のプロファイル機能などを提供する&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;alesgenova-post-me-use-web-workers-and-other-windows-through-a-simple-promise-api&quot;&gt;alesgenova/post-me: 📩 Use web Workers and other Windows through a simple Promise API&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/alesgenova/post-me&quot; title=&quot;alesgenova/post-me: 📩 Use web Workers and other Windows through a simple Promise API&quot;&gt;github.com/alesgenova/post-me&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webworker&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Promises&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Worker、Window(iframe)間のメッセージングライブラリ。&lt;br&gt;
PromiseベースのAPIでWindowとWorker間でメッセージのやり取りができる&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 02 Feb 2021 11:55:41 +0900</pubDate>
        <link>https://jser.info/2021/02/02/webrtc-1.0-firefox-85-chrome-89-beta/</link>
        <guid isPermaLink="true">https://jser.info/2021/02/02/webrtc-1.0-firefox-85-chrome-89-beta/</guid>
        
        <category>TypeScript</category>
        
        <category>node.js</category>
        
        <category>browser</category>
        
        <category>WebRTC</category>
        
        <category>Firefox</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2021-01-26のJS: webpack 5.17.0(lazyCompilation)、Deno 1.7、Open Web Docs</title>
        <description>&lt;p&gt;JSer.info #524 - webpack 5.17.0がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/webpack/webpack/releases/tag/v5.17.0&quot;&gt;Release v5.17.0 · webpack/webpack&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;webpack 5.17.0では &lt;code&gt;experiments.lazyCompilation&lt;/code&gt; オプションが試験的に追加されています。&lt;br&gt;
&lt;code&gt;experiments.lazyCompilation&lt;/code&gt;は、webpack dev serverなどのローカルサーバと組み合わせて動作します。&lt;br&gt;
&lt;code&gt;experiments.lazyCompilation&lt;/code&gt;は、Dynamic Importしているモジュール(chunk)を起動時にはビルドせずに、そのモジュールがロードされた際にビルドする遅延コンパイルの仕組みです。&lt;/p&gt;

&lt;p&gt;仕組み的には、初回のビルド時にDynamic Importしているモジュールは、lazyCompilationをするためのProxy的なモジュールとしてビルドされます。このモジュールはlazyCompilationの&lt;code&gt;client&lt;/code&gt;となり読み込まれた際に、lazyCompilationの&lt;code&gt;backend&lt;/code&gt;側にServer Sent Eventを使って読み込まれたことを通知します。&lt;br&gt;
lazyCompilationの&lt;code&gt;backend&lt;/code&gt;は&lt;code&gt;client&lt;/code&gt;からの通知を受け取ったら、実際のモジュールをビルドして返す仕組みになっています。&lt;br&gt;
この&lt;code&gt;client&lt;/code&gt;と&lt;code&gt;backend&lt;/code&gt;もそれぞれ&lt;code&gt;experiments.lazyCompilation&lt;/code&gt;オプションで独自のものが定義できるようになっていて、デフォルトではwebpack dev serverで動くコードになっています。&lt;/p&gt;

&lt;p&gt;初回の起動時のコンパイル範囲を抑えることで、開発サーバの立ち上げ速度を改善することが主な目的となっています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Deno 1.7がリリースされました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://deno.land/posts/v1.7&quot;&gt;Deno 1.7 Release Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/denoland/deno/releases/tag/v1.7.0&quot;&gt;Release v1.7.0 · denoland/deno&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://zenn.dev/magurotuna/articles/55575eb16ae422&quot;&gt;Deno 1.7.0 がリリースされたので新機能や変更点の紹介&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://deno.land/posts/v1.6&quot;&gt;Deno 1.6&lt;/a&gt;でサポートされた&lt;code&gt;deno compile&lt;/code&gt;のサイズ改善とクロスコンパイルの対応が行われています。&lt;br&gt;
Data URLのimportをサポート、&lt;code&gt;deno fmt&lt;/code&gt;のMarkdownサポートが追加されています。&lt;br&gt;
また、Steram APIをWHATWGに準拠するように修正、Web Workerに&lt;code&gt;permissions&lt;/code&gt;オプションでDeno独自のパーミッションを指定できるようになっています。&lt;br&gt;
その他には、&lt;code&gt;--location&lt;/code&gt;フラグを使って相対URLのFetchに対応、FetchのリクエストbodyにStreamを指定可能になるといった変更も含まれています。&lt;/p&gt;

&lt;p&gt;破壊的な変更としてunstableなDeno APIsの変更やUnstable APIとして&lt;code&gt;Deno.resolveDns&lt;/code&gt;のサポートが含まれています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/openwebdocs/project&quot;&gt;Open Web Docs&lt;/a&gt;というMDNなどのウェブプラットフォームのドキュメントを改善していくためのプロジェクトが立ち上げられています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://opencollective.com/open-web-docs/updates/introducing-open-web-docs&quot;&gt;Open Web Docs - Open Collective&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;2020年8月のMozillaにおけるレイオフの影響で&lt;a href=&quot;https://developer.mozilla.org/&quot;&gt;MDN&lt;/a&gt;のWriterなどのチームが縮小されました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.mozilla.org/blog/2020/08/11/changing-world-changing-mozilla/&quot;&gt;Changing World, Changing Mozilla - The Mozilla Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://hacks.mozilla.org/2020/08/an-update-on-mdn-web-docs/&quot;&gt;An Update on MDN Web Docs - Mozilla Hacks - the Web developer blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Open Web Docsでは、MDNなどのウェブプラットフォームに関するドキュメントへのコントリビューションをしていく組織です。Open Web DocsのメンバーにはMozilla、Google、Microsoft、W3Cなどがいます。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/openwebdocs/project/blob/main/steering-committee/membership-expectations.md&quot;&gt;https://github.com/openwebdocs/project/blob/main/steering-committee/membership-expectations.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;当面の目標は、MDNの&lt;a href=&quot;https://hacks.mozilla.org/2020/12/welcome-yari-mdn-web-docs-has-a-new-platform/&quot;&gt;新しいアーキテクチャ&lt;/a&gt;への移行のサポート、&lt;a href=&quot;https://github.com/mdn/browser-compat-data&quot;&gt;ブラウザの互換データ&lt;/a&gt;の改善、JavaScriptのドキュメントの改善などを行っていくようです。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ipfs-support-in-brave&quot;&gt;IPFS Support in Brave&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://brave.com/ipfs-support/&quot; title=&quot;IPFS Support in Brave&quot;&gt;brave.com/ipfs-support/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;IPFS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;p2p&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;BraveがP2PプロトコルであるIPFS(InterPlanetary File System)をサポート。&lt;br&gt;
Brave 1.19.x以降では、ゲートウェイとローカルノードを使ったIPFSURIの解決ができるようになる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://brave.com/brave-integrates-ipfs/&quot; title=&quot;Brave Integrates IPFS&quot;&gt;Brave Integrates IPFS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v5-17-0-webpack-webpack&quot;&gt;Release v5.17.0 · webpack/webpack&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/webpack/webpack/releases/tag/v5.17.0&quot; title=&quot;Release v5.17.0 · webpack/webpack&quot;&gt;github.com/webpack/webpack/releases/tag/v5.17.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;webpack 5.17.0リリース。&lt;br&gt;
実験的な機能として、Dynamic Importしているモジュールをアクセスした時にビルドできる&lt;code&gt;experiments.lazyCompilation&lt;/code&gt;オプションを追加。&lt;br&gt;
起動時にすべてをビルドしないことで、利用してないエントリポイントがビルドパフォーマンスに影響を与えないようにする目的。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/liximomo/lazy-compile-webpack-plugin&quot; title=&quot;liximomo/lazy-compile-webpack-plugin: Boost webpack startup time by lazily compiling dynamic imports&quot;&gt;liximomo/lazy-compile-webpack-plugin: Boost webpack startup time by lazily compiling dynamic imports&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-node-js-runtime-cloud-functions-documentation-google-cloud&quot;&gt;The Node.js Runtime  |  Cloud Functions Documentation  |  Google Cloud&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://cloud.google.com/functions/docs/concepts/nodejs-runtime#nodejs_14_public_preview&quot; title=&quot;The Node.js Runtime  |  Cloud Functions Documentation  |  Google Cloud&quot;&gt;cloud.google.com/functions/docs/concepts/nodejs-runtime#nodejs_14_public_preview&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;GCP&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Cloud FunctionがNode.js 14をpublic previewとしてサポート&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;deno-1-7-release-notes&quot;&gt;Deno 1.7 Release Notes&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://deno.land/posts/v1.7&quot; title=&quot;Deno 1.7 Release Notes&quot;&gt;deno.land/posts/v1.7&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;deno&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Deno 1.7リリース。&lt;br&gt;
&lt;code&gt;deno compile&lt;/code&gt;のサイズ改善とクロスコンパイルの対応、Data URLのimportをサポート、&lt;code&gt;deno fmt&lt;/code&gt;のMarkdownサポート。&lt;br&gt;
Steram APIをWHATWGに準拠するように修正、Web Workerに&lt;code&gt;permissions&lt;/code&gt;でDeno独自のパーミッションを指定可能に。&lt;br&gt;
&lt;code&gt;--location&lt;/code&gt;フラグを使って相対URLのFetchに対応、FetchのリクエストbodyにStreamを指定可能になるなど。&lt;br&gt;
破壊的な変更としてDeno APIsの変更やUnstable APIとして&lt;code&gt;Deno.resolveDns&lt;/code&gt;のサポートが含まれる。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/denoland/deno/releases/tag/v1.7.0&quot; title=&quot;Release v1.7.0 · denoland/deno&quot;&gt;Release v1.7.0 · denoland/deno&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://zenn.dev/magurotuna/articles/55575eb16ae422&quot; title=&quot;Deno 1.7.0 がリリースされたので新機能や変更点の紹介&quot;&gt;Deno 1.7.0 がリリースされたので新機能や変更点の紹介&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;open-web-docs-open-collective&quot;&gt;Open Web Docs - Open Collective&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://opencollective.com/open-web-docs/updates/introducing-open-web-docs&quot; title=&quot;Open Web Docs - Open Collective&quot;&gt;opencollective.com/open-web-docs/updates/introducing-open-web-docs&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;mdn&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;MDNのようなウェブプラットフォームのドキュメントに対して長期的に取り組んでいくためのプロジェクト。MozillaなどのブラウザベンダーやW3Cなどがメンバーにいる。&lt;br&gt;
当面はMDNへのコントリビューションをしていく。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.windows.com/msedgedev/2021/01/25/welcome-open-web-docs/&quot; title=&quot;Supporting Open Web Docs to deliver web developer documentation - Microsoft Edge Blog&quot;&gt;Supporting Open Web Docs to deliver web developer documentation - Microsoft Edge Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/open-web-docs/&quot; title=&quot;Introducing Open Web Docs&quot;&gt;Introducing Open Web Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://hacks.mozilla.org/2021/01/welcoming-open-web-docs-to-the-mdn-family/&quot; title=&quot;Welcoming Open Web Docs to the MDN family - Mozilla Hacks - the Web developer blog&quot;&gt;Welcoming Open Web Docs to the MDN family - Mozilla Hacks - the Web developer blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.igalia.com/2021/01/25/Open-Web-Docs.html&quot; title=&quot;Open Web Docs | Igalia&quot;&gt;Open Web Docs | Igalia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.w3.org/blog/2021/01/welcome-to-open-web-docs/&quot; title=&quot;Welcome to Open Web Docs! | W3C Blog&quot;&gt;Welcome to Open Web Docs! | W3C Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/openwebdocs/project/blob/main/steering-committee/membership-expectations.md&quot; title=&quot;project/membership-expectations.md at main · openwebdocs/project&quot;&gt;project/membership-expectations.md at main · openwebdocs/project&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;how-to-solve-the-infinite-loop-of-react-useeffect&quot;&gt;How to Solve the Infinite Loop of React.useEffect()&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://dmitripavlutin.com/react-useeffect-infinite-loop/&quot; title=&quot;How to Solve the Infinite Loop of React.useEffect()&quot;&gt;dmitripavlutin.com/react-useeffect-infinite-loop/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Reactの&lt;code&gt;useEffect&lt;/code&gt;の中でStateを更新した場合になぜ無限ループが起きるのか、またその修正方法について&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;migrating-puppeteer-to-typescript-web-google-developers&quot;&gt;Migrating Puppeteer to TypeScript  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2021/01/puppeteer-typescript&quot; title=&quot;Migrating Puppeteer to TypeScript  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/updates/2021/01/puppeteer-typescript&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;PuppeteerのコードベースをJavaScriptからTypeScriptの移行するどのように取り組んでいるかについて&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=BHogHiiyuQk&quot; title=&quot;Upgrading DevTools&amp;amp;#x27; architecture to the modern web - YouTube&quot;&gt;Upgrading DevTools&amp;#39; architecture to the modern web - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-secret-parameter-lfr-and-potential-rce-in-nodejs-apps&quot;&gt;The Secret Parameter, LFR, and Potential RCE in NodeJS Apps&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.shoebpatel.com/2021/01/23/The-Secret-Parameter-LFR-and-Potential-RCE-in-NodeJS-Apps/&quot; title=&quot;The Secret Parameter, LFR, and Potential RCE in NodeJS Apps&quot;&gt;blog.shoebpatel.com/2021/01/23/The-Secret-Parameter-LFR-and-Potential-RCE-in-NodeJS-Apps/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;express&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Expressで&lt;code&gt;hbs&lt;/code&gt;(handlebars)を使っている際に&lt;code&gt;res.render&lt;/code&gt;の第2引数にユーザー入力をそのまま渡してしまうと、&lt;code&gt;layout&lt;/code&gt;プロパティによって任意のファイルを読める問題について。&lt;br&gt;
また、Handlerbars 4.0.14未満にあった脆弱性と組み合わせることでRCEにつながるという話&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/pillarjs/hbs&quot; title=&quot;pillarjs/hbs: Express view engine wrapper for Handlebars&quot;&gt;pillarjs/hbs: Express view engine wrapper for Handlebars&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://expressjs.com/ja/api.html#res.render&quot; title=&quot;Express 4.x - API リファレンス&quot;&gt;Express 4.x - API リファレンス&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;speaker-deck&quot;&gt;ブラウザの作り方 - Speaker Deck&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/keiya01/burauzafalsezuo-rifang&quot; title=&quot;ブラウザの作り方 - Speaker Deck&quot;&gt;speakerdeck.com/keiya01/burauzafalsezuo-rifang&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Rust&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Let&amp;#39;s build a browser engine!を参考にブラウザのレンダリングエンジンを作りながら、どのようにHTMLやCSSのパースからレンダリングしているのかという話&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/keiya01/kamaitachi&quot; title=&quot;keiya01/kamaitachi: \&amp;amp;#x60;kamaitachi\&amp;amp;#x60; is a simple browser.&quot;&gt;keiya01/kamaitachi: `kamaitachi` is a simple browser.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://limpet.net/mbrubeck/2014/08/08/toy-layout-engine-1.html&quot; title=&quot;Let&amp;amp;#x27;s build a browser engine! Part 1: Getting started&quot;&gt;Let&amp;#39;s build a browser engine! Part 1: Getting started&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jsitor-javascript-html-css-online-editor&quot;&gt;JSitor - JavaScript, HTML, CSS, online editor&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://jsitor.com/&quot; title=&quot;JSitor - JavaScript, HTML, CSS, online editor&quot;&gt;jsitor.com/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;editor&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;jsfiddle的なHTML/CSS/JSを書いて公開できるPlaygroundサービス。&lt;br&gt;
Monaco Editorを使ったエディタ、整形機能を持っている&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;forgojs-forgo-an-ultra-light-ui-runtime&quot;&gt;forgojs/forgo: An ultra-light UI runtime&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/forgojs/forgo&quot; title=&quot;forgojs/forgo: An ultra-light UI runtime&quot;&gt;github.com/forgojs/forgo&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;jsx&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JSXで書けるUIライブラリ。&lt;br&gt;
Reactとは違いコンポーネント内でもDOM APIを扱う形になっていて、再レンダリングも手動で行う。&lt;br&gt;
ファイルサイズの小ささやフレームワークの抽象を少なくして、DOM APIを知っていれば扱えるようにするのが目的。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;nodepack&quot;&gt;Nodepack&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodepackjs.com/&quot; title=&quot;Nodepack&quot;&gt;nodepackjs.com/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.jsウェブフレームワーク。&lt;br&gt;
プロジェクトを管理するためのCLIとそれを拡張するプラグインシステムをもつ&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 26 Jan 2021 11:14:34 +0900</pubDate>
        <link>https://jser.info/2021/01/26/webpack-5.17.0lazycompilation-deno-1.7-open-web-docs/</link>
        <guid isPermaLink="true">https://jser.info/2021/01/26/webpack-5.17.0lazycompilation-deno-1.7-open-web-docs/</guid>
        
        <category>node.js</category>
        
        <category>browser</category>
        
        <category>React</category>
        
        <category>IPFS</category>
        
        <category>p2p</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2021-01-18のJS: Snowpack 3.0、Front-End Performance Checklist、State of JS 2020</title>
        <description>&lt;p&gt;JSer.info #523 - &lt;a href=&quot;https://www.snowpack.dev/posts/2021-01-13-snowpack-3-0&quot;&gt;Snowpack v3.0&lt;/a&gt;がリリースされました。&lt;/p&gt;

&lt;p&gt;Snowpack 3.0ではPre-bundled &lt;a href=&quot;https://www.snowpack.dev/guides/streaming-imports&quot;&gt;Streaming Imports&lt;/a&gt;という機能がopt-inで利用できます。&lt;br&gt;
オプションで有効にすると、ローカルでbundleしたファイルではなく&lt;a href=&quot;https://www.skypack.dev/&quot;&gt;Skypack&lt;/a&gt;からESM(ECMAScript Modules)をロードできます。&lt;br&gt;
一度ロードしたESMはキャッシュされ、次回からはオフラインでも利用できます。&lt;br&gt;
また、この仕組みでロードするパッケージのバージョンは &lt;code&gt;snowpack.deps.json&lt;/code&gt; というファイルで管理できます。&lt;/p&gt;

&lt;p&gt;その他には、esbuildを使ったbundleの最適化のサポート、snowpackをJavaScriptから扱うAPIの更新などが含まれています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.snowpack.dev/guides/optimize-and-bundle&quot;&gt;Optimize &amp;amp; Bundle for Production&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.snowpack.dev/reference/javascript-interface&quot;&gt;JavaScript API&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2021/01/front-end-performance-2021-free-pdf-checklist/&quot;&gt;Front-End Performance Checklist 2021 — Smashing Magazine&lt;/a&gt;では、フロントエンドのパフォーマンスに関して幅広い範囲でまとめられています。&lt;/p&gt;

&lt;p&gt;チェックリストという方式でパフォーマンスに関してまとめられていて、要約バージョンとしてPDFなども用意されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.dropbox.com/s/34noajrbm324iai/performance-checklist-1.4.pdf?dl=0&quot;&gt;performance-checklist-1.4.pdf&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;記事では、それぞれのチェック項目について詳細な解説が書かれています。&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;JavaScriptを扱う開発者アンケートであるState of JSの2020の結果が公開されています。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://2020.stateofjs.com/en-US/&quot;&gt;State of JS 2020&lt;/a&gt; (&lt;a href=&quot;https://2020.stateofjs.com/ja-JP/&quot;&gt;日本語&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ECMAScriptの言語機能、ライブラリ、ツール、エディタ、リソースなど各項目ごとに認知、満足度、興味、利用しているかなどをアンケートを行いその結果をまとめられています。&lt;br&gt;
結果の元となった回答者の属性については&lt;a href=&quot;https://2020.stateofjs.com/en-US/demographics/&quot;&gt;Demographics&lt;/a&gt;で公開されています。&lt;br&gt;
また、回答結果のJSONデータは &lt;a href=&quot;https://www.kaggle.com/sachag/state-of-js&quot;&gt;State of JS | Kaggle&lt;/a&gt; に公開されています。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;part-2a003bb4b350ea2b&quot;&gt;お知らせ&lt;/h2&gt;

&lt;p&gt;2021年1月16日でJSer.infoが10周年を迎えたので、10周年を記念した記事を書きました。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jser.info/2021/01/16/jser-10th/&quot;&gt;JSer.info 10周年: JavaScript情報の集め方、書き方、まとめ方 - JSer.info&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;今年もよろしくお願いします。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ヘッドライン&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;snowpack-v3-0&quot;&gt;Snowpack v3.0&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.snowpack.dev/posts/2021-01-13-snowpack-3-0&quot; title=&quot;Snowpack v3.0&quot;&gt;www.snowpack.dev/posts/2021-01-13-snowpack-3-0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Snowpack 3.0リリース。&lt;br&gt;
Streaming Importsのサポート、esbuildを使ったbundleの最適化のサポート、JavaScript APIの更新など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v6-0-0-karma-runner-karma&quot;&gt;Release v6.0.0 · karma-runner/karma&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/karma-runner/karma/releases/tag/v6.0.0&quot; title=&quot;Release v6.0.0 · karma-runner/karma&quot;&gt;github.com/karma-runner/karma/releases/tag/v6.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Karma 6.0.0リリース。&lt;br&gt;
&lt;code&gt;customFileHandlers&lt;/code&gt;と&lt;code&gt;customScriptTypes&lt;/code&gt;の削除、不正なオプションを渡した時にエラーを出すようになるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v15-6-0-current-node-js&quot;&gt;Node v15.6.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v15.6.0/&quot; title=&quot;Node v15.6.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v15.6.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 15.6.0リリース。&lt;br&gt;
&lt;code&gt;child_process&lt;/code&gt;に&lt;code&gt;overlapped&lt;/code&gt;オプション、&lt;code&gt;.fork&lt;/code&gt;がAbortSinalに対応。&lt;br&gt;
&lt;code&gt;crypto&lt;/code&gt;モジュールに&lt;code&gt;randomUUID&lt;/code&gt;メソッドの追加、X509Certificate APIのサポート。&lt;br&gt;
&lt;code&gt;server.listen&lt;/code&gt;がAbortSignalをサポート、&lt;code&gt;http.Agent&lt;/code&gt;の&lt;code&gt;scheduling&lt;/code&gt;オプションにLIFOアルゴリズムを追加など&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-typescript-4-2-beta-typescript&quot;&gt;Announcing TypeScript 4.2 Beta | TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://devblogs.microsoft.com/typescript/announcing-typescript-4-2-beta/&quot; title=&quot;Announcing TypeScript 4.2 Beta | TypeScript&quot;&gt;devblogs.microsoft.com/typescript/announcing-typescript-4-2-beta/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScript 4.2 Betaリリース。&lt;br&gt;
Tuple TypesでRest Elementをサポート、Type Aliasの型追跡の改善、template literal typesの改善。&lt;br&gt;
&lt;code&gt;noPropertyAccessFromIndexSignature&lt;/code&gt;オプションの追加、&lt;code&gt;abstract new&lt;/code&gt;のサポートなど。&lt;br&gt;
また、&lt;code&gt;--explainFiles&lt;/code&gt;でなぜファイルが含まれるかを表示できるようになるなど&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;adobe-flash-player-end-of-life&quot;&gt;Adobe Flash Player End of Life&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.adobe.com/products/flashplayer/end-of-life.html&quot; title=&quot;Adobe Flash Player End of Life&quot;&gt;www.adobe.com/products/flashplayer/end-of-life.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;flash&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Adobe Flash Playerが2021年1月12日でサポートを終了した。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-scala-js-1-4-0-scala-js&quot;&gt;Announcing Scala.js 1.4.0 - Scala.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.scala-js.org/news/2021/01/12/announcing-scalajs-1.4.0/&quot; title=&quot;Announcing Scala.js 1.4.0 - Scala.js&quot;&gt;www.scala-js.org/news/2021/01/12/announcing-scalajs-1.4.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;scala&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Scala.js 1.4.0リリース&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;アーティクル&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;reflections-for-2020-2021-the-vue-point&quot;&gt;Reflections for 2020-2021 | The Vue Point&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.vuejs.org/posts/hello-2021.html&quot; title=&quot;Reflections for 2020-2021 | The Vue Point&quot;&gt;blog.vuejs.org/posts/hello-2021.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Vueの2020年の取り組みと2021の取り組み予定について。&lt;br&gt;
Vue 2から3へのマイグレーションツール、Vue CLIのwebpack 5対応、Vue 3のIE 11対応、Vue 2.7のリリースなどを予定している。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vuejs/vue/projects/6&quot; title=&quot;Roadmap&quot;&gt;Roadmap&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;front-end-performance-checklist-2021-smashing-magazine&quot;&gt;Front-End Performance Checklist 2021 — Smashing Magazine&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2021/01/front-end-performance-2021-free-pdf-checklist/&quot; title=&quot;Front-End Performance Checklist 2021 — Smashing Magazine&quot;&gt;www.smashingmagazine.com/2021/01/front-end-performance-2021-free-pdf-checklist/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;フロントエンドパフォーマンスチェックリスト。&lt;br&gt;
サマリ版のPDFと詳細な解説をした記事で構成されている。&lt;br&gt;
全部で77コの項目があり、パフォーマンスの文化、メトリクスの設定や収集、さまざまなパフォーマンスTipsについて書かれている&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;deno-in-2020&quot;&gt;Deno in 2020&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://deno.land/posts/deno-in-2020&quot; title=&quot;Deno in 2020&quot;&gt;deno.land/posts/deno-in-2020&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;deno&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Denoの2020年の変更点のサマリと2021年のロードマップについて。&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;スライド、動画関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;state-of-js-2020&quot;&gt;State of JS 2020&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://2020.stateofjs.com/en-US/&quot; title=&quot;State of JS 2020&quot;&gt;2020.stateofjs.com/en-US/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;アンケート&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScript開発者アンケートであるState of JS 2020の結果が公開された。&lt;br&gt;
言語、ライブラリ、ツール、エディタ、リソースなど各項目ごとに認知、満足度、興味、利用しているかなどをアンケートをとったもの&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;サイト、サービス、ドキュメント&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;znck-vue-developer-experience-a-collection-of-tools-for-vue-ecosystem&quot;&gt;znck/vue-developer-experience: A collection of tools for vue ecosystem.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/znck/vue-developer-experience&quot; title=&quot;znck/vue-developer-experience: A collection of tools for vue ecosystem.&quot;&gt;github.com/znck/vue-developer-experience&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;VSCode&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;plugin&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Vueに関するツール、VSCodeプラグインを扱うリポジトリ。&lt;br&gt;
静的解析ツール、パーサ、ASTヘルパー、VScode向けのプラグインなどが含まれている&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;imolorhe-altair-a-beautiful-feature-rich-graphql-client-for-all-platforms&quot;&gt;imolorhe/altair: ✨⚡️ A beautiful feature-rich GraphQL Client for all platforms.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/imolorhe/altair&quot; title=&quot;imolorhe/altair: ✨⚡️ A beautiful feature-rich GraphQL Client for all platforms.&quot;&gt;github.com/imolorhe/altair&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;GraphQL&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;EmEditor&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;GraphQLクライアントのIDE&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;ソフトウェア、ツール、ライブラリ関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;egoist-tsup-bundle-your-typescript-library-with-no-config-powered-by-esbuild&quot;&gt;egoist/tsup: Bundle your TypeScript library with no config, powered by esbuild.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/egoist/tsup&quot; title=&quot;egoist/tsup: Bundle your TypeScript library with no config, powered by esbuild.&quot;&gt;github.com/egoist/tsup&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;esbuildを使ったTypeScriptのコードをbundleしてesm,cjs,iife形式のコードを出力するツール&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;tw-in-js-twind-the-smallest-fastest-most-feature-complete-tailwind-in-js-solution-in-existence&quot;&gt;tw-in-js/twind: The smallest, fastest, most feature complete Tailwind-in-JS solution in existence.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tw-in-js/twind&quot; title=&quot;tw-in-js/twind: The smallest, fastest, most feature complete Tailwind-in-JS solution in existence.&quot;&gt;github.com/tw-in-js/twind&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Tailwind CSSをCSS-in-JSで行うライブラリとツール。&lt;br&gt;
Template Literalを使ったクラスの生成するAPI、SSR向けにCSSファイルの作成、ビルド無しでTailwindクラスを利用するshimライブラリなどを提供する。&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;tomeraberbach-grfn-a-tiny-400b-utility-that-executes-a-dependency-graph-of-async-functions-as-concurrently-as-possible&quot;&gt;TomerAberbach/grfn: 🦅 A tiny (~400B) utility that executes a dependency graph of async functions as concurrently as possible.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/TomerAberbach/grfn&quot; title=&quot;TomerAberbach/grfn: 🦅 A tiny (~400B) utility that executes a dependency graph of async functions as concurrently as possible.&quot;&gt;github.com/TomerAberbach/grfn&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Promiseを使った非同期処理のコントロールフローを管理するライブラリ。&lt;br&gt;
デバッグ用にコントールフローの図を生成する機能を持っている&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;natemoo-re-microsite-a-fast-opinionated-static-site-generator-powered-by-snowpack-build-simple-static-sites-with-fool-proof-performance-by-leveraging-automatic-partial-hydration&quot;&gt;natemoo-re/microsite: A fast, opinionated static site generator powered by Snowpack. Build simple static sites with fool-proof performance by leveraging automatic partial hydration.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/natemoo-re/microsite&quot; title=&quot;natemoo-re/microsite: A fast, opinionated static site generator powered by Snowpack. Build simple static sites with fool-proof performance by leveraging automatic partial hydration.&quot;&gt;github.com/natemoo-re/microsite&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;SnowpackとPreactを使ったNext.jsライクなディレクトリ構造のルールを持った静的サイトジェネレーター&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;github-jtml-write-html-in-javascript-using-template-tags&quot;&gt;github/jtml: Write HTML in JavaScript, using template-tags.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/github/jtml&quot; title=&quot;github/jtml: Write HTML in JavaScript, using template-tags.&quot;&gt;github.com/github/jtml&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebComponents&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;GitHubのlit-htmlインスパイアなテンプレートレンダリングライブラリ。&lt;br&gt;
WHAWG HTMLで提案中のTemplate Partsの実装を含んでいる&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;catalyst&quot;&gt;Catalyst&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.github.io/catalyst/&quot; title=&quot;Catalyst&quot;&gt;github.github.io/catalyst/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Github&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebComponents&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;GitHubのWeb Componentsライブラリ。&lt;br&gt;
Custom Elementの登録、Stimulusインスパイアな&lt;code&gt;data-action&lt;/code&gt;属性を使ったイベントリスナー、Custom Element内からHTMLの要素を紐付けるクエリ機能を持っている。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.blog/2018-09-06-removing-jquery-from-github-frontend/&quot; title=&quot;Removing jQuery from GitHub.com frontend - The GitHub Blog&quot;&gt;Removing jQuery from GitHub.com frontend - The GitHub Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;書籍関係&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-it-kindle-amazon&quot;&gt;JavaScript［完全］入門 | 柳井 政和 | コンピュータ・IT | Kindleストア | Amazon&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.amazon.co.jp/dp/B08PKHSVFZ/&quot; title=&quot;JavaScript［完全］入門 | 柳井 政和 | コンピュータ・IT | Kindleストア | Amazon&quot;&gt;www.amazon.co.jp/dp/B08PKHSVFZ/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;2021年2月4日 発売&lt;br&gt;
JavaScriptの入門書&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Mon, 18 Jan 2021 11:02:00 +0900</pubDate>
        <link>https://jser.info/2021/01/18/snowpack-3.0-front-end-performance-checklist-state-of-js-2020/</link>
        <guid isPermaLink="true">https://jser.info/2021/01/18/snowpack-3.0-front-end-performance-checklist-state-of-js-2020/</guid>
        
        <category>Tools</category>
        
        <category>TypeScript</category>
        
        <category>browser</category>
        
        <category>WebComponents</category>
        
        <category>Vue</category>
        
        
        <category>JSer</category>
        
      </item>
    
  </channel>
</rss>
