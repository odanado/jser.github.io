<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>JSer.info</title>
    <description>JavaScriptの最新情報を紹介する週刊ブログ</description>
    <link>https://jser.info/ko/</link>
    <atom:link href="https://jser.info/ko/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Tue, 23 Mar 2021 13:03:29 +0900</pubDate>
    <lastBuildDate>Tue, 23 Mar 2021 13:03:29 +0900</lastBuildDate>
    <generator>Jekyll v3.9.0</generator>
    
      <item>
        <title>2021-03-02: Bundle Size 외의 JavaScript 성능, CORS 완벽 가이드</title>
        <description>&lt;p&gt;JSer.info #529 - &lt;a href=&quot;https://nolanlawson.com/2021/02/23/javascript-performance-beyond-bundle-size/&quot;&gt;JavaScript performance beyond bundle size | Read the Tea Leaves&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;자바스크립트의 성능 측정을 주제로 한 글.&lt;br&gt;
Bundle Size 관련해서는 &lt;a href=&quot;https://bundlephobia.com/&quot;&gt;BundlePhobia&lt;/a&gt;나 &lt;a href=&quot;https://github.com/webpack-contrib/webpack-bundle-analyzer&quot;&gt;Webpack Bundle Analyzer&lt;/a&gt; 등 쉽게 측정할 수 있는 도구를 소개하며 그 이외의 자바스크립트 성능 지표는 어떻게 살펴 볼 수 있는지 다룬다.&lt;br&gt;
런타임 CPU 비용, 전력 소비량, 메모리 사용량, 디스크 사용량 등 Bundle Size 이외의 지표를 측정하고 살펴보는 방법 소개.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.huli.tw/2021/02/19/cors-guide-1/&quot;&gt;CORS 完全手冊&lt;/a&gt;(중국어)&lt;/p&gt;

&lt;p&gt;CORS를 주제로 한 연재 글.&lt;br&gt;
CORS의 개념, 대응 방법, 자주 하는 실수, CORB / CORP / COEP / COOP 등 최근의 오리진 관련 규칙, 보안 문제 등을 다룬다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.huli.tw/2021/02/19/cors-guide-1/&quot;&gt;CORS 完全手冊（一）：為什麼會發生 CORS 錯誤？&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;크로스 오리진 요청이란 무엇인가? CORS 에러는 왜 일어나는가. &lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.huli.tw/2021/02/19/cors-guide-2/&quot;&gt;CORS 完全手冊（二）：如何解決 CORS 問題？&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;CORS 대응 수단(express를 예로 소개)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.huli.tw/2021/02/19/cors-guide-3/&quot;&gt;CORS 完全手冊（三）：CORS 詳解&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;CORS의 구조, 각 헤더의 의미를 시나리오와 함께 소개.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.huli.tw/2021/02/19/cors-guide-4/&quot;&gt;CORS 完全手冊（四）：一起看規範&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;CORS 사양을 &lt;a href=&quot;https://fetch.spec.whatwg.org/&quot;&gt;Fetch Standard&lt;/a&gt;와 함께 설명. &lt;code&gt;Vary&lt;/code&gt; 헤더에서의 캐시 주의점도 소개.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.huli.tw/2021/02/19/cors-guide-5/&quot;&gt;CORS 完全手冊（五）：跨來源的安全性問題&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;res.headers[&amp;#39;Access-Control-Allow-Origin&amp;#39;] = req.headers[&amp;#39;Origin&amp;#39;]&lt;/code&gt; 처럼 Origin을 별 생각없이 설정하는 실수(취약성)에 대해서.&lt;/li&gt;
&lt;li&gt;CORB / CORP / COEP / COOP와 Site Isolation에 대해서.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.huli.tw/2021/02/19/cors-guide-6/&quot;&gt;CORS 完全手冊（六）：總結、後記與遺珠&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;CORS 에러의 패턴 분류, Origin Policy, CORS에 대한 자세한 이야기.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;CORS에 대한 필요한 지식이 거의 소개돼 있어 추천.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;아티클&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-env-a-better-way-to-read-environment-variables-in-javascript-human-who-codes&quot;&gt;Introducing Env: a better way to read environment variables in JavaScript - Human Who Codes&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://humanwhocodes.com/blog/2021/02/introducing-env-javascript-environment-variables/&quot; title=&quot;Introducing Env: a better way to read environment variables in JavaScript - Human Who Codes&quot;&gt;humanwhocodes.com/blog/2021/02/introducing-env-javascript-environment-variables/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;환경 변수를 읽어들일 때 자주 있는 문제를 회피할 수 있는 라이브러리 Env 소개.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;css-in-js-support-in-devtools-web-google-developers&quot;&gt;CSS-in-JS support in DevTools  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2021/02/css-in-js&quot; title=&quot;CSS-in-JS support in DevTools  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/updates/2021/02/css-in-js&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 85 DevTools의 CSS-in-JS 대응 기능 소개.&lt;br&gt;
CSSOM API로 추가한 스타일 규칙도 개발자 도구에서 편집할 수 있게 된다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-performance-beyond-bundle-size-read-the-tea-leaves&quot;&gt;JavaScript performance beyond bundle size | Read the Tea Leaves&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nolanlawson.com/2021/02/23/javascript-performance-beyond-bundle-size/&quot; title=&quot;JavaScript performance beyond bundle size | Read the Tea Leaves&quot;&gt;nolanlawson.com/2021/02/23/javascript-performance-beyond-bundle-size/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScript의 Bundle size와 런타인 CPU 비용, 메모리 이용량, 전력 사용량을 알아볼 수 있는 방법 소개.&lt;br&gt;
Bundle Size에 대해서는 BundlePhobia나 Web Vitals 등에서 알기 쉽게 볼 수 있다. 하지만 성능은 좀 더 폭넓은 개념으로, Bundle Size 외의 지표는 어떻게 볼 수 있는지 다룬다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://bundlephobia.com/&quot; title=&quot;BundlePhobia ❘ cost of adding a npm package&quot;&gt;BundlePhobia ❘ cost of adding a npm package&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;how-web-content-can-affect-power-usage-webkit&quot;&gt;How Web Content Can Affect Power Usage | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/8970/how-web-content-can-affect-power-usage/&quot; title=&quot;How Web Content Can Affect Power Usage | WebKit&quot;&gt;webkit.org/blog/8970/how-web-content-can-affect-power-usage/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webkit&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CPU, GPU, 네트워크 등이 전력 소비에 주는 영향 소개.&lt;br&gt;
백그라운드 모드에서 CPU 소비를 줄이는 방법, Web Inspector Energy Impact 표시.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;why-javascript-developers-should-prefer-axios-over-fetch-by-sabesan-sathananthan-feb-2021-better-programming&quot;&gt;Why JavaScript Developers Should Prefer Axios Over Fetch | by Sabesan Sathananthan | Feb, 2021 | Better Programming&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://betterprogramming.pub/why-javascript-developers-should-prefer-axios-over-fetch-294b28a96e2c&quot; title=&quot;Why JavaScript Developers Should Prefer Axios Over Fetch | by Sabesan Sathananthan | Feb, 2021 | Better Programming&quot;&gt;betterprogramming.pub/why-javascript-developers-should-prefer-axios-over-fetch-294b28a96e2c&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Fetch&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Fetch API와 axios 비교.&lt;br&gt;
응답 데이터 자동 변환, 에러 처리, 다운로드의 프로그래스 처리, 업로드 프로그래스 처리, HTTP 인터셉트, 타임아웃, 병렬 요청 등을 주제로 비교한다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;use-css-variables-instead-of-react-context-epic-react-by-kent-c-dodds&quot;&gt;Use CSS Variables instead of React Context | Epic React by Kent C. Dodds&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://epicreact.dev/css-variables/&quot; title=&quot;Use CSS Variables instead of React Context | Epic React by Kent C. Dodds&quot;&gt;epicreact.dev/css-variables/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CSS-in-JS를 사용한 Theme 컴포넌트와 같은 테마 변환 기능을 CSS Custom Properties로 구현한 이야기.&lt;br&gt;
구현의 차이와 렌더링 플로우의 차이 소개.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-context-export-stins-blog&quot;&gt;React Context를 export 하는 건 안티 패턴이 아닐까 생각한다 | stin&amp;#039;s blog(일본어)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.stin.ink/articles/do-not-export-react-context&quot; title=&quot;React Context를 export 하는 건 안티 패턴이 아닐까 생각한다 | stin&amp;amp;#039;s blog&quot;&gt;blog.stin.ink/articles/do-not-export-react-context&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React Context를 모듈로 export 하지 않고 Custom Hook으로서 export 하는 방법과 유용성 소개.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;cors-cors-huli&quot;&gt;CORS 完全手冊（一）：為什麼會發生 CORS 錯誤？ - Huli(중국어)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.huli.tw/2021/02/19/cors-guide-1/&quot; title=&quot;CORS 完全手冊（一）：為什麼會發生 CORS 錯誤？ - Huli&quot;&gt;blog.huli.tw/2021/02/19/cors-guide-1/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CORS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CORS 개념, 대응 방법, 자주 있는 문제, CORB / CORP / COEP / COOP 등 옵션 관련 규칙, 보안 측면의 문제 등에 대해 연재하는 글.&lt;br&gt;
크로스 오리진은 왜 차단되는지, CORS 사양 소개, CORS 캐시, CORS 설정 실수에 대해 이야기한다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;whats-new-in-devtools-chrome-90-web-google-developers&quot;&gt;What&amp;#039;s New In DevTools (Chrome 90)  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2021/02/devtools&quot; title=&quot;What&amp;amp;#039;s New In DevTools (Chrome 90)  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/updates/2021/02/devtools&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 90 Dev Tools 변경 사항 소개.&lt;br&gt;
CSS flexbox 디버깅 도구 추가, Core Web Vitals 오버레이 표시.&lt;br&gt;
Issues tab 개선, CSS color-gamut 에뮬레이터 기능 추가.&lt;br&gt;
Dev Tools를 활성화한 상태에서의 디버깅 성능 개선, &lt;code&gt;fn.displayName&lt;/code&gt; 지원 비권장.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;슬라이드, 영상&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;goudekettingrm-link-overview-jsworld-2021&quot;&gt;GoudekettingRM/link-overview-jsworld-2021&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/GoudekettingRM/link-overview-jsworld-2021&quot; title=&quot;GoudekettingRM/link-overview-jsworld-2021&quot;&gt;github.com/GoudekettingRM/link-overview-jsworld-2021&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Conference&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JS World 2021의 슬라이드와 영상이 정리돼 있다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://frontenddeveloperlove.com/&quot; title=&quot;JS World - Online Conference by Frontend Love&quot;&gt;JS World - Online Conference by Frontend Love&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;소프트웨어, 도구, 라이브러리&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jcubic-tagger-zero-dependency-vanilla-javascript-tag-editor&quot;&gt;jcubic/tagger: Zero Dependency, Vanilla JavaScript Tag Editor&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/jcubic/tagger&quot; title=&quot;jcubic/tagger: Zero Dependency, Vanilla JavaScript Tag Editor&quot;&gt;github.com/jcubic/tagger&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;의존 하는 모듈 없는 태그 입력 UI 라이브러리.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;wynntee-joss-joss-can-serialize-almost-every-javascript-data-type-and-data-structure-so-data-can-be-seamlessly-exchanged-between-browsers-and-servers-deno-or-node-js&quot;&gt;wynntee/joss: JOSS can serialize almost every JavaScript data type and data structure, so data can be seamlessly exchanged between browsers and servers (Deno or Node.js).&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/wynntee/joss&quot; title=&quot;wynntee/joss: JOSS can serialize almost every JavaScript data type and data structure, so data can be seamlessly exchanged between browsers and servers (Deno or Node.js).&quot;&gt;github.com/wynntee/joss&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JOSS라는 포멧으로 JavaScript 객체를 직렬화, 역직렬화 하는 사양과 그 레퍼런스를 구현한 라이브러리.&lt;br&gt;
BigInt, 순환 참조, 희소배열(sparse arrays), &lt;code&gt;-0&lt;/code&gt; 등 JSON에는 없는 데이터 형도 지원한다.&lt;br&gt;
브라우저, Node, Deno에서 동작.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.wynntee.com/projects/serialization/specification/index.html&quot; title=&quot;JS Open Serialization Scheme&quot;&gt;JS Open Serialization Scheme&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;andrewcourtice-harlem-simple-unopinionated-lightweight-and-extensible-state-management-for-vue-3&quot;&gt;andrewcourtice/harlem: Simple, unopinionated, lightweight and extensible state management for Vue 3&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/andrewcourtice/harlem&quot; title=&quot;andrewcourtice/harlem: Simple, unopinionated, lightweight and extensible state management for Vue 3&quot;&gt;github.com/andrewcourtice/harlem&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Vue 3 용 상태 관리 라이브러리.&lt;br&gt;
plugin으로 Vue DevTools 대응, SSR, Storage 기억, 트랜잭션 대응이 가능하다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;도서&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react&quot;&gt;React 테스트 응용, 테스트가 괴로운 사람에게(일본어)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://zenn.dev/tkdn/books/react-testing-patterns&quot; title=&quot;React 테스트 응용, 테스트가 괴로운 사람에게&quot;&gt;zenn.dev/tkdn/books/react-testing-patterns&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React 컴포넌트와 Hooks 테스트를 주제로 한 도서.&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 02 Mar 2021 06:33:41 +0900</pubDate>
        <link>https://jser.info/ko/2021/03/02/bundle-sizejavascript-cors/</link>
        <guid isPermaLink="true">https://jser.info/ko/2021/03/02/bundle-sizejavascript-cors/</guid>
        
        <category>debug</category>
        
        <category>React</category>
        
        <category>Chrome</category>
        
        <category>CSS</category>
        
        <category>performance</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2021-02-24: Vite v2, Babel 7.13.0(설정 공통화), WHATWG Streams 입문 가이드</title>
        <description>&lt;p&gt;JSer.info #528 - 개발 환경 도구 Vite 2.0 릴리스.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://dev.to/yyx990803/announcing-vite-2-0-2f0a&quot;&gt;Announcing Vite 2.0 - DEV Community 👩‍💻👨‍💻&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://vitejs.dev/&quot;&gt;Vite&lt;/a&gt; 2.0은 특정 프레임워크에 의존하지 않으며, &lt;a href=&quot;https://github.com/vitejs/vite/tree/main/packages/create-app&quot;&gt;다양한 프레임워크에 대응한 템플릿&lt;/a&gt;이 준비돼 있다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/preactjs/wmr&quot;&gt;Preact의 WMR&lt;/a&gt;에 영감을 받아 개발된 Rollup 인터페이스를 확장한 플러그인을 지원하고 CSS를 다루는 방식이 개선됐다.&lt;br&gt;
또, 시험적으로 &lt;a href=&quot;https://vitejs.dev/guide/ssr.html&quot;&gt;SSR&lt;/a&gt; 지원이 추가됐다.&lt;/p&gt;

&lt;p&gt;이와 함께 1.x에서의 마이그레이션 가이드도 공개됐다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://vitejs.dev/guide/migration.html#config-options-change&quot;&gt;Migration from v1 | Vite&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;Babel 7.13.0 릴리스.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://babeljs.io/blog/2021/02/22/7.13.0&quot;&gt;7.13.0 Released: Records and Tuples, granular compiler assumptions, and top-level targets · Babel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Babel 설정 시 plugins이나 presets 내에서 중복해서 설정 했던 값을 한번에 다룰 수 있는 &lt;code&gt;targets&lt;/code&gt;와 &lt;code&gt;assumptions&lt;/code&gt; 지원이 추가됐다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;targets&lt;/code&gt;: 지원하는 브라우저 정보를 기입하는 옵션
-&lt;code&gt;assumptions&lt;/code&gt;:  사양의 엣지케이스를 무시하고 보다 작은 코드를 출력하기 위한 옵션&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;assumptions&lt;/code&gt;는 각 plugins이나 presets에서 &lt;code&gt;loose&lt;/code&gt;로 설정 했었던 것을 정리한 옵션이다.&lt;br&gt;
그 외로는 ES Proposal Stage 2의 Records와 Tuples 지원, Flow의 &lt;code&gt;this&lt;/code&gt; 파라메터 지원, 타입스크립트 4.2 지원 등이 추가됐다.&lt;br&gt;
또, &lt;code&gt;@babel/runtime&lt;/code&gt;이 Node.js의 &lt;code&gt;exports&lt;/code&gt; 필드에 대응됐고 &lt;code&gt;useESModules&lt;/code&gt; 옵션은 비권장 됐다.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://web.dev/streams/&quot;&gt;Streams—The definitive guide&lt;/a&gt;에는 WHATWG Stream에 대한 설명이 자세히 작성돼 있다.&lt;/p&gt;

&lt;p&gt;Stream의 기본적인 컨셉, 구조, &lt;code&gt;ReadableStream&lt;/code&gt;/ &lt;code&gt;WritableStream&lt;/code&gt; / &lt;code&gt;TransformStream&lt;/code&gt;의 사용법, &lt;code&gt;pipeTo&lt;/code&gt;로 연결하는 방법을 다루고 있다.&lt;br&gt;
또, Fetch API, Text Encoding, Compression, File System API, Web Sockets 등 Stream을 지원하고 있는 API도 소개한다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;헤드라인&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-vite-2-0-dev-community&quot;&gt;Announcing Vite 2.0 - DEV Community 👩‍💻👨‍💻&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://dev.to/yyx990803/announcing-vite-2-0-2f0a&quot; title=&quot;Announcing Vite 2.0 - DEV Community 👩‍💻👨‍💻&quot;&gt;dev.to/yyx990803/announcing-vite-2-0-2f0a&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;특정 프레임워크에 의존하지 않는 개발 환경 도구 Vite 2.0 릴리스.&lt;br&gt;
공식 템플릿을 제공하여 Vue와 React 등을 지원, WMR에 영감을 받아 개발된 Rollup 인터페이스를 확장한 플러그인 지원, CSS를 다루는 방식 개선.&lt;br&gt;
또, 실험적으로 SSR도 지원한다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://vitejs.dev/guide/migration.html#config-options-change&quot; title=&quot;Migration from v1 | Vite&quot;&gt;Migration from v1 | Vite&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v15-9-0-current-node-js&quot;&gt;Node v15.9.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v15.9.0/&quot; title=&quot;Node v15.9.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v15.9.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 15.9.0 릴리스.&lt;br&gt;
&lt;code&gt;fs/promises&lt;/code&gt;에 &lt;code&gt;watch()&lt;/code&gt; 추가, &lt;code&gt;fs.watch&lt;/code&gt;가 AbortSignal을 지원, &lt;code&gt;timers/promises&lt;/code&gt;에서 &lt;code&gt;setInterval&lt;/code&gt;을 async iterator로 다룰 수 있도록 개선.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-3-9-0-2021-02-19-zloirock-core-js&quot;&gt;Release 3.9.0 - 2021.02.19 · zloirock/core-js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zloirock/core-js/releases/tag/v3.9.0&quot; title=&quot;Release 3.9.0 - 2021.02.19 · zloirock/core-js&quot;&gt;github.com/zloirock/core-js/releases/tag/v3.9.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;polyfill&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;core-js 3.9.0 릴리스.&lt;br&gt;
ES Proposal Stage 1의 &lt;code&gt;Array#findLast()&lt;/code&gt;, &lt;code&gt;Array#findLastIndex()&lt;/code&gt; 지원.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v2-0-0-svg-svgo&quot;&gt;Release v2.0.0 · svg/svgo&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/svg/svgo/releases/tag/v2.0.0&quot; title=&quot;Release v2.0.0 · svg/svgo&quot;&gt;github.com/svg/svgo/releases/tag/v2.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;SVG&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;SVG 최적화 도구인 SVGO 2.0 릴리스.&lt;br&gt;
설정 파일의 서식 변경, CLI에서 json config를 inline으로 전달할 수 없도록 변경, Node.js API 변경.&lt;br&gt;
또, 브라우저 용 bundle이 패키지에 포함됐다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v1-0-0-rc-1-video-dev-hls-js&quot;&gt;Release v1.0.0-rc.1 · video-dev/hls.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/video-dev/hls.js/releases/tag/v1.0.0-rc.1&quot; title=&quot;Release v1.0.0-rc.1 · video-dev/hls.js&quot;&gt;github.com/video-dev/hls.js/releases/tag/v1.0.0-rc.1&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;HLS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;hls.js 1.0.0 RC1 릴리스.&lt;br&gt;
비호환 변경 사항으로 API 일부 변경, Promise를 의존하는 방식으로 수정됐다.&lt;br&gt;
Low-Latency HLS지원, 실험적으로 IMSC1의 기본적인 기능을 지원한다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v5-24-0-webpack-webpack&quot;&gt;Release v5.24.0 · webpack/webpack&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/webpack/webpack/releases/tag/v5.24.0&quot; title=&quot;Release v5.24.0 · webpack/webpack&quot;&gt;github.com/webpack/webpack/releases/tag/v5.24.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;webpack 5.24.0 릴리스.&lt;br&gt;
Concatenation하는 모듈을 탐색할 때의 성능 개선.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/webpack/webpack/pull/12745&quot; title=&quot;improve performance of finding modules for concatenation by sokra · Pull Request #12745 · webpack/webpack&quot;&gt;improve performance of finding modules for concatenation by sokra · Pull Request #12745 · webpack/webpack&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;7-13-0-released-records-and-tuples-granular-compiler-assumptions-and-top-level-targets-babel&quot;&gt;7.13.0 Released: Records and Tuples, granular compiler assumptions, and top-level targets · Babel&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://babeljs.io/blog/2021/02/22/7.13.0&quot; title=&quot;7.13.0 Released: Records and Tuples, granular compiler assumptions, and top-level targets · Babel&quot;&gt;babeljs.io/blog/2021/02/22/7.13.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Babel 7.13.0 릴리스.&lt;br&gt;
&lt;code&gt;targets&lt;/code&gt; 설정을 Top-Level에 하여 각 플러그인이 그 설정을 이용할 수 있도록 개선, 사양의 엣지케이스를 무시하고 보다 작은 코드를 출력하는 &lt;code&gt;assumptions&lt;/code&gt; 옵션 추가&lt;br&gt;
ES Proposal Stage 2의 Records와 Tuples 지원, Flow의 &lt;code&gt;this&lt;/code&gt; 인자 지원, TypeScript 4.2 지원.&lt;br&gt;
또, &lt;code&gt;@babel/runtime&lt;/code&gt;이 Node.js의 &lt;code&gt;exports&lt;/code&gt; 필드에 대응한다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;a-fabulous-february-firefox-86-mozilla-hacks-the-web-developer-blog&quot;&gt;A Fabulous February Firefox — 86! - Mozilla Hacks - the Web developer blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2021/02/a-fabulous-february-firefox-86/&quot; title=&quot;A Fabulous February Firefox — 86! - Mozilla Hacks - the Web developer blog&quot;&gt;hacks.mozilla.org/2021/02/a-fabulous-february-firefox-86/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Firefox 86 릴리스.&lt;br&gt;
ETP의 Strict Mode에서 State Partitioning 도입. Dev Tools의 &lt;code&gt;iframe&lt;/code&gt; inspection 개선.&lt;br&gt;
prefix 없이 &lt;code&gt;:autofill&lt;/code&gt; CSS 의사 클래스 지원, &lt;code&gt;Intl.DisplayNames&lt;/code&gt;를 기본적으로 활성화.&lt;br&gt;
또, 다른 도메인에서 페이지를 불러왔을 때 &lt;code&gt;Window.name&lt;/code&gt;이 빈 문자열이 되도록 변경됐다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.mozilla.org/en-US/firefox/86.0/releasenotes/&quot; title=&quot;Firefox 86.0, See All New Features, Updates and Fixes&quot;&gt;Firefox 86.0, See All New Features, Updates and Fixes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Releases/86&quot; title=&quot;Firefox 86 for developers - Mozilla | MDN&quot;&gt;Firefox 86 for developers - Mozilla | MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/mdn/browser-compat-data/pull/9129&quot; title=&quot;Note Window.name privacy behavior in Firefox 86+ by Rumyra · Pull Request #9129 · mdn/browser-compat-data&quot;&gt;Note Window.name privacy behavior in Firefox 86+ by Rumyra · Pull Request #9129 · mdn/browser-compat-data&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-typescript-4-2-typescript&quot;&gt;Announcing TypeScript 4.2 | TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://devblogs.microsoft.com/typescript/announcing-typescript-4-2/&quot; title=&quot;Announcing TypeScript 4.2 | TypeScript&quot;&gt;devblogs.microsoft.com/typescript/announcing-typescript-4-2/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScript 4.2 릴리스.&lt;br&gt;
Tuple Types에서 Rest Element 지원, Type Alias의 타입 추론 개선 ,오브젝트가 아니라 오퍼랜드에 대한 &lt;code&gt;in&lt;/code&gt; 연산자 검사 추가, &lt;code&gt;noPropertyAccessFromIndexSignature&lt;/code&gt; 옵션 추가, &lt;code&gt;abstract new&lt;/code&gt; 지원.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;february-2021-security-releases-node-js&quot;&gt;February 2021 Security Releases | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/vulnerability/february-2021-security-releases/&quot; title=&quot;February 2021 Security Releases | Node.js&quot;&gt;nodejs.org/en/blog/vulnerability/february-2021-security-releases/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 보안 업데이트로 10.x, 12.x, 14.x, 15.x가 각각 릴리스 됐다.&lt;br&gt;
HTTP2의 unknownProtocol를 사용한 DoS 대응, &lt;code&gt;--inspect&lt;/code&gt; 시의 DNS rebinding 수정, OpenSSL 보안 개선.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;아티클&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;interview-with-ryan-dahl-node-js-deno-creator-by-evrone&quot;&gt;Interview with Ryan Dahl, Node.js &amp;amp; Deno creator by Evrone&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://evrone.com/ryan-dahl-interview&quot; title=&quot;Interview with Ryan Dahl, Node.js &amp;amp;amp; Deno creator by Evrone&quot;&gt;evrone.com/ryan-dahl-interview&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;deno&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Interview&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;opinion&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js와 Deno 개발자인 Ryan Dahl 인터뷰 기사&lt;br&gt;
JavaScript / TypeScript, Deno 설계, 프로그래밍 언어의 특성과 문제 영역, 오픈소스에 관해 이야기한다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;understanding-z-index-in-css&quot;&gt;Understanding Z-Index in CSS&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ishadeed.com/article/understanding-z-index/&quot; title=&quot;Understanding Z-Index in CSS&quot;&gt;ishadeed.com/article/understanding-z-index/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CSS의 &lt;code&gt;z-index&lt;/code&gt;에 대해 그림과 함께 시각적으로 학습할 수 있는 튜토리얼.&lt;br&gt;
스택 컨텍스트, 스캑 컨텍스트를 만드는 속성, &lt;code&gt;z-index&lt;/code&gt;와의 관계에 대해 설명한다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;using-abortcontroller-as-an-alternative-for-removing-event-listeners-css-tricks&quot;&gt;Using AbortController as an Alternative for Removing Event Listeners | CSS-Tricks&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://css-tricks.com/using-abortcontroller-as-an-alternative-for-removing-event-listeners/&quot; title=&quot;Using AbortController as an Alternative for Removing Event Listeners | CSS-Tricks&quot;&gt;css-tricks.com/using-abortcontroller-as-an-alternative-for-removing-event-listeners/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 88부터 &lt;code&gt;addEventListener&lt;/code&gt;가 Abort Signal에 대응했기 때문에 &lt;code&gt;removeEventListener&lt;/code&gt;를 사용하지 않고 AbortController를 이용해서도 이벤트 리스너를 삭제할 수 있다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;listify-a-javascript-array&quot;&gt;Listify a JavaScript Array&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://kentcdodds.com/blog/listify-a-java-script-array&quot; title=&quot;Listify a JavaScript Array&quot;&gt;kentcdodds.com/blog/listify-a-java-script-array&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;i18n&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Intl.ListFormat&lt;/code&gt;를 사용하여 &amp;quot;A, B, and C&amp;quot;와 같은 문자를 각 언어 대응해서 표현을 작성할 수 있다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;introducing-state-partitioning-mozilla-hacks-the-web-developer-blog&quot;&gt;Introducing State Partitioning - Mozilla Hacks - the Web developer blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2021/02/introducing-state-partitioning/&quot; title=&quot;Introducing State Partitioning - Mozilla Hacks - the Web developer blog&quot;&gt;hacks.mozilla.org/2021/02/introducing-state-partitioning/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Firefox 86에서 ETP Strict 모드에서 활성화 되는 State Partitioning에 대해 소개.&lt;br&gt;
Cookie의 보존도 사이트 별로 doubled key가 되며, 3rd party cookie 등도 분리된다.&lt;br&gt;
SSO 등을 망가뜨리지 않도록 하기 위한 opener를 사용한 휴리스탁한 회피 방법과 Storage Access API에 대해서도 다루고 있다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Privacy/State_Partitioning&quot; title=&quot;State Partitioning - Mozilla | MDN&quot;&gt;State Partitioning - Mozilla | MDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.mozilla.org/security/2021/02/23/total-cookie-protection/&quot; title=&quot;Firefox 86 Introduces Total Cookie Protection - Mozilla Security Blog&quot;&gt;Firefox 86 Introduces Total Cookie Protection - Mozilla Security Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;streams-the-definitive-guide&quot;&gt;Streams—The definitive guide&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://web.dev/streams/&quot; title=&quot;Streams—The definitive guide&quot;&gt;web.dev/streams/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WHATWG&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;stream&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;WHATWG Streams 설명 글.&lt;br&gt;
컨셉, 구조 &lt;code&gt;ReadableStream&lt;/code&gt; / &lt;code&gt;WritableStream&lt;/code&gt; / &lt;code&gt;TransformStream&lt;/code&gt; 사용 방법과 &lt;code&gt;pipeTo&lt;/code&gt;와의 연계.&lt;br&gt;
Fetch API, Text Encoding, Compression, File System API, Web Sockets 등 Stream을 지원하고 있는 API도 함께 소개.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;사이트, 서비스, 문서&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;w3c-browser-statuses-implementation-support-information-of-web-technologies-on-main-desktop-and-mobile-browsers&quot;&gt;w3c/browser-statuses: Implementation support information of Web technologies on main desktop and mobile browsers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/w3c/browser-statuses&quot; title=&quot;w3c/browser-statuses: Implementation support information of Web technologies on main desktop and mobile browsers&quot;&gt;github.com/w3c/browser-statuses&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebPlatformAPI&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Can I Use, Chrome Platform Status, MDN, WebKit Feature Status 데이터를 정규화한 데이터 세트.&lt;br&gt;
API 별 브라우저나 폴리필 지원 현황을 취급할 수 있는 라이브러리.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;소프트웨어, 도구, 라이브러리&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;thomasaribart-json-schema-to-ts-infer-ts-types-from-json-schemas&quot;&gt;ThomasAribart/json-schema-to-ts: Infer TS types from JSON schemas 📝&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ThomasAribart/json-schema-to-ts&quot; title=&quot;ThomasAribart/json-schema-to-ts: Infer TS types from JSON schemas 📝&quot;&gt;github.com/ThomasAribart/json-schema-to-ts&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JSON&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JSON Schema로 부터 TypeScript을 추론하는 라이브러리.&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Wed, 24 Feb 2021 12:07:37 +0900</pubDate>
        <link>https://jser.info/ko/2021/02/24/vite-v2-babel-7.13.0-whatwg-streams/</link>
        <guid isPermaLink="true">https://jser.info/ko/2021/02/24/vite-v2-babel-7.13.0-whatwg-streams/</guid>
        
        <category>Tools</category>
        
        <category>node.js</category>
        
        <category>TypeScript</category>
        
        <category>Firefox</category>
        
        <category>security</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2021-02-16: TypeScript 4.2 RC, WebdriverIO v7, Nuxt.js 2.15.0</title>
        <description>&lt;p&gt;JSer.info #527 - TypeScript 4.2 RC 릴리스.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://devblogs.microsoft.com/typescript/announcing-typescript-4-2-rc/&quot;&gt;Announcing TypeScript 4.2 RC | TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Tuple Types에서 Rest Element 지원, Type Alias의 타입 추론 구조를 개선하여 표시되는 타입이 알기 쉽도록 수정.&lt;br&gt;
또, 오브젝트가 아닌 오퍼랜드에 대해서 &lt;code&gt;in&lt;/code&gt; 연산자를 사용한 경우 컴파일 에러 나도록 변경.&lt;br&gt;
그 외로는 &lt;code&gt;noPropertyAccessFromIndexSignature&lt;/code&gt; 옵션 추가, &lt;code&gt;abstract new&lt;/code&gt; 지원, &lt;code&gt;--explainFiles&lt;/code&gt; 플러그가 추가됐다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://devblogs.microsoft.com/typescript/announcing-typescript-4-2-beta/&quot;&gt;TypeScript 4.2 Beta&lt;/a&gt; 시점에 Template Literal 식을 기본적으로 Template Literal Type으로서 다루도록 변경되었으나 이 동작이 &lt;a href=&quot;https://github.com/microsoft/TypeScript/issues/42589&quot;&gt;의도한대로 작동하지 않는 경우&lt;/a&gt;가 있어 revert하여 기본적으로는 &lt;code&gt;string&lt;/code&gt;으로서 다루도록 한다. &lt;br&gt;
4.2 RC에서는 Template Literal 식에 &lt;code&gt;as const&lt;/code&gt;를 붙힌 경우에만 Template Literal Type으로서 다루도록 변경됐다.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ts&quot; data-lang=&quot;ts&quot;&gt;&lt;span class=&quot;kr&quot;&gt;declare&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;yourName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 'bar' has type '`hello ${string}`'.&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;hello &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;yourName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//                              ^^^^^^^^&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;// 'baz' has type 'string'.&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;baz&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;hello &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;yourName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;

&lt;p&gt;WebdriverIO v7 릴리스.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://webdriver.io/blog/2021/02/09/webdriverio-v7-released/&quot;&gt;WebdriverIO v7 Released | WebdriverIO&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Node.js 10 지원 종료, TypeScript로 재작성, Cucumber v7으로 갱신, Lightouse 연동 개선.&lt;br&gt;
&lt;code&gt;browser.checkPWA()&lt;/code&gt; 추가, &lt;code&gt;@babel/register&lt;/code&gt;나 &lt;code&gt;ts-node&lt;/code&gt;가 설치돼 있는 경우에 자동으로 컴파일하는 &lt;a href=&quot;https://webdriver.io/docs/configurationfile&quot;&gt;&lt;code&gt;autoCompileOpts&lt;/code&gt;&lt;/a&gt; 옵션 추가.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Nuxt.js 2.15.0 릴리스.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nuxt/nuxt.js/releases/tag/v2.15.0&quot;&gt;Release v2.15.0 · nuxt/nuxt.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nuxt/components#migration-guide&quot;&gt;nuxt/components: Scan and auto import components for Nuxt.js 2.13+&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nuxt-contrib/jiti&quot;&gt;nuxt-contrib/jiti: Runtime Typescript and ESM support for Node.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;비호환 변경 사항으로 Node.js 10 지원 종료, &lt;code&gt;@nuxt/components&lt;/code&gt; v2으로 갱신 됐다.&lt;br&gt;
이와 함께 &lt;code&gt;@nuxt/components&lt;/code&gt; v2으로 갱신하는 마이그레이션 가이드도 공개됐다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nuxt/components#migration-guide&quot; title=&quot;nuxt/components: Scan and auto import components for Nuxt.js 2.13+&quot;&gt;nuxt/components: Scan and auto import components for Nuxt.js 2.13+&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;그 외로는 Yarn의 Plug&amp;#39;n&amp;#39;Play 지원, PostCSS 8을 opt-in으로 지원한다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;헤드라인&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v4-0-0-lerna-lerna&quot;&gt;Release v4.0.0 · lerna/lerna&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/lerna/lerna/releases/tag/v4.0.0&quot; title=&quot;Release v4.0.0 · lerna/lerna&quot;&gt;github.com/lerna/lerna/releases/tag/v4.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;monorepo&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;lerna 4.0.0 릴리스.&lt;br&gt;
Node.js 10 미만 지원 종료, 의존 모듈 갱신.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-typescript-4-2-rc-typescript&quot;&gt;Announcing TypeScript 4.2 RC | TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://devblogs.microsoft.com/typescript/announcing-typescript-4-2-rc/&quot; title=&quot;Announcing TypeScript 4.2 RC | TypeScript&quot;&gt;devblogs.microsoft.com/typescript/announcing-typescript-4-2-rc/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScript 4.2 RC 릴리스.&lt;br&gt;
Tuple Types에서 Rest Element 지원, Type Alias의 타입 추론 개선, 오브젝트가 아닌 오퍼랜드에 대해서 &lt;code&gt;in&lt;/code&gt; 연산자를 사용하는지 검사, &lt;code&gt;noPropertyAccessFromIndexSignature&lt;/code&gt; 옵션 추가, &lt;code&gt;abstract new&lt;/code&gt; 지원, &lt;code&gt;--explainFiles&lt;/code&gt; 플래그 추가.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v2-0-0-markedjs-marked&quot;&gt;Release v2.0.0 · markedjs/marked&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/markedjs/marked/releases/tag/v2.0.0&quot; title=&quot;Release v2.0.0 · markedjs/marked&quot;&gt;github.com/markedjs/marked/releases/tag/v2.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Markdown&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;marked 2.0.0 릴리스.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ebay-launches-marko-5&quot;&gt;eBay Launches Marko 5&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://tech.ebayinc.com/engineering/ebay-launches-marko-5/&quot; title=&quot;eBay Launches Marko 5&quot;&gt;tech.ebayinc.com/engineering/ebay-launches-marko-5/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;template&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Marko 5 릴리스.&lt;br&gt;
컴파일러로 바벨을 사용할 수 있도록, webpack 및 Rollup 환경 번들 대응, &lt;code&gt;@marko/testing-library&lt;/code&gt; 추가, VScode 등 에디터 확장 프로그램 지원.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://markojs.com/docs/marko-5-upgrade/&quot; title=&quot;Upgrading to Marko 5&quot;&gt;Upgrading to Marko 5&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;webdriverio-v7-released-webdriverio&quot;&gt;WebdriverIO v7 Released | WebdriverIO&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webdriver.io/blog/2021/02/09/webdriverio-v7-released/&quot; title=&quot;WebdriverIO v7 Released | WebdriverIO&quot;&gt;webdriver.io/blog/2021/02/09/webdriverio-v7-released/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webdriver&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;WebdriverIO v7 릴리스.&lt;br&gt;
Node.js 10 지원 종료, TypeScript로 재작성, Cucumber v7으로 갱신, Lightouse 연동 개선.&lt;br&gt;
&lt;code&gt;browser.checkPWA()&lt;/code&gt; 추가, &lt;code&gt;@babel/register&lt;/code&gt;이나 &lt;code&gt;ts-node&lt;/code&gt;가 선치돼 있는 경우 자동으로 컴파일 하는 &lt;code&gt;autoCompileOpts&lt;/code&gt; 추가.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v2-15-0-nuxt-nuxt-js&quot;&gt;Release v2.15.0 · nuxt/nuxt.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/nuxt/nuxt.js/releases/tag/v2.15.0&quot; title=&quot;Release v2.15.0 · nuxt/nuxt.js&quot;&gt;github.com/nuxt/nuxt.js/releases/tag/v2.15.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Nuxtjs 2.15.0 릴리스.&lt;br&gt;
Node.js 10 지원 종료, Yarn의 Plug&amp;#39;n&amp;#39;Play 지원, &lt;code&gt;@nuxt/components&lt;/code&gt; v2으로 갱신.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nuxt/components#migration-guide&quot; title=&quot;nuxt/components: Scan and auto import components for Nuxt.js 2.13+&quot;&gt;nuxt/components: Scan and auto import components for Nuxt.js 2.13+&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nuxt-contrib/jiti&quot; title=&quot;nuxt-contrib/jiti: Runtime Typescript and ESM support for Node.js&quot;&gt;nuxt-contrib/jiti: Runtime Typescript and ESM support for Node.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;아티클&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;dynamic-static-typing-in-typescript-smashing-magazine&quot;&gt;Dynamic Static Typing In TypeScript — Smashing Magazine&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.smashingmagazine.com/2021/01/dynamic-static-typing-typescript/&quot; title=&quot;Dynamic Static Typing In TypeScript — Smashing Magazine&quot;&gt;www.smashingmagazine.com/2021/01/dynamic-static-typing-typescript/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;express&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;express 라우팅 타입을 작성해 가면서 TypeScript 고급 타입에 대해서 살펴볼 수 있는 튜토리얼.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;generators-in-javascript-how-to-use-them-dev-community&quot;&gt;Generators in Javascript: How to use them - DEV Community 👩‍💻👨‍💻&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://dev.to/karimelghamry/generators-in-javascript-how-to-use-them-372d&quot; title=&quot;Generators in Javascript: How to use them - DEV Community 👩‍💻👨‍💻&quot;&gt;dev.to/karimelghamry/generators-in-javascript-how-to-use-them-372d&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;generator 함수의 사용 방법과 유스케이스에 대해 소개.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;lazy-load-routes-in-vue-with-webpack-dynamic-comments-css-tricks&quot;&gt;Lazy Load Routes in Vue with webpack Dynamic Comments | CSS-Tricks&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://css-tricks.com/lazy-load-routes-in-vue-with-webpack-dynamic-comments/&quot; title=&quot;Lazy Load Routes in Vue with webpack Dynamic Comments | CSS-Tricks&quot;&gt;css-tricks.com/lazy-load-routes-in-vue-with-webpack-dynamic-comments/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Vue Router를 사용한 지연 로드에 대한 소개 글.&lt;br&gt;
webpack의 chunk 분할, &lt;code&gt;webpackChunkName&lt;/code&gt;의 chunk 파일명 지정 등에 대해서 소개.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;just-js-on-javascript-performance&quot;&gt;Just(js): On Javascript Performance&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://just.billywhizz.io/blog/on-javascript-performance-01/&quot; title=&quot;Just(js): On Javascript Performance&quot;&gt;just.billywhizz.io/blog/on-javascript-performance-01/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;benchmark&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;C++&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Just(js)는 어떤 최적화 방식으로 Techempower의 벤치마크 스코어를 올렸는지에 대해서 설명한다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.techempower.com/benchmarks/#section=intro&quot; title=&quot;Introduction - TechEmpower Framework Benchmarks&quot;&gt;Introduction - TechEmpower Framework Benchmarks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;슬라이드, 영상&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;write-videos-in-react-remotion&quot;&gt;Write videos in React | Remotion&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.remotion.dev/&quot; title=&quot;Write videos in React | Remotion&quot;&gt;www.remotion.dev/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React를 사용해 동영상을 만들기 위한 환경 라이브러리.&lt;br&gt;
JSX를 이용해 효과를 선언적으로 작성하고 실제 동작하는 애니메이션을 동영상 파일로 추출할 수 있다. &lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;소프트웨어, 도구, 라이브러리&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;tildeio-simple-html-tokenizer-a-lightweight-javascript-library-for-tokenizing-non-script-html-expected-to-be-found-in-the-body-of-a-document&quot;&gt;tildeio/simple-html-tokenizer: A lightweight JavaScript library for tokenizing non-&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; HTML expected to be found in the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; of a document&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/tildeio/simple-html-tokenizer&quot; title=&quot;tildeio/simple-html-tokenizer: A lightweight JavaScript library for tokenizing non-`&amp;lt;script&amp;gt;` HTML expected to be found in the `&amp;lt;body&amp;gt;` of a document&quot;&gt;github.com/tildeio/simple-html-tokenizer&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;HTML를 파싱하여 토크나이징하는 라이브러리.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ethan-arrowood-undici-fetch-a-whatwg-fetch-implementation-based-on-nodejs-undici&quot;&gt;Ethan-Arrowood/undici-fetch: A WHATWG Fetch implementation based on @nodejs/undici&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Ethan-Arrowood/undici-fetch&quot; title=&quot;Ethan-Arrowood/undici-fetch: A WHATWG Fetch implementation based on @nodejs/undici&quot;&gt;github.com/Ethan-Arrowood/undici-fetch&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Fetch&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 용 Fetch API 구현 라이브러리.&lt;br&gt;
undici을 기반으로 개발돼 있다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/undici&quot; title=&quot;nodejs/undici: An HTTP/1.1 client, written from scratch for Node.js&quot;&gt;nodejs/undici: An HTTP/1.1 client, written from scratch for Node.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;vercel-nft-node-js-dependency-tracing-utility&quot;&gt;vercel/nft: Node.js dependency tracing utility&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/vercel/nft&quot; title=&quot;vercel/nft: Node.js dependency tracing utility&quot;&gt;github.com/vercel/nft&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CommonJS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScript 파일의 의존 관계를 추적하는 라이브러리.&lt;br&gt;
&lt;code&gt;node_modules&lt;/code&gt; 등을 포함하여 특정 모듈이 의존하는 파일 경로를 가져올 수 있다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;gzuidhof-sunder-a-minimal-framework-for-service-workers-such-as-cloudflare-workers&quot;&gt;gzuidhof/sunder: A minimal framework for Service Workers (such as Cloudflare Workers).&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/gzuidhof/sunder&quot; title=&quot;gzuidhof/sunder: A minimal framework for Service Workers (such as Cloudflare Workers).&quot;&gt;github.com/gzuidhof/sunder&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ServiceWorker&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;cloudflare&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Service Worker나 Cloudflare Worker 용 라우팅 라이브러리.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;zeroturnaround-sql-formatter-a-whitespace-formatter-for-different-query-languages&quot;&gt;zeroturnaround/sql-formatter: A whitespace formatter for different query languages&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zeroturnaround/sql-formatter&quot; title=&quot;zeroturnaround/sql-formatter: A whitespace formatter for different query languages&quot;&gt;github.com/zeroturnaround/sql-formatter&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;SQL&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScript로 작성한 SQL 포멧터.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;mizdra-eslint-interactive&quot;&gt;mizdra/eslint-interactive&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/mizdra/eslint-interactive&quot; title=&quot;mizdra/eslint-interactive&quot;&gt;github.com/mizdra/eslint-interactive&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ESLint&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ESLint를 규칙별로 체크하고, 규칙별로 &lt;code&gt;--fix&lt;/code&gt;를 이용한 수정을 인터랙티브하게 할 수 있는 커맨드라인 도구.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.mizdra.net/entry/2021/02/11/211856&quot; title=&quot;rule 별로 빠르게 eslint --fix 할 수 있는 도구를 만들었다 - mizdra&amp;amp;#x27;s blog&quot;&gt;rule 별로 빠르게 eslint --fix 할 수 있는 도구를 만들었다 - mizdra&amp;#39;s blog&lt;/a&gt;(일본어)&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 16 Feb 2021 12:07:05 +0900</pubDate>
        <link>https://jser.info/ko/2021/02/16/typescript-4.2-rc-webdriverio-v7-nuxt.js-2.15.0/</link>
        <guid isPermaLink="true">https://jser.info/ko/2021/02/16/typescript-4.2-rc-webdriverio-v7-nuxt.js-2.15.0/</guid>
        
        <category>TypeScript</category>
        
        <category>Vue</category>
        
        <category>HTML</category>
        
        <category>node.js</category>
        
        <category>Fetch</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2021-02-02: WebRTC 1.0, Firefox 85, Chrome 89 Beta</title>
        <description>&lt;p&gt;JSer.info #525 - WebRTC 1.0이 W3C Recommendation 및 IETF 표준이 됐다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.w3.org/2021/01/pressrelease-webrtc-rec.html.en&quot;&gt;Web Real-Time Communications (WebRTC) transforms the communications landscape; becomes a World Wide Web Consortium (W3C) Recommendation and multiple Internet Engineering Task Force (IETF) standards&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.ietf.org/blog/webrtc-milestone/&quot;&gt;IETF | WebRTC: Marking a milestone in real-time communications&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.rfc-editor.org/search/rfc_search_detail.php?page=All&amp;pubstatus%5B%5D=Any&amp;from_month=January&amp;from_year=2021&amp;pub_date_type=range&amp;to_month=January&amp;to_year=2021&amp;sortkey=Number&amp;sorting=ASC&quot;&gt;RFC Search Detail&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://datatracker.ietf.org/wg/rtcweb/documents/&quot;&gt;Real-Time Communication in WEB-browsers (rtcweb) - Documents&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;W3C 사양에는 JavaScript API가 정의돼 있고, IETF 사양에는 프로토콜이 정의돼 있다.&lt;br&gt;
이미 &lt;a href=&quot;https://wpt.fyi/results/webrtc?label=master&amp;label=experimental&amp;aligned&quot;&gt;브라우저 상에 JavaScript API가 구현&lt;/a&gt;돼 있고, 많은 &lt;a href=&quot;https://news.ycombinator.com/item?id=25933366&quot;&gt;WebRTC 구현체&lt;/a&gt;가 존재하기 때문에 이용할 수 있고 또, 이용하고 있는 상태다.&lt;br&gt;
이번 발표는 WebRTC 사양이 1.0을 달성, 안정화 된 것을 의미한다.&lt;/p&gt;

&lt;p&gt;다음 사양 개선은 &lt;a href=&quot;https://web.dev/webrtc-standard-announcement/&quot;&gt;WebRTC is now a W3C and IETF standard&lt;/a&gt;에 작성돼 있듯 &lt;a href=&quot;https://www.w3.org/TR/webrtc-nv-use-cases/&quot;&gt;WebRTC Next Version Use Cases&lt;/a&gt;등으로 활용 사례를 모아가며 정리할 것으로 보인다.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Firefox 85가 릴리스 됐다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://hacks.mozilla.org/2021/01/january-brings-us-firefox-85/&quot;&gt;January brings us Firefox 85 - Mozilla Hacks - the Web developer blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.mozilla.org/en-US/firefox/85.0/releasenotes/&quot;&gt;Firefox 85.0, See All New Features, Updates and Fixes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Flash 지원이 종료됐다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Plugins/Roadmap&quot;&gt;Plugin Roadmap for Firefox - Plugins | MDN&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Prefix 없이 CSS의 &lt;code&gt;:focus-visible&lt;/code&gt; 지원, &lt;code&gt;&amp;lt;link rel=&amp;quot;preload&amp;quot;&amp;gt;&lt;/code&gt;를 기본적으로 지원한다.&lt;br&gt;
ES Proposal Stage 3의 Top-Level await 지원, &lt;code&gt;at()&lt;/code&gt; 메서드 지원 등이 추가됐다.&lt;br&gt;
또, 캐시 등을 사용한 트래킹을 방지하기 위해 Network partitioning이 도입됐다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.mozilla.org/security/2021/01/26/supercookie-protections/&quot;&gt;Firefox 85 Cracks Down on Supercookies - Mozilla Security Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2020/10/http-cache-partitioning&quot;&gt;Gaining security and privacy by partitioning the cache  |  Web&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;Chrome 89 베타가 릴리스 됐다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.chromium.org/2021/01/chrome-89-beta-advanced-hardware.html&quot;&gt;Chromium Blog: Chrome 89 Beta: Advanced Hardware Interactions, Web Sharing on Desktop, and More&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;WebHID API, Web NFC, Web Serial API 기본적으로 활성화, 데스크탑 웹에서 Web Sharing이 활성화 됐다.&lt;br&gt;
또, Cross-origin opener policy reporting API, Manifast에 &lt;code&gt;display_override&lt;/code&gt;가 추가됐다.&lt;br&gt;
그 외로 &lt;code&gt;performance.measureUserAgentSpecificMemory()&lt;/code&gt; 추가, Streams API가 Byte Streams을 지원한다.&lt;br&gt;
파이어폭스와 마찬가지로 Top-Level await 지원이 추가됐다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;아티클&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;january-brings-us-firefox-85-mozilla-hacks-the-web-developer-blog&quot;&gt;January brings us Firefox 85 - Mozilla Hacks - the Web developer blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2021/01/january-brings-us-firefox-85/&quot; title=&quot;January brings us Firefox 85 - Mozilla Hacks - the Web developer blog&quot;&gt;hacks.mozilla.org/2021/01/january-brings-us-firefox-85/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Firefox 85 릴리스.&lt;br&gt;
Flash 지원 종료.&lt;br&gt;
Prefix 없이 CSS의 &lt;code&gt;:focus-visible&lt;/code&gt; 지원, &lt;code&gt;&amp;lt;link rel=&amp;quot;preload&amp;quot;&amp;gt;&lt;/code&gt; 지원.&lt;br&gt;
ES Proposal Stage 3의 Top-Level await 지원, &lt;code&gt;at()&lt;/code&gt; 메서드 지원.&lt;br&gt;
또, Network partitioning이 도입됐다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.mozilla.org/en-US/firefox/85.0/releasenotes/&quot; title=&quot;Firefox 85.0, See All New Features, Updates and Fixes&quot;&gt;Firefox 85.0, See All New Features, Updates and Fixes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.mozilla.org/security/2021/01/26/supercookie-protections/&quot; title=&quot;Firefox 85 Cracks Down on Supercookies - Mozilla Security Blog&quot;&gt;Firefox 85 Cracks Down on Supercookies - Mozilla Security Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2020/10/http-cache-partitioning#what_is_the_impact_of_this_behavioral_change&quot; title=&quot;Gaining security and privacy by partitioning the cache  |  Web&quot;&gt;Gaining security and privacy by partitioning the cache  |  Web&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Mozilla/Firefox/Releases/85&quot; title=&quot;Firefox 85 for developers - Mozilla | MDN&quot;&gt;Firefox 85 for developers - Mozilla | MDN&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-notes-for-safari-technology-preview-119-webkit&quot;&gt;Release Notes for Safari Technology Preview 119 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/11525/release-notes-for-safari-technology-preview-119/&quot; title=&quot;Release Notes for Safari Technology Preview 119 | WebKit&quot;&gt;webkit.org/blog/11525/release-notes-for-safari-technology-preview-119/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Safari Technology Preview 119 됐다.&lt;br&gt;
SpeechRecognition API 활성화, CSS &lt;code&gt;aspect-ratio&lt;/code&gt; 프로퍼티 지원 개선, &lt;code&gt;prefers-contrast: more&lt;/code&gt;지원 등.&lt;br&gt;
WebAssembly에서 &lt;code&gt;memory.copy&lt;/code&gt;, &lt;code&gt;memory.init&lt;/code&gt;, &lt;code&gt;memory.fill&lt;/code&gt;을 플러그를 붙여 지원한다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/WebAssembly/bulk-memory-operations/blob/master/proposals/bulk-memory-operations/Overview.md&quot; title=&quot;bulk-memory-operations/Overview.md at master · WebAssembly/bulk-memory-operations&quot;&gt;bulk-memory-operations/Overview.md at master · WebAssembly/bulk-memory-operations&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://drafts.csswg.org/mediaqueries-5/#prefers-contrast&quot; title=&quot;Media Queries Level 5&quot;&gt;Media Queries Level 5&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v7-5-0-npm-cli&quot;&gt;Release v7.5.0 · npm/cli&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/npm/cli/releases/tag/v7.5.0&quot; title=&quot;Release v7.5.0 · npm/cli&quot;&gt;github.com/npm/cli/releases/tag/v7.5.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;npm 7.5.0 릴리스.&lt;br&gt;
npm 패키지의 Diff를 얻을 수 있는 &lt;code&gt;npm diff&lt;/code&gt; 커맨드 추가.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://dev.to/ruyadorno/npm-diff-23dh&quot; title=&quot;npm diff - DEV Community 👩‍💻👨‍💻&quot;&gt;npm diff - DEV Community 👩‍💻👨‍💻&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;chromium-blog-chrome-89-beta-advanced-hardware-interactions-web-sharing-on-desktop-and-more&quot;&gt;Chromium Blog: Chrome 89 Beta: Advanced Hardware Interactions, Web Sharing on Desktop, and More&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.chromium.org/2021/01/chrome-89-beta-advanced-hardware.html&quot; title=&quot;Chromium Blog: Chrome 89 Beta: Advanced Hardware Interactions, Web Sharing on Desktop, and More&quot;&gt;blog.chromium.org/2021/01/chrome-89-beta-advanced-hardware.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 89 베타 릴리스.&lt;br&gt;
WebHID API, Web NFC, Web Serial API 기본적으로 활성화하고 데스크탑에서 Web Sharing을 활성화 했다.&lt;br&gt;
Cross-origin opener policy reporting API, Manifast에 &lt;code&gt;display_override&lt;/code&gt; 추가.&lt;br&gt;
&lt;code&gt;performance.measureUserAgentSpecificMemory()&lt;/code&gt; 추가, Streams API에서 Byte Streams을 지원. Top-Level await 지원.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;webrtc-1-0-is-a-w3c-recommendation-w3c-news&quot;&gt;WebRTC 1.0 is a W3C Recommendation | W3C News&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.w3.org/blog/news/archives/8897&quot; title=&quot;WebRTC 1.0 is a W3C Recommendation | W3C News&quot;&gt;www.w3.org/blog/news/archives/8897&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;W3C&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebRTC&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;WebRTC 1.0이 W3C Recommendation이 됐다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.w3.org/2021/01/pressrelease-webrtc-rec.html.en&quot; title=&quot;Web Real-Time Communications (WebRTC) transforms the communications landscape; becomes a World Wide Web Consortium (W3C) Recommendation and multiple Internet Engineering Task Force (IETF) standards&quot;&gt;Web Real-Time Communications (WebRTC) transforms the communications landscape; becomes a World Wide Web Consortium (W3C) Recommendation and multiple Internet Engineering Task Force (IETF) standards&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/webrtc-standard-announcement/&quot; title=&quot;WebRTC is now a W3C and IETF standard&quot;&gt;WebRTC is now a W3C and IETF standard&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;toast-ui-chart-4-0-is-here-toast-ui-make-your-web-delicious&quot;&gt;TOAST UI Chart 4.0 is here! | TOAST UI :: Make Your Web Delicious!&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ui.toast.com/weekly-pick/en_20210126&quot; title=&quot;TOAST UI Chart 4.0 is here! | TOAST UI :: Make Your Web Delicious!&quot;&gt;ui.toast.com/weekly-pick/en_20210126&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;chart&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;그래프 라이브러리 TOAST UI Chart v4.0 릴리스.&lt;br&gt;
의존 모듈 정리하고 파일 크기를 줄였다. 반응형 지원, 라이브 갱신에 대응한 그래프 추가, 테마 옵션 개선.&lt;br&gt;
v3에서의 마이그레이션 가이드도 함께 공개 됐다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nhn/tui.chart/blob/main/docs/v4.0-migration-guide-en.md&quot; title=&quot;tui.chart/v4.0-migration-guide-en.md at main · nhn/tui.chart&quot;&gt;tui.chart/v4.0-migration-guide-en.md at main · nhn/tui.chart&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ckeditor-5-v25-0-0-with-flexible-annotations-improved-text-blocks-handling-and-performance-fixes&quot;&gt;CKEditor 5 v25.0.0 with flexible annotations, improved text blocks handling and performance fixes&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ckeditor.com/blog/CKEditor-5-v25.0.0-with-flexible-annotations-improved-text-blocks-handling-and-performance-fixes/&quot; title=&quot;CKEditor 5 v25.0.0 with flexible annotations, improved text blocks handling and performance fixes&quot;&gt;ckeditor.com/blog/CKEditor-5-v25.0.0-with-flexible-annotations-improved-text-blocks-handling-and-performance-fixes/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;editor&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CKEditor 5 v25.0.0 릴리스.&lt;br&gt;
ReDoS 문제 수정. 켄텐츠 블록의 동작 개선, 대량 텍스트 포맷 성능 개선, 이미지 관리 개선 등&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v5-3-4-vuejs-vue-devtools&quot;&gt;Release v5.3.4 · vuejs/vue-devtools&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/vuejs/vue-devtools/releases/tag/v5.3.4&quot; title=&quot;Release v5.3.4 · vuejs/vue-devtools&quot;&gt;github.com/vuejs/vue-devtools/releases/tag/v5.3.4&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Extension&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Vue DevTools 5.3.4 릴리스.&lt;br&gt;
Universal XSS 취약점 수정.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/vuejs/vue-devtools/issues/1353&quot; title=&quot;Vue.js devtools Universal XSS (Chrome extension) · Issue #1353 · vuejs/vue-devtools&quot;&gt;Vue.js devtools Universal XSS (Chrome extension) · Issue #1353 · vuejs/vue-devtools&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;babel-8-release-plan-issue-10746-babel-babel&quot;&gt;Babel 8 Release Plan · Issue #10746 · babel/babel&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/babel/babel/issues/10746&quot; title=&quot;Babel 8 Release Plan · Issue #10746 · babel/babel&quot;&gt;github.com/babel/babel/issues/10746&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;babel&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;issue&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Babel 8의 Roadmap Issue&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;아티클&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;when-to-use-https-for-local-development&quot;&gt;When to use HTTPS for local development&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://web.dev/when-to-use-local-https/&quot; title=&quot;When to use HTTPS for local development&quot;&gt;web.dev/when-to-use-local-https/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;HTTPS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;로컬 개발에서도 HTTPS가 필요한 경우와 &lt;code&gt;localshot&lt;/code&gt;에 대해.&lt;br&gt;
또, 로컬 개발에 사용해야 하는 TLD 소개.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/how-to-use-local-https/&quot; title=&quot;How to use HTTPS for local development&quot;&gt;How to use HTTPS for local development&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;visitor-pattern-in-typescript-writing-kirill-vasiltsov&quot;&gt;Visitor pattern in TypeScript | Writing | Kirill Vasiltsov&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.kirillvasiltsov.com/writing/visitor-pattern-typescript/&quot; title=&quot;Visitor pattern in TypeScript | Writing | Kirill Vasiltsov&quot;&gt;www.kirillvasiltsov.com/writing/visitor-pattern-typescript/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScript의 interface를 사용한 Visitor Pattern 구현 방법 소개&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;cypress-vs-selenium-vs-playwright-vs-puppeteer-speed-comparison-checkly-blog&quot;&gt;Cypress vs Selenium vs Playwright vs Puppeteer speed comparison | Checkly blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.checklyhq.com/cypress-vs-selenium-vs-playwright-vs-puppeteer-speed-comparison/&quot; title=&quot;Cypress vs Selenium vs Playwright vs Puppeteer speed comparison | Checkly blog&quot;&gt;blog.checklyhq.com/cypress-vs-selenium-vs-playwright-vs-puppeteer-speed-comparison/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;E2E&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;테스트 프레임워크 실행 속도 비교 글.&lt;br&gt;
Puppeteer, Playwright, WebDriverIO, Selenium, Cypress를 몇 개의 테스트 시나리오를 이용해 비교한다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.checklyhq.com/puppeteer-vs-selenium-vs-playwright-speed-comparison/&quot; title=&quot;Puppeteer vs Selenium vs Playwright, a speed comparison | Checkly blog&quot;&gt;Puppeteer vs Selenium vs Playwright, a speed comparison | Checkly blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;undefined-vs-null-revisited&quot;&gt;`undefined` vs. `null` revisited&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://2ality.com/2021/01/undefined-null-revisited.html&quot; title=&quot;\`undefined\` vs. \`null\` revisited&quot;&gt;2ality.com/2021/01/undefined-null-revisited.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;opinion&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;undefined&lt;/code&gt;과 &lt;code&gt;null&lt;/code&gt;에 대해서.&lt;br&gt;
&lt;code&gt;undefined&lt;/code&gt;과 &lt;code&gt;null&lt;/code&gt;의 역사, &lt;code&gt;undefined&lt;/code&gt;과 &lt;code&gt;null&lt;/code&gt;이 언어적으로 발생하는 경우, 언어적으로 특별히 취급되는 경우, 어떤 것을 값이 없는 경우로 사용할 것인지 이야기한다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;소프트웨어, 도구, 라이브러리&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;azu-express-lazy-router-lazy-loading-for-express-router&quot;&gt;azu/express-lazy-router: Lazy loading for express router&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/azu/express-lazy-router&quot; title=&quot;azu/express-lazy-router: Lazy loading for express router&quot;&gt;github.com/azu/express-lazy-router&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;express&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;express의 Router를 지연 로드하는 라이브러리.&lt;br&gt;
ts-node-dev나 @babel/register로 runtime compile 하는 경우에 동작 시 전체 컴파일하는 게 아닌 분산 컴파일 가능하도록 하는데 목적을 두고 있다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;webreflection-linkedom-a-triple-linked-lists-based-dom-implementation&quot;&gt;WebReflection/linkedom: A triple-linked lists based DOM implementation.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/WebReflection/linkedom&quot; title=&quot;WebReflection/linkedom: A triple-linked lists based DOM implementation.&quot;&gt;github.com/WebReflection/linkedom&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 용의 HTML/DOM 구현 라이브러리.&lt;br&gt;
기본적인 활용 사례로 HTML 문자열을 토대로한 경로 탐색, DOM API 등을 일정한 성능으로 실행할 수 있게 하는데 목적을 두고 있다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/WebReflection/basicHTML#readme&quot; title=&quot;WebReflection/basicHTML: A NodeJS based, standard oriented, HTML implementation.&quot;&gt;WebReflection/basicHTML: A NodeJS based, standard oriented, HTML implementation.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;shinyoshiaki-werift-webrtc-webrtc-implementation-for-typescript-node-js&quot;&gt;shinyoshiaki/werift-webrtc: WebRTC Implementation for TypeScript (Node.js)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/shinyoshiaki/werift-webrtc&quot; title=&quot;shinyoshiaki/werift-webrtc: WebRTC Implementation for TypeScript (Node.js)&quot;&gt;github.com/shinyoshiaki/werift-webrtc&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebRTC&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js에서의 WebRTC 구현.&lt;br&gt;
STUN, TURN, ICE, DataChannel, MediaChannel 등을 구현한다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;willmendesneto-perf-marks-the-isomorphic-simplest-and-lightweight-solution-for-user-timing-api-in-javascript-only-208b-tree-shaking-and-entry-points-built-in-simple-as-that&quot;&gt;willmendesneto/perf-marks: The isomorphic, simplest, and lightweight solution for User Timing API in Javascript - 🚀 only 208B 🚀. Tree-shaking and entry points built-in. Simple as that!&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/willmendesneto/perf-marks&quot; title=&quot;willmendesneto/perf-marks: The isomorphic, simplest, and lightweight solution for User Timing API in Javascript - 🚀 only 208B 🚀. Tree-shaking and entry points built-in. Simple as that!&quot;&gt;github.com/willmendesneto/perf-marks&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;User Timing API의 래퍼 라이브러리.&lt;br&gt;
브라우저와 Node.js(&lt;code&gt;perf_hooks&lt;/code&gt;)에서 사용할 수 있다.&lt;br&gt;
User Timing API의 래퍼, 지원하는지 판단, 함수 프로파일링 기능 등을 제공한다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;alesgenova-post-me-use-web-workers-and-other-windows-through-a-simple-promise-api&quot;&gt;alesgenova/post-me: 📩 Use web Workers and other Windows through a simple Promise API&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/alesgenova/post-me&quot; title=&quot;alesgenova/post-me: 📩 Use web Workers and other Windows through a simple Promise API&quot;&gt;github.com/alesgenova/post-me&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webworker&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Promises&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Worker, Window(iframe)간의 메시징 라이브러리.&lt;br&gt;
Promise 기반의 API로 Window와 Worker 사이에서 메시지를 주고 받을 수 있다.&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 02 Feb 2021 11:55:41 +0900</pubDate>
        <link>https://jser.info/ko/2021/02/02/webrtc-1.0-firefox-85-chrome-89-beta/</link>
        <guid isPermaLink="true">https://jser.info/ko/2021/02/02/webrtc-1.0-firefox-85-chrome-89-beta/</guid>
        
        <category>TypeScript</category>
        
        <category>node.js</category>
        
        <category>browser</category>
        
        <category>WebRTC</category>
        
        <category>Firefox</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2021-01-26: webpack 5.17.0(lazyCompilation), Deno 1.7, Open Web Docs</title>
        <description>&lt;p&gt;JSer.info #524 - webpack 5.17.0 릴리스&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/webpack/webpack/releases/tag/v5.17.0&quot;&gt;Release v5.17.0 · webpack/webpack&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;experiments.lazyCompilation&lt;/code&gt; 옵션이 실험적으로 추가됐다.&lt;br&gt;
&lt;code&gt;experiments.lazyCompilation&lt;/code&gt;은 webpack dev server 등의 로컬 서버와 함께 동작하는 옵션으로 Dynamic Import하고 있는 모듈(chunk)을 시작 시에 빌드하지 않고 불러오는 시점에 빌드하는 지연 컴파일 구조다.&lt;/p&gt;

&lt;p&gt;첫 빌드시 Dynamic Import 하고 있는 모듈은 lazyCompilation을 위해서 Proxy 모듈로 빌드 된다. 이 모듈은 lazyCompilation의 &lt;code&gt;client&lt;/code&gt;가 되며, 불러올 때 Server Sent Event를 사용해 lazyCompilation의 &lt;code&gt;backend&lt;/code&gt; 측에 불러옴을 통지한다.&lt;br&gt;
lazyCompilation의 &lt;code&gt;backend&lt;/code&gt;는 &lt;code&gt;client&lt;/code&gt;로 부터 통지를 받으면 실제 모듈을 빌드하여 반환하는 방식으로 동작한다.&lt;br&gt;
이 &lt;code&gt;client&lt;/code&gt;와 &lt;code&gt;backend&lt;/code&gt;도 각각 &lt;code&gt;experiments.lazyCompilation&lt;/code&gt; 옵션으로 독자적인 방식을 정의할 수 있다. 기본값으로는 webpack dev server에서 동작하는 코드로 작성돼 있다.&lt;/p&gt;

&lt;p&gt;첫 동작 시 컴파일 범위를 축소하여 개발 서버의 시작 속도를 개선하는 데 주 목적이 있다.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Deno 1.7 릴리스&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://deno.land/posts/v1.7&quot;&gt;Deno 1.7 Release Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/denoland/deno/releases/tag/v1.7.0&quot;&gt;Release v1.7.0 · denoland/deno&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://zenn.dev/magurotuna/articles/55575eb16ae422&quot;&gt;Deno 1.7.0가 릴리스 됐으므로 새 기능과 변경사항 소개&lt;/a&gt;(일본어)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://deno.land/posts/v1.6&quot;&gt;Deno 1.6&lt;/a&gt;에서 지원한 &lt;code&gt;deno compile&lt;/code&gt;의 크기 개선, 크로스 컴파일 대응.&lt;br&gt;
Data URL의 import 지원, &lt;code&gt;deno fmt&lt;/code&gt;에서 Markdown 지원.&lt;br&gt;
또, Steram API를 WHATWG에 맞춰 수정, Web Worker에 &lt;code&gt;permissions&lt;/code&gt; 옵션으로 Deno의 독다적인 퍼미션을 지정할 수 있게 됐다.&lt;br&gt;
그 외로는 &lt;code&gt;--location&lt;/code&gt; 플래그를 사용해 상대 URL의 Fetch 대응, Fetch 요청 body에 Stream을 지정 가능하게 됐다.&lt;/p&gt;

&lt;p&gt;비호환 변경 사항으로 unstable한 Deno APIs가 일부 변경됐고 &lt;code&gt;Deno.resolveDns&lt;/code&gt;를 Unstable API로서 지원한다.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/openwebdocs/project&quot;&gt;Open Web Docs&lt;/a&gt;라는 MDN 등의 웹 플랫폼 문서를 개선해 나가기 위한 프로젝트가 시작됐다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://opencollective.com/open-web-docs/updates/introducing-open-web-docs&quot;&gt;Open Web Docs - Open Collective&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;2020년 8월 Mozilla 레이오프 영향으로 &lt;a href=&quot;https://developer.mozilla.org/&quot;&gt;MDN&lt;/a&gt;의 Writer 관련 팀이 축소 됐다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.mozilla.org/blog/2020/08/11/changing-world-changing-mozilla/&quot;&gt;Changing World, Changing Mozilla - The Mozilla Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://hacks.mozilla.org/2020/08/an-update-on-mdn-web-docs/&quot;&gt;An Update on MDN Web Docs - Mozilla Hacks - the Web developer blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Open Web Docs는 MDN 등의 웹 플랫폼에 관한 문서를 컨트리뷰션 하고 관리하는 조직이다. Open Web Docs의 멤버로는 Mozilla, Google, Microsoft, W3C 등이 있다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/openwebdocs/project/blob/main/steering-committee/membership-expectations.md&quot;&gt;https://github.com/openwebdocs/project/blob/main/steering-committee/membership-expectations.md&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;당면한 목표로는 MDN의 &lt;a href=&quot;https://hacks.mozilla.org/2020/12/welcome-yari-mdn-web-docs-has-a-new-platform/&quot;&gt;새로운 아키텍처&lt;/a&gt;로의 이전 및 지원, &lt;a href=&quot;https://github.com/mdn/browser-compat-data&quot;&gt;브라우저 호환성 데이터&lt;/a&gt;, 자바스크립트 문서 개선 등이 있다. &lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;헤드라인&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ipfs-support-in-brave&quot;&gt;IPFS Support in Brave&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://brave.com/ipfs-support/&quot; title=&quot;IPFS Support in Brave&quot;&gt;brave.com/ipfs-support/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;IPFS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;p2p&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Brave가 P2P 프로토콜인 IPFS(InterPlanetary File System)를 지원한다.&lt;br&gt;
1.19.x 이후로 Brave는 게이트웨와 로컬 노드를 사용한 IPFS URI을 지원한다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://brave.com/brave-integrates-ipfs/&quot; title=&quot;Brave Integrates IPFS&quot;&gt;Brave Integrates IPFS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v5-17-0-webpack-webpack&quot;&gt;Release v5.17.0 · webpack/webpack&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/webpack/webpack/releases/tag/v5.17.0&quot; title=&quot;Release v5.17.0 · webpack/webpack&quot;&gt;github.com/webpack/webpack/releases/tag/v5.17.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webpack&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;webpack 5.17.0 릴리스.&lt;br&gt;
실험적인 기능으로 Dynamic Import 하고 있는 모듈을 불러오는 시점에 빌드하는 &lt;code&gt;experiments.lazyCompilation&lt;/code&gt; 옵션 추가.&lt;br&gt;
동작 시 모든 것을 빌드하지 않는 방법으로 첫 동작 성능을 개선한다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/liximomo/lazy-compile-webpack-plugin&quot; title=&quot;liximomo/lazy-compile-webpack-plugin: Boost webpack startup time by lazily compiling dynamic imports&quot;&gt;liximomo/lazy-compile-webpack-plugin: Boost webpack startup time by lazily compiling dynamic imports&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-node-js-runtime-cloud-functions-documentation-google-cloud&quot;&gt;The Node.js Runtime  |  Cloud Functions Documentation  |  Google Cloud&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://cloud.google.com/functions/docs/concepts/nodejs-runtime#nodejs_14_public_preview&quot; title=&quot;The Node.js Runtime  |  Cloud Functions Documentation  |  Google Cloud&quot;&gt;cloud.google.com/functions/docs/concepts/nodejs-runtime#nodejs_14_public_preview&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;GCP&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Cloud Function이 Node.js 14를 public preview로 지원한다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;deno-1-7-release-notes&quot;&gt;Deno 1.7 Release Notes&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://deno.land/posts/v1.7&quot; title=&quot;Deno 1.7 Release Notes&quot;&gt;deno.land/posts/v1.7&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;deno&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Deno 1.7 릴리스.&lt;br&gt;
&lt;code&gt;deno compile&lt;/code&gt; 크기 개선, 크로스 컴파일 대응, Data URL의 import 지원, &lt;code&gt;deno fmt&lt;/code&gt;에서 Markdown 지원.&lt;br&gt;
Steram API를 WHATWG에 맞춰서 수정, Web Worker에 &lt;code&gt;permissions&lt;/code&gt;으로 Deno 독자 퍼미션을 지정 가능하도록 개선.&lt;br&gt;
&lt;code&gt;--location&lt;/code&gt; 플래그를 사용해 상대 URL의 Fetch 대응, Fetch 요청 body에 Stream을 지정 가능하게 됐다.&lt;/p&gt;

&lt;p&gt;비호환 변경 사항으로 Deno APIs가 일부 변경됐고 &lt;code&gt;Deno.resolveDns&lt;/code&gt;를 Unstable API로서 지원한다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/denoland/deno/releases/tag/v1.7.0&quot; title=&quot;Release v1.7.0 · denoland/deno&quot;&gt;Release v1.7.0 · denoland/deno&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://zenn.dev/magurotuna/articles/55575eb16ae422&quot; title=&quot;Deno 1.7.0가 릴리스 됐기 때문에 새 기능과 변경사항 소개&quot;&gt;Deno 1.7.0가 릴리스 됐으므로 새 기능과 변경사항 소개&lt;/a&gt;(일본어)&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;open-web-docs-open-collective&quot;&gt;Open Web Docs - Open Collective&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://opencollective.com/open-web-docs/updates/introducing-open-web-docs&quot; title=&quot;Open Web Docs - Open Collective&quot;&gt;opencollective.com/open-web-docs/updates/introducing-open-web-docs&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;document&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;mdn&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;MDN와 같은 웹 플랫폼 문서를 장기적으로 관리해 나가기 위한 프로젝트. Mozilla 등의 브라우저 벤더와 W3C 등이 멤버로 구축.&lt;br&gt;
당분간은 MDN에 중점적으로 컨트리뷰션 해나갈 것으로 보인다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blogs.windows.com/msedgedev/2021/01/25/welcome-open-web-docs/&quot; title=&quot;Supporting Open Web Docs to deliver web developer documentation - Microsoft Edge Blog&quot;&gt;Supporting Open Web Docs to deliver web developer documentation - Microsoft Edge Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://web.dev/open-web-docs/&quot; title=&quot;Introducing Open Web Docs&quot;&gt;Introducing Open Web Docs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://hacks.mozilla.org/2021/01/welcoming-open-web-docs-to-the-mdn-family/&quot; title=&quot;Welcoming Open Web Docs to the MDN family - Mozilla Hacks - the Web developer blog&quot;&gt;Welcoming Open Web Docs to the MDN family - Mozilla Hacks - the Web developer blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.igalia.com/2021/01/25/Open-Web-Docs.html&quot; title=&quot;Open Web Docs | Igalia&quot;&gt;Open Web Docs | Igalia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.w3.org/blog/2021/01/welcome-to-open-web-docs/&quot; title=&quot;Welcome to Open Web Docs! | W3C Blog&quot;&gt;Welcome to Open Web Docs! | W3C Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/openwebdocs/project/blob/main/steering-committee/membership-expectations.md&quot; title=&quot;project/membership-expectations.md at main · openwebdocs/project&quot;&gt;project/membership-expectations.md at main · openwebdocs/project&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;아티클&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;how-to-solve-the-infinite-loop-of-react-useeffect&quot;&gt;How to Solve the Infinite Loop of React.useEffect()&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://dmitripavlutin.com/react-useeffect-infinite-loop/&quot; title=&quot;How to Solve the Infinite Loop of React.useEffect()&quot;&gt;dmitripavlutin.com/react-useeffect-infinite-loop/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React의 &lt;code&gt;useEffect&lt;/code&gt; 내에서 State를 갱신할 경우 왜 무한 루프가 발생하는지 또, 그 문제를 해결하는 방법을 소개한다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;migrating-puppeteer-to-typescript-web-google-developers&quot;&gt;Migrating Puppeteer to TypeScript  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2021/01/puppeteer-typescript&quot; title=&quot;Migrating Puppeteer to TypeScript  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/updates/2021/01/puppeteer-typescript&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScript에서 TypeScript로의 기반 코드 이전을 어떻게 계획하고 있는지 정리돼 있다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=BHogHiiyuQk&quot; title=&quot;Upgrading DevTools&amp;amp;#x27; architecture to the modern web - YouTube&quot;&gt;Upgrading DevTools&amp;#39; architecture to the modern web - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-secret-parameter-lfr-and-potential-rce-in-nodejs-apps&quot;&gt;The Secret Parameter, LFR, and Potential RCE in NodeJS Apps&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.shoebpatel.com/2021/01/23/The-Secret-Parameter-LFR-and-Potential-RCE-in-NodeJS-Apps/&quot; title=&quot;The Secret Parameter, LFR, and Potential RCE in NodeJS Apps&quot;&gt;blog.shoebpatel.com/2021/01/23/The-Secret-Parameter-LFR-and-Potential-RCE-in-NodeJS-Apps/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;express&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Express에서 &lt;code&gt;hbs&lt;/code&gt;(handlebars)를 사용하고 있을 때 &lt;code&gt;res.render&lt;/code&gt;의 두 번째 인수에 사용자 인수를 그대로 전달할 경우 &lt;code&gt;layout&lt;/code&gt; 속성에 의해 임의의 파일을 읽어들이는 문제에 대해.&lt;br&gt;
또, Handlerbars 4.0.14 미만 버전에 있는 취약성과 합쳐지면 RCE(Remote Code Execution)로 발전할 수 있는 문제도 다루고 있다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/pillarjs/hbs&quot; title=&quot;pillarjs/hbs: Express view engine wrapper for Handlebars&quot;&gt;pillarjs/hbs: Express view engine wrapper for Handlebars&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://expressjs.com/en/api.html#res.render&quot; title=&quot;Express 4.x - API Reference&quot;&gt;Express 4.x - API Reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;슬라이드, 영상&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;speaker-deck&quot;&gt;브라우저 만드는 방법 - Speaker Deck(일본어)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/keiya01/burauzafalsezuo-rifang&quot; title=&quot;브라우저 만드는 방법 - Speaker Deck&quot;&gt;speakerdeck.com/keiya01/burauzafalsezuo-rifang&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Rust&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;slide&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Let&amp;#39;s build a browser engine!을 참고해 브라우저 렌더링 엔진을 만들면서 HTML이나 CSS가 어떤 경로로 어떻게 렌더링되는지 소개한다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/keiya01/kamaitachi&quot; title=&quot;keiya01/kamaitachi: \&amp;amp;#x60;kamaitachi\&amp;amp;#x60; is a simple browser.&quot;&gt;keiya01/kamaitachi: `kamaitachi` is a simple browser.&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://limpet.net/mbrubeck/2014/08/08/toy-layout-engine-1.html&quot; title=&quot;Let&amp;amp;#x27;s build a browser engine! Part 1: Getting started&quot;&gt;Let&amp;#39;s build a browser engine! Part 1: Getting started&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;사이트, 서비스, 문서&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;jsitor-javascript-html-css-online-editor&quot;&gt;JSitor - JavaScript, HTML, CSS, online editor&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://jsitor.com/&quot; title=&quot;JSitor - JavaScript, HTML, CSS, online editor&quot;&gt;jsitor.com/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;editor&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;jsfiddle과 같이 HTML/CSS/JS를 작성하고 실행해 볼 수 있는 Playground 서비스.&lt;br&gt;
에디터는 Monaco Editor를 사용해 만들어 졌으며 자동 완성 기능을 제공한다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;소프트웨어, 도구, 라이브러리&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;forgojs-forgo-an-ultra-light-ui-runtime&quot;&gt;forgojs/forgo: An ultra-light UI runtime&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/forgojs/forgo&quot; title=&quot;forgojs/forgo: An ultra-light UI runtime&quot;&gt;github.com/forgojs/forgo&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;jsx&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JSX로 작성할 수 있는 UI 라이브러리.&lt;br&gt;
React와는 다르게 컴포넌트 내에서도 DOM API를 다루는 형태로 돼 있고, 재렌더링도 수동으로 실시.&lt;br&gt;
파일 크기가 작고, 프레임워크의 추상적인 부분도 적으며 DOM API만 알고 있으면 쉽게 쓸수 수 있도록 하는 데 목적이 있다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;nodepack&quot;&gt;Nodepack&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodepackjs.com/&quot; title=&quot;Nodepack&quot;&gt;nodepackjs.com/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 웹 프레임워크.&lt;br&gt;
프로젝트를 관리하기 위한 CLI와 이를 확장할 수 있는 플러그인 시스템을 제공한다.&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 26 Jan 2021 11:14:34 +0900</pubDate>
        <link>https://jser.info/ko/2021/01/26/webpack-5.17.0lazycompilation-deno-1.7-open-web-docs/</link>
        <guid isPermaLink="true">https://jser.info/ko/2021/01/26/webpack-5.17.0lazycompilation-deno-1.7-open-web-docs/</guid>
        
        <category>node.js</category>
        
        <category>browser</category>
        
        <category>React</category>
        
        <category>IPFS</category>
        
        <category>p2p</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2021-01-12: Node.js 라이브러리의 ESM 대응 계획, TypeScript와 JSDoc으로 JavaScript 타입 검사</title>
        <description>&lt;p&gt;JSer.info #522 - &lt;a href=&quot;https://github.com/sindresorhus&quot;&gt;@sindresorhus&lt;/a&gt;에 의한 Node.js 라이브러리의 ESM(ECMAScript Module) 대응에 관한 discussions이 만들어졌다.&lt;br&gt;
&lt;a href=&quot;https://github.com/sindresorhus&quot;&gt;@sindresorhus&lt;/a&gt;는 다양한 Node.js 라이브러리를 만들고 있기 때문에 Node.js의 ESM 대응과 관계가 있다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/sindresorhus/meta/discussions/15&quot;&gt;The ESM move · Discussion #15 · sindresorhus/meta&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;2021년 4월 30일에 Node.js 10 LTS가 종료되며 Node.js 12 이상만 논의의 대상이 된다.&lt;br&gt;
Node.js 12.x에는 ECMAScript modules(&lt;code&gt;.mjs&lt;/code&gt;이나 &lt;code&gt;&amp;quot;type&amp;quot;: &amp;quot;module&amp;quot;&lt;/code&gt; 등)의 대응이 포함돼 있다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodejs/Release&quot;&gt;nodejs/Release: Node.js Release Working Group&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://nodejs.org/api/esm.html&quot;&gt;Modules: ECMAScript modules | Node.js v15.5.1 Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Node.js(12 이후)에서는 ESM을 네이티브로 다룰 수 있기 때문에 기존 패키지를 ESM에 대응하는 계획에 대해서 논의가 시작된 것.&lt;/p&gt;

&lt;p&gt;Node.js의 ESM 대응은 아직 개발 중인 부분이고 실제 마이그레이션 사례가 정해져있지 않기 때문에 어떻게 마이그레이션 하는지에 대한 참고가 되는 정보가 정리되고 있다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/sindresorhus&quot;&gt;@sindresorhus&lt;/a&gt;에 의한 라이브러리는 기본적으로 Node.js 용으로 만들어져 있어서 이 대응이 진행되면 Node.js를 ESM으로 네이티브하게 다룰 수 있는 범위가 넓어질 것.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.sindresorhus.com/webpack-5-headache-b6ac24973bf1&quot;&gt;Webpack 5 Headache. Webpack no longer automatically… | by Sindre Sorhus | 🦄 Sindre Sorhus’ blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://whistlr.info/2021/check-js-with-ts/&quot;&gt;Check your JS with TS&lt;/a&gt;에는 TypeScript와 JSDoc를 사용해 JavaScript 타입을 검사하는 방법이 작성돼 있다.&lt;/p&gt;

&lt;p&gt;JSDoc 타입 작성법, &lt;code&gt;tsc&lt;/code&gt;나 VSCode를 사용해 JSDoc 타입 검사, JavaScript에서 &lt;code&gt;.d.ts&lt;/code&gt; 타입 정의 파일을 사용하는 방법 등에 대해서 다룬다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;헤드라인&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v7-4-0-npm-cli&quot;&gt;Release v7.4.0 · npm/cli&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/npm/cli/releases/tag/v7.4.0&quot; title=&quot;Release v7.4.0 · npm/cli&quot;&gt;github.com/npm/cli/releases/tag/v7.4.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;npm 7.4.0 릴리스.&lt;br&gt;
&lt;code&gt;--foreground-scripts&lt;/code&gt; 추가, &lt;code&gt;npm publish --dry-run&lt;/code&gt; 수정 등&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;js-yaml-changelog-md-at-master-nodeca-js-yaml&quot;&gt;js-yaml/CHANGELOG.md at master · nodeca/js-yaml&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/nodeca/js-yaml/blob/master/CHANGELOG.md#400---2021-01-03&quot; title=&quot;js-yaml/CHANGELOG.md at master · nodeca/js-yaml&quot;&gt;github.com/nodeca/js-yaml/blob/master/CHANGELOG.md#400---2021-01-03&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;js-yaml 4.0.0 릴리스.&lt;br&gt;
&lt;code&gt;safe{Load,LoadAll,Dump}&lt;/code&gt; 등을 &lt;code&gt;load&lt;/code&gt; / &lt;code&gt;loadAll&lt;/code&gt; / &lt;code&gt;dump&lt;/code&gt;로 이름 변경하고 safe 메서드를 기본으로 변경.&lt;br&gt;
unsafe한 동작은 외부 패키지인 &lt;code&gt;js-yaml-js-types&lt;/code&gt;로 이동, number의 파서를 YAML 1.2에 근거해 변경, &lt;code&gt;dump&lt;/code&gt;의 출력 일부 변경 등.&lt;br&gt;
그 외로는 &lt;code&gt;.mjs&lt;/code&gt; 지원, prototype pollution와 관련한 동작 수정 등이 있다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodeca/js-yaml/blob/master/migrate_v3_to_v4.md&quot; title=&quot;js-yaml/migrate\_v3\_to\_v4.md at master · nodeca/js-yaml&quot;&gt;js-yaml/migrate_v3_to_v4.md at master · nodeca/js-yaml&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nodeca/js-yaml-js-types&quot; title=&quot;nodeca/js-yaml-js-types: Extra js types for js-yaml&quot;&gt;nodeca/js-yaml-js-types: Extra js types for js-yaml&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;the-esm-move-discussion-15-sindresorhus-meta&quot;&gt;The ESM move · Discussion #15 · sindresorhus/meta&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/sindresorhus/meta/discussions/15&quot; title=&quot;The ESM move · Discussion #15 · sindresorhus/meta&quot;&gt;github.com/sindresorhus/meta/discussions/15&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;issue&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;sindresorhus 패키지의 &lt;code&gt;&amp;quot;type&amp;quot;:&amp;quot;module&amp;quot;&lt;/code&gt;에 의한 ESM의 네이티브 대응 계획에 관한 이슈&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;아티클&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;phodal-clean-frontend-clean-frontend-architecture&quot;&gt;phodal/clean-frontend: Clean Frontend Architecture：整洁前端架构(중국어)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/phodal/clean-frontend&quot; title=&quot;phodal/clean-frontend: Clean Frontend Architecture：整洁前端架构&quot;&gt;github.com/phodal/clean-frontend&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;architecture&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Chinese&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;프런트엔드에서의 클린 아키텍처를 주제로 한 글.&lt;br&gt;
UI 프레임워크에서의 로직 편중, 클린 아키텍처의 개념 설명 및 구현 가이드.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;crossorigin&quot;&gt;crossorigin 속성 사양을 파헤치다(일본어)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nhiroki.jp/2021/01/07/crossorigin-attribute&quot; title=&quot;crossorigin 属性の仕様を読み解く&quot;&gt;nhiroki.jp/2021/01/07/crossorigin-attribute&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WHATWG&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;spec&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CORS에 관한 request mode와 credentials mode의 행동을 지정하는 &lt;code&gt;crossorigin&lt;/code&gt; 속성 설명.&lt;br&gt;
&lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;link rel=preconnect&amp;gt;&lt;/code&gt;에서의 &lt;code&gt;crossorigin&lt;/code&gt; 속성 지정으로 인한 동작.&lt;br&gt;
Fetch API에서의 표현 방법.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;check-your-js-with-ts&quot;&gt;Check your JS with TS&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://whistlr.info/2021/check-js-with-ts/&quot; title=&quot;Check your JS with TS&quot;&gt;whistlr.info/2021/check-js-with-ts/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JSDoc과 TypeScript를 사용해 JavaScript 코드를 타입 검사하는 방법.&lt;br&gt;
tsconfig.json 설정, JSDoc에서의 타입 정의, JavaScript에서 &lt;code&gt;.d.ts&lt;/code&gt; 파일을 import하여 타입 정의 정보를 JSDoc으로 사용하는 방법 등.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;slowfil-es-demonstate-and-observe-slow-loading-resources&quot;&gt;Slowfil.es – Demonstate and observe slow-loading resources&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://slowfil.es/&quot; title=&quot;Slowfil.es – Demonstate and observe slow-loading resources&quot;&gt;slowfil.es/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;HTTP&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;지연(latencty) 현상을 재현하거나 리소스 전송을 테스트할 수 있는 서비스.&lt;br&gt;
script 요소의 &lt;code&gt;async&lt;/code&gt; 속성이나 &lt;code&gt;defer&lt;/code&gt; 속성의 동작을 테스트 하는 등 리소스 지연에 관한 성능 테스트에 활용할 수 있다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.stefanjudis.com/notes/slowfil-es-a-service-for-slow-assets-with-high-priority/&quot; title=&quot;slowfil.es – a service for slow assets with high priority | Stefan Judis Web Development&quot;&gt;slowfil.es – a service for slow assets with high priority | Stefan Judis Web Development&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=tr6aHw8I32M&quot; title=&quot;Oh The Scripts We&amp;amp;#x27;ll Load - A Performance Talk by Tim Kadlec - YouTube&quot;&gt;Oh The Scripts We&amp;#39;ll Load - A Performance Talk by Tim Kadlec - YouTube&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;an-additional-non-backtracking-regexp-engine-v8&quot;&gt;An additional non-backtracking RegExp engine · V8&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://v8.dev/blog/non-backtracking-regexp&quot; title=&quot;An additional non-backtracking RegExp engine · V8&quot;&gt;v8.dev/blog/non-backtracking-regexp&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;V8&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;RegExp&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;V8에 백트랙 하지 않는 정규 표현 엔진을 플래그를 붙여 구현했다.&lt;br&gt;
백트랙에 의한 ReDos와 같은 지수함수적으로 매치되는 문제가 알려져 있어 이를 해결하기 위해 백트랙을 사용하지 않는 알고리즘을 구현.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;사이트, 서비스, 문서&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;byte-js-byte-a-easy-javascript-runtime-engine-that-aims-towards-productivity&quot;&gt;byte-js/byte: A easy JavaScript Runtime Engine that aims towards productivity&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/byte-js/byte&quot; title=&quot;byte-js/byte: A easy JavaScript Runtime Engine that aims towards productivity&quot;&gt;github.com/byte-js/byte&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Rust&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;V8&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;console&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;간단한 커멘트 라인 도구를 만드는 것을 목적으로 한 V8과 Rust를 사용한 JavaScript 런타임 도구&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/denoland/rusty_v8&quot; title=&quot;denoland/rusty\_v8: V8 javascript bindings for Rust&quot;&gt;denoland/rusty_v8: V8 javascript bindings for Rust&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;nx-extensible-dev-tools-for-monorepos&quot;&gt;Nx: Extensible Dev Tools for Monorepos&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nx.dev/&quot; title=&quot;Nx: Extensible Dev Tools for Monorepos&quot;&gt;nx.dev/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;monorepo&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScript의 monorepo 프로젝트를 다루는 개발 도구&lt;br&gt;
목적에 맞는 monorepo 생성, task runner 관리, VSCode 확장을 사용한 UI 제공.&lt;br&gt;
의존 그래프를 사용한 캐시, 증분 빌드, Nx Cloud를 사용한 원격 캐시 등.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;checka11y-css-css-stylesheet-to-quickly-highlight-a11y-concerns&quot;&gt;Checka11y.css - CSS stylesheet to quickly highlight a11y concerns&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://checka11y.jackdomleo.dev/&quot; title=&quot;Checka11y.css - CSS stylesheet to quickly highlight a11y concerns&quot;&gt;checka11y.jackdomleo.dev/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;accessibility&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;CSS로 HTML의 접근성을 체크하는 스타일시트.&lt;br&gt;
비슷한 도구로는 &lt;a href=&quot;https://ffoodd.github.io/a11y.css&quot;&gt;a11y.css&lt;/a&gt;가 있다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;cloudfour-lighthouse-parade-a-node-js-command-line-tool-that-crawls-a-domain-and-gathers-lighthouse-performance-data-for-every-page&quot;&gt;cloudfour/lighthouse-parade: A Node.js command line tool that crawls a domain and gathers lighthouse performance data for every page.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/cloudfour/lighthouse-parade&quot; title=&quot;cloudfour/lighthouse-parade: A Node.js command line tool that crawls a domain and gathers lighthouse performance data for every page.&quot;&gt;github.com/cloudfour/lighthouse-parade&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Lighthouse로 크롤링하여 성능 측정한 결과를 CSV로 정리하는 도구&lt;br&gt;
여러 페이지의 측정 결과를 Spreadsheet 등에 모아서 분석하고자 제작&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;소프트웨어, 도구, 라이브러리&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;menduz-typed-url-params-typesystem-based-parser-for-url-parameters&quot;&gt;menduz/typed-url-params: TypeSystem based parser for url parameters&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/menduz/typed-url-params&quot; title=&quot;menduz/typed-url-params: TypeSystem based parser for url parameters&quot;&gt;github.com/menduz/typed-url-params&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;path-to-regexp와 같이 라우팅 문자열에 관한 타입 추론을 Template Literarl Type으로 다룰 수 있는 라이브러리.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;mistlog-react-peg-a-react-style-parser-generator-based-on-peg-js&quot;&gt;mistlog/react-peg: A react style parser generator based on PEG.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/mistlog/react-peg&quot; title=&quot;mistlog/react-peg: A react style parser generator based on PEG.js&quot;&gt;github.com/mistlog/react-peg&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;jsx&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;PEG.js 구문 정의를 JSX로 작성할 수 있는 라이브러리.&lt;br&gt;
TypeScript의 TSX를 사용하여 구문에 관한 타입 검사와 동시에 구문 정의를 컴포넌트 처럼 하는데 목적이 있다.&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 12 Jan 2021 11:03:31 +0900</pubDate>
        <link>https://jser.info/ko/2021/01/12/node.jsesm-typescriptjsdocjavascript/</link>
        <guid isPermaLink="true">https://jser.info/ko/2021/01/12/node.jsesm-typescriptjsdocjavascript/</guid>
        
        <category>Tools</category>
        
        <category>TypeScript</category>
        
        <category>V8</category>
        
        <category>performance</category>
        
        <category>npm</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2021-01-07: Wasmer 1.0, 2021년의 웹 표준과 브라우저, xstyled</title>
        <description>&lt;p&gt;JSer.info #521 - WebAssembly의 런타임 환경 &lt;a href=&quot;https://wasmer.io/&quot;&gt;Wasmer&lt;/a&gt; 1.0이 릴리스 됐다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://medium.com/wasmer/wasmer-1-0-3f86ca18c043&quot;&gt;Wasmer 1.0. By leveraging Wasm for software… | by Syrus Akbary | Wasmer | Jan, 2021 | Medium&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/wasmerio/wasmer/blob/master/CHANGELOG.md#100---2021-01-05&quot; title=&quot;wasmer/CHANGELOG.md at master · wasmerio/wasmer&quot;&gt;wasmer/CHANGELOG.md at master · wasmerio/wasmer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Wasmer 1.0에서는 Wasm 파일을 &lt;code&gt;.dll&lt;/code&gt; 등으로 사전 컴파일하는 &lt;code&gt;wasmer compile&lt;/code&gt; 추가, 크로스 컴파일 대응, 에러 레포트가 개선됐다.&lt;/p&gt;

&lt;p&gt;1.0는 AOT (Ahead Of Time) compilation(&lt;code&gt;wasmer compile&lt;/code&gt;에 의한 precompile) 등을 지원하여 production ready에 필요한 성능이 크게 개선됐다.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;아래 글에는 2020년의 웹 표준과 향후 동향에 대해 작성돼 있다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://gihyo.jp/design/column/newyear/2021/web-standards-and-browsers&quot;&gt;2021년 웹 표준과 브라우저：신춘특별기획｜gihyo.jp … 기술평론사(일본어)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://gihyo.jp/design/column/newyear/2021/web-accessibility-prospect&quot;&gt;2021년의 웹 접근성：신춘특별기획｜gihyo.jp … 기술평론사(일본어)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;HTML, CSS, DOM API에 관한 2020년 웹 표준 및 브라우저 대응 현황과 웹 접근성과 관련한 WCAG 2.2 그리고 그 표준인 WCAG 3.0의 책정 상황이 대해 정리돼 있다.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;React 용 Utility-first한 CSS-in-JS 프레임워크인 &lt;a href=&quot;https://xstyled.dev/&quot;&gt;xstyled&lt;/a&gt; 2.0이 릴리스됐다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gregberge/xstyled/releases/tag/v2.0.0&quot;&gt;Release 🚀 v2.0.0 · gregberge/xstyled&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;https://xstyled.dev/&quot;&gt;xstyled&lt;/a&gt;는 &lt;a href=&quot;https://styled-system.com/&quot;&gt;Styled System&lt;/a&gt;과 &lt;a href=&quot;https://tailwindcss.com/&quot;&gt;Tailwind CSS&lt;/a&gt;에서 영감을 받아 개발한 CSS-in-JS 프레임워크다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://xstyled.dev/docs/introduction/&quot;&gt;Introduction - xstyled&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;내부에서 CSS-in-JS 라이브러리로 styled-components 또는 emotion을 사용, Tailwind와 같은 Utility 스타일을 지정할 수 있는 React 컴포넌트를 제공하는데 목적이 있다.&lt;br&gt;
2.0에서는 1.x에서의 API 변경이 포함돼 있으며 TypeScript 타입 정의가 추가됐고 공식 문서 사이트가 개편됐다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;헤드라인&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;wasmer-1-0-by-leveraging-wasm-for-software-by-syrus-akbary-wasmer-jan-2021-medium&quot;&gt;Wasmer 1.0. By leveraging Wasm for software… | by Syrus Akbary | Wasmer | Jan, 2021 | Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/wasmer/wasmer-1-0-3f86ca18c043&quot; title=&quot;Wasmer 1.0. By leveraging Wasm for software… | by Syrus Akbary | Wasmer | Jan, 2021 | Medium&quot;&gt;medium.com/wasmer/wasmer-1-0-3f86ca18c043&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebAssembly&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;WebAssembly Runtime인 Wasmer 1.0이 릴리스됐다.&lt;br&gt;
Wasm 파일을 &lt;code&gt;.dll&lt;/code&gt; 등으로 사전 컴파일하는 &lt;code&gt;wasmer compile&lt;/code&gt; 추가, 크로스 컴파일 대응, 에러 리포트 개선&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/wasmerio/wasmer/blob/master/CHANGELOG.md#100---2021-01-05&quot; title=&quot;wasmer/CHANGELOG.md at master · wasmerio/wasmer&quot;&gt;wasmer/CHANGELOG.md at master · wasmerio/wasmer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v15-5-1-current-node-js&quot;&gt;Node v15.5.1 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v15.5.1/&quot; title=&quot;Node v15.5.1 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v15.5.1/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 15.5.1 릴리스&lt;br&gt;
DoS와 관련된 취약점과 HTTP Request Smuggling 취약점 수정이 포함된 보안 업데이트&lt;br&gt;
Node.js 10, 12, 14 각각 동일한 보안 업데이트 버전이 릴리스 됐다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-notes-for-safari-technology-preview-118-webkit&quot;&gt;Release Notes for Safari Technology Preview 118 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/11439/release-notes-for-safari-technology-preview-118/&quot; title=&quot;Release Notes for Safari Technology Preview 118 | WebKit&quot;&gt;webkit.org/blog/11439/release-notes-for-safari-technology-preview-118/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webkit&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Safari Technology Preview 118 릴리스&lt;br&gt;
Web Inspector에 Network 요청을 intercept 하는 UI 추가&lt;br&gt;
ECMAScript Proposal의 &lt;code&gt;Array#at&lt;/code&gt; 지원, Private Click Measurement 설정을 experimental에서 표준 UI 환경으로 이전&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/tc39/proposal-relative-indexing-method&quot; title=&quot;tc39/proposal-relative-indexing-method: A TC39 proposal to add an .at() method to all the basic indexable classes (Array, String, TypedArray)&quot;&gt;tc39/proposal-relative-indexing-method: A TC39 proposal to add an .at() method to all the basic indexable classes (Array, String, TypedArray)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;아티클&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;react-1&quot;&gt;React 튜토리얼 1：멍멍이 사진 갤러리를 만들자(일본어)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://zenn.dev/likr/articles/6be53ca64f29aa035f07&quot; title=&quot;React 튜토리얼 1：멍멍이 사진 갤러리를 만들자&quot;&gt;zenn.dev/likr/articles/6be53ca64f29aa035f07&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React를 사용한 웹 애플리케이션 개발 튜토리얼&lt;br&gt;
React의 기본적인 사용 방법, 컴포넌트, Netlify를 이용한 배포 방법 소개&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;2021-gihyo-jp&quot;&gt;2021년 웹 표준과 브라우저：신춘특별기획｜gihyo.jp … 기술평론사(일본어)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://gihyo.jp/design/column/newyear/2021/web-standards-and-browsers&quot; title=&quot;2021년 웹 표준과 브라우저：신춘특별기획｜gihyo.jp … 기술평론사&quot;&gt;gihyo.jp/design/column/newyear/2021/web-standards-and-browsers&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;spec&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;2020년의 HTML, CSS, DOM API 변화를 정리한 글&lt;br&gt;
또, IE 11와 구Edge 지원 현황, UA Client Hint나 Privacy Sandbox 등에 대처하는 방법 등 폭넓게 웹(표준) 상황을 다루고 있다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;2021-gihyo-jp&quot;&gt;2021년 웹 접근성：신춘특별기획｜gihyo.jp … 기술평론사(일본어)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://gihyo.jp/design/column/newyear/2021/web-accessibility-prospect&quot; title=&quot;2021년 웹 접근성：신춘특별기획｜gihyo.jp … 기술평론사&quot;&gt;gihyo.jp/design/column/newyear/2021/web-accessibility-prospect&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;accessibility&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;spec&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;웹 접근성 사양 현황을 정리한 글&lt;br&gt;
2020년의 WCAG 변경점, WCAG 데쥬르 표준에서의 ISO / JIS 버전 현황&lt;br&gt;
책정 중인 WCAG 3.0, WAI-ARIA 1.2에 대해 정리돼 있다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;deno-npm&quot;&gt;Deno에서 npm 패키지를 이용하는 노하우(일본어)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://zenn.dev/uki00a/articles/how-to-use-npm-packages-in-deno&quot; title=&quot;Deno에서 npm 패키지를 이용하는 노하우&quot;&gt;zenn.dev/uki00a/articles/how-to-use-npm-packages-in-deno&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;deno&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Deno에서 npm에 공개된 패키지를 사용하는 방법&lt;br&gt;
skypack, esm.sh, jspm.dev를 이용한 방법&lt;br&gt;
또, JavaScript로 작성한 패키지를 타입 검사하는 구조로 &lt;code&gt;X-TypeScript-Types&lt;/code&gt; 헤더와 &lt;code&gt;@deno-types&lt;/code&gt; 소개&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;vanilla-hooks-outside-react-hooks-are-a-pattern-not-something-by-andrea-giammarchi-javascript-in-plain-english-jan-2021-medium&quot;&gt;Vanilla Hooks (outside React). Hooks are a pattern, not something… | by Andrea Giammarchi | JavaScript In Plain English | Jan, 2021 | Medium&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/javascript-in-plain-english/vanilla-hooks-outside-react-860471e5f95c&quot; title=&quot;Vanilla Hooks (outside React). Hooks are a pattern, not something… | by Andrea Giammarchi | JavaScript In Plain English | Jan, 2021 | Medium&quot;&gt;medium.com/javascript-in-plain-english/vanilla-hooks-outside-react-860471e5f95c&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;uhooks를 사용해 React Hooks와 비슷하게 DOM API를 활용해 TODO 애플리케이션 작성하는 방법 소개&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/WebReflection/uhooks&quot; title=&quot;WebReflection/uhooks: micro hooks: a minimalistic client/server hooks&amp;amp;#x27; implementation&quot;&gt;WebReflection/uhooks: micro hooks: a minimalistic client/server hooks&amp;#39; implementation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;사이트, 서비스, 문서&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;tabfs&quot;&gt;TabFS&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://omar.website/tabfs/&quot; title=&quot;TabFS&quot;&gt;omar.website/tabfs/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;WebExtension&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;브라우저의 탭을 파일시스템으로 마운트하는 브라우저 확장&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;소프트웨어, 도구, 라이브러리&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;g-plane-typed-query-selector-better-typed-queryselector-and-queryselectorall&quot;&gt;g-plane/typed-query-selector: Better typed `querySelector` and `querySelectorAll`.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/g-plane/typed-query-selector&quot; title=&quot;g-plane/typed-query-selector: Better typed \`querySelector\` and \`querySelectorAll\`.&quot;&gt;github.com/g-plane/typed-query-selector&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Template Literal Type를 사용해 &lt;code&gt;document.querySelector&lt;/code&gt;에 전달한 인자에서 반환될 요소의 타입을 추론하는 라이브러리&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;xstyled-a-utility-first-css-in-js-framework-built-for-react-xstyled&quot;&gt;xstyled - A utility-first CSS-in-JS framework built for React. - xstyled&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://xstyled.dev/&quot; title=&quot;xstyled - A utility-first CSS-in-JS framework built for React. - xstyled&quot;&gt;xstyled.dev/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React 용 Utility-first한 CSS-in-JS 프레임워크&lt;br&gt;
CSS-in-JS 라이브러리로 styled-components 또는 emotion을 사용해 Tailwind 같은 Utility 스타일을 정의할 수 있는 컴포넌트를 제공하는데 목적이 있다.&lt;br&gt;
styled-system과 styled-components에 영감을 받아 개발됐다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://styled-system.com/&quot; title=&quot;Styled System&quot;&gt;Styled System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/gregberge/xstyled/releases/tag/v2.0.0&quot; title=&quot;Release 🚀 v2.0.0 · gregberge/xstyled&quot;&gt;Release 🚀 v2.0.0 · gregberge/xstyled&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;nullstack-full-stack-javascript-components&quot;&gt;Nullstack - Full-stack Javascript Components&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nullstack.app/&quot; title=&quot;Nullstack - Full-stack Javascript Components&quot;&gt;nullstack.app/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;동일한 컴포넌트가 브라우저와 Node.js에서 동작하도록 다루는 풀스택 프레임워크&lt;br&gt;
&lt;code&gt;.njs&lt;/code&gt;라는 확장자로 라이프사이클 메서드와 JSX를 사용한 컴포넌트를 작성하여 SSR이나 Hydrate 등을 실시&lt;br&gt;
서버에서 동작하는 코드는 &lt;code&gt;static async&lt;/code&gt;로 작성하고 인스턴스 메서드는 브라우저 용으로 처리되며 &lt;code&gt;context&lt;/code&gt; 객체로 값을 주고 받는다.&lt;br&gt;
빌드하면 브라우저와 서버 용으로 bundle한 파일이 각각 출력된다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;kripod-otion-atomic-css-in-js-with-a-featherweight-runtime&quot;&gt;kripod/otion: Atomic CSS-in-JS with a featherweight runtime&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/kripod/otion&quot; title=&quot;kripod/otion: Atomic CSS-in-JS with a featherweight runtime&quot;&gt;github.com/kripod/otion&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;runtime 환경에서 atomic CSS-in-JS를 실현하는 라이브러리&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;atlassian-labs-compiled-build-time-atomic-css-in-js-baked-and-ready-to-serve&quot;&gt;atlassian-labs/compiled: Build time atomic CSS-in-JS. Baked and ready to serve.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/atlassian-labs/compiled&quot; title=&quot;atlassian-labs/compiled: Build time atomic CSS-in-JS. Baked and ready to serve.&quot;&gt;github.com/atlassian-labs/compiled&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;build time 환경에서 Atomic CSS-in-JS를 실현하는 라이브러리&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;yord-shargs-shargs-is-a-library-for-building-command-line-argument-parsers&quot;&gt;Yord/shargs: 🦈 shargs is a library for building command-line argument parsers.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Yord/shargs&quot; title=&quot;Yord/shargs: 🦈 shargs is a library for building command-line argument parsers.&quot;&gt;github.com/Yord/shargs&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;console&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;커멘드 라인 인수 파싱 라이브러리&lt;br&gt;
서브 커멘드, 맞춤법 정정, REPL 등에 대응한다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;o1dmate-dns-host-simple-lightweight-dns-server-written-in-pure-javascript-with-no-external-dependencies&quot;&gt;O1dMate/dns-host: Simple, lightweight DNS server written in pure JavaScript with no external dependencies.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/O1dMate/dns-host&quot; title=&quot;O1dMate/dns-host: Simple, lightweight DNS server written in pure JavaScript with no external dependencies.&quot;&gt;github.com/O1dMate/dns-host&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js의 &lt;code&gt;dgram&lt;/code&gt; 코어 패키지를 활용해 개발한 DNS 서버 구현 라이브러리&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;도서&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;amazon-co-jp-http-cdn&quot;&gt;Amazon.co.jp: 웹 전송 기술 - HTTP 캐시, 리버스 프록시, CDN을 활용하다: 타나카 쇼헤이: 책&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.amazon.co.jp/dp/4297119250/&quot; title=&quot;Amazon.co.jp: 웹 전송 기술 - HTTP 캐시, 리버스 프록시, CDN을 활용하다: 타나카 쇼헤이: 책&quot;&gt;www.amazon.co.jp/dp/4297119250/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;cdn&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;HTTP&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;2021년 2월 13일 출간 예정&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Thu, 07 Jan 2021 12:27:36 +0900</pubDate>
        <link>https://jser.info/ko/2021/01/07/wasmer-1.0-2021-xstyled/</link>
        <guid isPermaLink="true">https://jser.info/ko/2021/01/07/wasmer-1.0-2021-xstyled/</guid>
        
        <category>CSS</category>
        
        <category>node.js</category>
        
        <category>TypeScript</category>
        
        <category>React</category>
        
        <category>browser</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2020-12-01: Workbox v6.0.0, TS auto mock, TypeScriptToLua</title>
        <description>&lt;p&gt;JSer.info #516 - Service Worker 라이브러리 Workbox 6.0.0 릴리스&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/GoogleChrome/workbox/releases/tag/v6.0.0&quot;&gt;Release Workbox v6.0.0 · GoogleChrome/workbox&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;workbox-webpack-plugin&lt;/code&gt;에 webpack 과의 호환성 향상을 위해 webpack 5가 대응됐고 버그가 수정됐으며 이번 릴리스에 함께 포함된다.&lt;br&gt;
큰 변경으로 &lt;code&gt;workbox-strategies&lt;/code&gt;의 전략 정의 방식(Strategy / Plugin 구조)이 변경됐다. &lt;br&gt;
커스텀 Stragegy를 만들 경우 &lt;code&gt;Strategy&lt;/code&gt; 기반 클래스를 상속받아 작성하게 된다. 그리고 이에 맞춰 라이플 사이클 메서드도 추가됐다.&lt;/p&gt;

&lt;p&gt;또, Workbox의 레시피를 라이브러리로 이용할 수 있는 &lt;code&gt;workbox-recipes&lt;/code&gt; 패키지가 추가됐다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/tools/workbox/modules/workbox-recipes&quot;&gt;Workbox Recipes  |  Google Developers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;그 외로 Workbox의 &lt;code&gt;skipWaiting&lt;/code&gt;이 비권장됐고 대신 Service Worker의 &lt;code&gt;self.skipWaiting()&lt;/code&gt;을 사용을 권장한다.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Typescript-TDD/ts-auto-mock&quot;&gt;Typescript-TDD/ts-auto-mock&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;TypeScript의 타입 정의를 토대로 목(mock) 데이터를 생성하는 도구.&lt;/p&gt;

&lt;p&gt;TypeScript의 타입은 Runtime에 존재하지 않으므로 TypeScript 컴파일러를 감싼 &lt;code&gt;ttypescript&lt;/code&gt;나 &lt;code&gt;ts-patch&lt;/code&gt; 등을 함께 사용 한다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/Microsoft/TypeScript/issues/14419&quot;&gt;Plugin Support for Custom Transformers · Issue #14419 · microsoft/TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/cevek/ttypescript&quot;&gt;cevek/ttypescript: Over TypeScript tool to use custom transformers in the tsconfig.json&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/nonara/ts-patch&quot;&gt;nonara/ts-patch: Patch typescript to support custom transformers in tsconfig.json&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;또, 같은 구조를 Jasmine이나 Jest 환경에서 쓸 수 있도록 &lt;a href=&quot;https://github.com/Typescript-TDD/jasmine-ts-auto-mock&quot;&gt;jasmine-ts-auto-mock&lt;/a&gt;과 &lt;a href=&quot;https://github.com/Typescript-TDD/jest-ts-auto-mock&quot;&gt;jest-ts-auto-mock&lt;/a&gt; 라이브러리도 제공한다.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://typescripttolua.github.io/&quot;&gt;TypeScriptToLua&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;TypeScript 코드를 Lua로 변환하는 툴킷.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/TypeScriptToLua/TypeScriptToLua&quot;&gt;TypeScriptToLua/TypeScriptToLua: Typescript to lua transpiler. https://typescripttolua.github.io/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;TypeScript로 작성한 코드를 Lua로 변환하며 Lua 개발 시 TypeScript나 JavaScript의 에코 시스템을 이용할 수 있도록 하는데 목적이 있다.&lt;br&gt;
TypeScript 타입 정의 파일을 사용하여 이전의 Lua 코드와도 연계할 수 있다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/TypeScriptToLua/lua-types&quot;&gt;Lua Types&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;Lua의 Starndard Library 타입 정의&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;구조를 설명하자면 TypeScript의 AST로 부터 &lt;a href=&quot;https://github.com/TypeScriptToLua/TypeScriptToLua/blob/54569aac73c553e86a03b47a0fc755e9c83d3927/src/LuaAST.ts&quot;&gt;Lua AST&lt;/a&gt;로 변환하고 이 AST로 &lt;a href=&quot;https://github.com/TypeScriptToLua/TypeScriptToLua/blob/54569aac73c553e86a03b47a0fc755e9c83d3927/src/LuaPrinter.ts&quot;&gt;Lua 코드를 생성&lt;/a&gt;한다.&lt;br&gt;
또, &lt;code&gt;Array.prototype.concat&lt;/code&gt;와 같은 JavaScript 빌트인 객체도 &lt;a href=&quot;https://github.com/TypeScriptToLua/TypeScriptToLua/tree/54569aac73c553e86a03b47a0fc755e9c83d3927/src/lualib&quot;&gt;Self Host로 구현&lt;/a&gt;돼 있다.&lt;br&gt;
&lt;a href=&quot;https://typescripttolua.github.io/play&quot;&gt;Playground&lt;/a&gt;에서 한번 시험해보면 알겠지만 &lt;code&gt;[1].concat(2)&lt;/code&gt;와 같은 코드를 사용하면 &lt;code&gt;__TS__ArrayConcat&lt;/code&gt;와 같은 Lua 용 polyfill을 활용하여 변환하는 것을 알 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://typescripttolua.github.io/docs/api/plugins&quot;&gt;Plugins&lt;/a&gt; 등도 TypeScript로 작성할 수 있도록 제공한다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;헤드라인&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v5-0-0-typicode-husky&quot;&gt;Release v5.0.0 · typicode/husky&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/typicode/husky/releases/tag/v5.0.0&quot; title=&quot;Release v5.0.0 · typicode/husky&quot;&gt;github.com/typicode/husky/releases/tag/v5.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;git &lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;git hook 관리 도구 husky 5.0.0 릴리스. &lt;code&gt;npm install husky@next&lt;/code&gt;로 설치할 수 있다.&lt;br&gt;
라이선스를 MIT에서 License Zero Parity + MIT로 변경됐다.&lt;/p&gt;

&lt;p&gt;Git 2.9+의 &lt;code&gt;core.hooksPath&lt;/code&gt;를 사용해 Git Hook 구조로 변경, 설치 시 Hook을 자동으로 활성화하지 않고 &lt;code&gt;husky install&lt;/code&gt;를 이용하여 명시적으로 활성화 하도록 변경됐다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://patronlicense.com/versions/1.0.0&quot; title=&quot;Patron License 1.0.0&quot;&gt;Patron License 1.0.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;storybook-6-1&quot;&gt;Storybook 6.1&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://storybook.js.org/blog/storybook-6-1/&quot; title=&quot;Storybook 6.1&quot;&gt;storybook.js.org/blog/storybook-6-1/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;UI&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Angular&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Storybook 6.1 릴리스.&lt;br&gt;
빌드 성능 개선, Asynchronous loaders 추가, React 17 대응, Angular 11 대응&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v12-20-0-lts-node-js&quot;&gt;Node v12.20.0 (LTS) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v12.20.0/&quot; title=&quot;Node v12.20.0 (LTS) | Node.js&quot;&gt;nodejs.org/en/blog/release/v12.20.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 12.20.0 릴리스.&lt;br&gt;
Node.js 14에서의 backport가 주된 내용.&lt;br&gt;
&lt;code&gt;fs.FSWatcher&lt;/code&gt;에 &lt;code&gt;ref()&lt;/code&gt;와 &lt;code&gt;unref()&lt;/code&gt; 추가, &lt;code&gt;http.Agent&lt;/code&gt;에 &lt;code&gt;scheduling&lt;/code&gt; 옵션 추가, package.json에서 exports patterns 지원.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-3-8-0-2020-11-26-zloirock-core-js&quot;&gt;Release 3.8.0 - 2020.11.26 · zloirock/core-js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/zloirock/core-js/releases/tag/v3.8.0&quot; title=&quot;Release 3.8.0 - 2020.11.26 · zloirock/core-js&quot;&gt;github.com/zloirock/core-js/releases/tag/v3.8.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;polyfill&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;core-js 3.8.0 릴리스.&lt;br&gt;
&lt;code&gt;Array#at&lt;/code&gt;, &lt;code&gt;Number.range&lt;/code&gt;, &lt;code&gt;Array.filterOut&lt;/code&gt;, &lt;code&gt;Array#uniqueBy&lt;/code&gt; 추가.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-workbox-v6-0-0-googlechrome-workbox&quot;&gt;Release Workbox v6.0.0 · GoogleChrome/workbox&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/GoogleChrome/workbox/releases/tag/v6.0.0&quot; title=&quot;Release Workbox v6.0.0 · GoogleChrome/workbox&quot;&gt;github.com/GoogleChrome/workbox/releases/tag/v6.0.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ServiceWorker&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Workbox 6.0.0 릴리스.&lt;br&gt;
webpack 5 대응, Strategy / Plugin 구조 변경, &lt;code&gt;workbox-recipes&lt;/code&gt; 패키지 추가 등.&lt;br&gt;
Workbox의 &lt;code&gt;skipWaiting&lt;/code&gt;는 비권장됐으며 Service Worker의 &lt;code&gt;self.skipWaiting()&lt;/code&gt;을 사용할 것을 권장.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;아티클&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;how-to-secure-node-js-applications-with-a-content-security-policy-digitalocean&quot;&gt;How To Secure Node.js Applications with a Content Security Policy | DigitalOcean&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-secure-node-js-applications-with-a-content-security-policy&quot; title=&quot;How To Secure Node.js Applications with a Content Security Policy | DigitalOcean&quot;&gt;www.digitalocean.com/community/tutorials/how-to-secure-node-js-applications-with-a-content-security-policy&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSP&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node.js 애플리케이션에서 CSP를 실현하는 방법을 소개하는 튜토리얼 글.&lt;br&gt;
CSP 설정 방법, 폰트나 이미지 등의 취득을 제한하는 예제, Nonce 설정, CSP Reporting API와 레포트를 전달 받는 방법 등이 소개돼 있다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;사이트, 서비스, 문서&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;operator-lookup-search-javascript-operators&quot;&gt;Operator Lookup - Search JavaScript operators&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.joshwcomeau.com/operator-lookup/&quot; title=&quot;Operator Lookup - Search JavaScript operators&quot;&gt;www.joshwcomeau.com/operator-lookup/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;search&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;JavaScript 연산자의 의미를 찾아볼 수 있는 사이트.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;funbox-harold-compares-frontend-project-bundles&quot;&gt;funbox/harold: Compares frontend project bundles&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/funbox/harold&quot; title=&quot;funbox/harold: Compares frontend project bundles&quot;&gt;github.com/funbox/harold&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;프로젝트의 프런트엔드 관련 파일 크기 등의 스냅샷을 찍고 그 스냅샷 끼리 비교할 수 있는 도구.&lt;br&gt;
프로젝트의 파일 크기나 빌드 시간에 대한 변화를 측정할 수 있다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;소프트웨어, 도구, 라이브러리&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;typescript-tdd-ts-auto-mock-typescript-transformer-to-unlock-automatic-mock-creation-for-interfaces-and-classes&quot;&gt;Typescript-TDD/ts-auto-mock: Typescript transformer to unlock automatic mock creation for interfaces and classes&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Typescript-TDD/ts-auto-mock&quot; title=&quot;Typescript-TDD/ts-auto-mock: Typescript transformer to unlock automatic mock creation for interfaces and classes&quot;&gt;github.com/Typescript-TDD/ts-auto-mock&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;plugin&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;test&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScript 타입 정의에서 자동으로 목 데이터를 만드는 TypeScript Plugin.&lt;br&gt;
ttypescript와 ts-patch를 경유하는 식으로 TypeScript의 transform 동작.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;optoolco-tonic-a-low-profile-component-framework-stable-minimal-auditable-and-build-tool-free&quot;&gt;optoolco/tonic: A Low Profile Component Framework. Stable, Minimal, Auditable, and Build-Tool-Free.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/optoolco/tonic&quot; title=&quot;optoolco/tonic: A Low Profile Component Framework. Stable, Minimal, Auditable, and Build-Tool-Free.&quot;&gt;github.com/optoolco/tonic&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;WebComponents&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Web Components 프레임워크&lt;br&gt;
&lt;code&gt;html&lt;/code&gt; 메서드로 JSX 스러운 템플릿 구조 제공,  Props로 값 전달, State와 라이프 사이클 이벤트를 갖고 있다.&lt;br&gt;
빌드 없이 사용할 수 있다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;package-phobia&quot;&gt;Package Phobia&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://packagephobia.com/&quot; title=&quot;Package Phobia&quot;&gt;packagephobia.com/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;npm&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;webservice&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;npm 패키지의 의존을 포함한 설치 시의 파일(패키지) 크기와 배포 시의 크기 정보를 제공하는 웹 서비스.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;lukeed-uvu-uvu-is-an-extremely-fast-and-lightweight-test-runner-for-node-js-and-the-browser&quot;&gt;lukeed/uvu: uvu is an extremely fast and lightweight test runner for Node.js and the browser&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/lukeed/uvu&quot; title=&quot;lukeed/uvu: uvu is an extremely fast and lightweight test runner for Node.js and the browser&quot;&gt;github.com/lukeed/uvu&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;빠른 실행 속도를 목적으로 한 테스트 프레임워크.&lt;br&gt;
테스트 파일 자체를 실행할 수 있으며 Native ES Modules 지원, 브라우저에서도 실행할 수 있다.&lt;br&gt;
&lt;code&gt;test&lt;/code&gt;와 &lt;code&gt;suite&lt;/code&gt;메서드 &lt;code&gt;uvu/assert&lt;/code&gt; 모듈을 갖고있다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;formidablelabs-urql-the-highly-customizable-and-versatile-graphql-client-with-which-you-add-on-features-like-normalized-caching-as-you-grow&quot;&gt;FormidableLabs/urql: The highly customizable and versatile GraphQL client with which you add on features like normalized caching as you grow.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/FormidableLabs/urql&quot; title=&quot;FormidableLabs/urql: The highly customizable and versatile GraphQL client with which you add on features like normalized caching as you grow.&quot;&gt;github.com/FormidableLabs/urql&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;GraphQL&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;GraphQL 클라이언트 라이브러리.&lt;br&gt;
GraphQL 요청, 캐시, React 등 라이브러리에 대응하고 있다.&lt;br&gt;
Exchanges라는 확장 구조나 디버깅 용 개발자 도구도 제공한다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;panva-jose-universal-json-web-almost-everything-jwa-jws-jwe-jwt-jwk-with-no-dependencies&quot;&gt;panva/jose: Universal &amp;quot;JSON Web Almost Everything&amp;quot; - JWA, JWS, JWE, JWT, JWK with no dependencies&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/panva/jose&quot; title=&quot;panva/jose: Universal \&amp;quot;JSON Web Almost Everything\&amp;quot; - JWA, JWS, JWE, JWT, JWK with no dependencies&quot;&gt;github.com/panva/jose&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JWT&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Universal한 JWA, JWS, JWE, JWT, JWK 구현 라이브러리.&lt;br&gt;
브라우저 에서는 Web Cryptography API를 사용한다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;typescripttolua&quot;&gt;TypeScriptToLua&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://typescripttolua.github.io/&quot; title=&quot;TypeScriptToLua&quot;&gt;typescripttolua.github.io/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Lua&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScript를 Lua 코드로 변환하는 도구.&lt;br&gt;
기존 Lua 코드는 형 정의 파일로 대응하며 TypeScript를 사용한 타입 안전한 환경와 풍부한 IDE 기능을 활용하여 Lua 코드를 작성할 수 있다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;talentlessguy-tinyhttp-0-legacy-tiny-fast-web-framework-as-a-replacement-of-express&quot;&gt;talentlessguy/tinyhttp: ⚡ 0-legacy, tiny &amp;amp; fast web framework as a replacement of Express&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/talentlessguy/tinyhttp&quot; title=&quot;talentlessguy/tinyhttp: ⚡ 0-legacy, tiny &amp;amp; fast web framework as a replacement of Express&quot;&gt;github.com/talentlessguy/tinyhttp&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;express&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;express와 비슷한 API를 제공하는 Node.js 웹 프레임워크.&lt;br&gt;
express middleware와 호환성이 있고, async function을 지원한다.&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Tue, 01 Dec 2020 11:26:58 +0900</pubDate>
        <link>https://jser.info/ko/2020/12/01/workbox-v6.0.0-ts-auto-mock-typescripttolua/</link>
        <guid isPermaLink="true">https://jser.info/ko/2020/12/01/workbox-v6.0.0-ts-auto-mock-typescripttolua/</guid>
        
        <category>Tools</category>
        
        <category>node.js</category>
        
        <category>TypeScript</category>
        
        <category>git</category>
        
        <category>plugin</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2020-11-22: Tailwind CSS v2.0, Electron 11.0.0, TypeScript 4.1, playwright-test</title>
        <description>&lt;p&gt;JSer.info #515 - &lt;a href=&quot;https://tailwindcss.com/docs/utility-first&quot;&gt;Utility-First&lt;/a&gt;한 CSS 프레임워크인 Tailwind CSS 2.0 릴리스.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.tailwindcss.com/tailwindcss-v2&quot;&gt;Tailwind CSS v2.0 – Tailwind CSS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;비호환 변경 사항으로 IE11 지원 종료, Node 10 이하 지원 종료, 일부 클래스 명이 변경 됐다.&lt;br&gt;
추가된 기능으로는 색상 팔레트, 다크 모드 지원, &lt;code&gt;2xl&lt;/code&gt; breakpoint가 있다. &lt;br&gt;
또, 폼 전용 플러그인 &lt;code&gt;@tailwindcss/forms&lt;/code&gt;와 &lt;code&gt;overflow-ellipsis&lt;/code&gt;, &lt;code&gt;overflow-clip&lt;/code&gt;이 추가됐고 &lt;code&gt;@apply&lt;/code&gt; 대응이 개선됐다.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;Electron 11.0.0 릴리스&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.electronjs.org/blog/electron-11-0&quot;&gt;Electron 11.0.0 | Electron Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/electron/electron/releases/tag/v11.0.0&quot;&gt;Release electron v11.0.0 · electron/electron&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Electron 11.0.0에서 Apple Silicon을 대응한다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.electronjs.org/blog/apple-silicon&quot;&gt;Apple Silicon Support | Electron Blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;그 외로는 Chromium 87 / V8 8.7 / Node.js 12.18.3으로 각각 버전이 갱신됐다.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;TypeScript 4.1 정식 릴리스&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://devblogs.microsoft.com/typescript/announcing-typescript-4-1/&quot;&gt;Announcing TypeScript 4.1 | TypeScript&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;큰 변경 사항으로 Template Literal Types를 지원한다.&lt;br&gt;
Template Literal Types는 템플릿 리터럴에 대한 타입 정의 표현을 위한 것으로 DSL 등의 타입 정의에 사용할 수 있다. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/ghoullier/awesome-template-literal-types&quot;&gt;ghoullier/awesome-template-literal-types: Curated list of awesome Template Literal Types examples&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;또, Mapped Types에서 Key의 Remapping을 지원, 재귀적인 Conditional Types 지원, &lt;code&gt;undefined&lt;/code&gt;일 수 있는 인덱스에 접근하게 되는 경우를 검사하는 &lt;code&gt;noUncheckedIndexedAccess&lt;/code&gt;가 추가됐다. &lt;br&gt;
그 외로는 &lt;code&gt;baseUrl&lt;/code&gt; 없이 &lt;code&gt;paths&lt;/code&gt;을 지정할 수 있도록 개선 됐고, 새로운 JSX에 대한 변환을 지원한다.&lt;br&gt;
비호환 변경으로 &lt;code&gt;new Promise&lt;/code&gt;의 &lt;code&gt;resolve&lt;/code&gt; 함수에 대한 인수 타입을 Optional로 선언할 수 없도록 변경됐다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;헤드라인&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;tailwind-css-v2-0-tailwind-css&quot;&gt;Tailwind CSS v2.0 – Tailwind CSS&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.tailwindcss.com/tailwindcss-v2&quot; title=&quot;Tailwind CSS v2.0 – Tailwind CSS&quot;&gt;blog.tailwindcss.com/tailwindcss-v2&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Tailwind CSS 2.0 릴리스.&lt;br&gt;
비호환 변경으로 IE11 지원 종료, Node 10 이하 지원 종료, 일부 클래스 명이 변경됐다.&lt;br&gt;
추가된 기능으로는 색상 팔레트 추가, 다크 모드 지원, &lt;code&gt;2xl&lt;/code&gt; breakpoint 등이 있다.&lt;br&gt;
그 외로 폼 용 플러그인으로 &lt;code&gt;@tailwindcss/forms&lt;/code&gt;와 &lt;code&gt;overflow-ellipsis&lt;/code&gt;, &lt;code&gt;overflow-clip&lt;/code&gt;이 추가됐고 &lt;code&gt;@apply&lt;/code&gt; 대응이 개선됐다. &lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;firefox-83-is-upon-us-mozilla-hacks-the-web-developer-blog&quot;&gt;Firefox 83 is upon us - Mozilla Hacks - the Web developer blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://hacks.mozilla.org/2020/11/firefox-83-is-upon-us/&quot; title=&quot;Firefox 83 is upon us - Mozilla Hacks - the Web developer blog&quot;&gt;hacks.mozilla.org/2020/11/firefox-83-is-upon-us/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Firefox&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Firefox 83 릴리스.&lt;br&gt;
개발자 도구에서 &lt;code&gt;scroll&lt;/code&gt;에 대한 디버깅 기능이 개선됐고, CSS &lt;code&gt;conic-gradient&lt;/code&gt; 함수를 지원하며 WebRender 아키텍처 지원 대상이 추가됐다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/docs/Mozilla/Firefox/Releases/83&quot; title=&quot;Firefox 83 for developers - Mozilla | MDN&quot;&gt;Firefox 83 for developers - Mozilla | MDN&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;electron-11-0-0-electron-blog&quot;&gt;Electron 11.0.0 | Electron Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.electronjs.org/blog/electron-11-0&quot; title=&quot;Electron 11.0.0 | Electron Blog&quot;&gt;www.electronjs.org/blog/electron-11-0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Electron&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Electron 11.0.0 릴리스.&lt;br&gt;
Chromium 87 / V8 8.7 / Node.js 12.18.3으로 각각 버전이 갱신됐다.&lt;br&gt;
Apple M1 지원, &lt;code&gt;app.createThumbnailFromPath()&lt;/code&gt;, &lt;code&gt;webContents.forcefullyCrashRenderer()&lt;/code&gt;가 추가됐다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/electron/electron/releases/tag/v11.0.0&quot; title=&quot;Release electron v11.0.0 · electron/electron&quot;&gt;Release electron v11.0.0 · electron/electron&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;new-in-chrome-87-web-google-developers&quot;&gt;New in Chrome 87  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2020/11/nic87&quot; title=&quot;New in Chrome 87  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/updates/2020/11/nic87&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 87 릴리스.&lt;br&gt;
DevTools에 WebAuthn 탭 추가, 카메라의 pan / tilt / zoom 지원, Service Worker에서 Range 요청 지원.&lt;br&gt;
Cookie Store API, &lt;code&gt;Intl.Segmenter&lt;/code&gt;, &lt;code&gt;isInputPending&lt;/code&gt;을 지원하고 &lt;code&gt;postMessage&lt;/code&gt;에 Streams을 전달 할 수 있도록 개선 됐다.&lt;br&gt;
또 FTP가 기본적으로 비활성화 됐다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.chromestatus.com/features#milestone%3D87&quot; title=&quot;Chrome Platform Status&quot;&gt;Chrome Platform Status&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;announcing-typescript-4-1-typescript&quot;&gt;Announcing TypeScript 4.1 | TypeScript&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://devblogs.microsoft.com/typescript/announcing-typescript-4-1/&quot; title=&quot;Announcing TypeScript 4.1 | TypeScript&quot;&gt;devblogs.microsoft.com/typescript/announcing-typescript-4-1/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScript 4.1 릴리스.&lt;br&gt;
Template Literal Types, Mapped Types에서 Key의 Remapping 지원, 재귀적인 Conditional Types 지원. &lt;code&gt;undefined&lt;/code&gt; 일 수 있는 인덱스에 접근을 검사하는 &lt;code&gt;noUncheckedIndexedAccess&lt;/code&gt; 옵션 추가.&lt;br&gt;
&lt;code&gt;baseUrl&lt;/code&gt; 없이 &lt;code&gt;paths&lt;/code&gt; 옵션을 지정할 수 있도록, 새로운 JSX 변환 지원.&lt;br&gt;
비호환 변경으로는 &lt;code&gt;new Promise&lt;/code&gt;의 &lt;code&gt;resolve&lt;/code&gt; 함수에 대한 인수를 생략할 수 없도록 변경됐다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;prettier-2-2-new-javascript-parsers-ts-4-1-and-esm-standalone-bundles-prettier&quot;&gt;Prettier 2.2: new JavaScript parsers, TS 4.1 and ESM standalone bundles · Prettier&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://prettier.io/blog/2020/11/20/2.2.0.html&quot; title=&quot;Prettier 2.2: new JavaScript parsers, TS 4.1 and ESM standalone bundles · Prettier&quot;&gt;prettier.io/blog/2020/11/20/2.2.0.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Prettier 2.2 릴리스.&lt;br&gt;
&lt;code&gt;espree&lt;/code&gt;와 &lt;code&gt;meriyah&lt;/code&gt; 자바스크립트 파서와 TypeScript 4.1을 지원하며 standalone 버전을 패키지에 포함하도록 변경됐다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-notes-for-safari-technology-preview-116-webkit&quot;&gt;Release Notes for Safari Technology Preview 116 | WebKit&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webkit.org/blog/11348/release-notes-for-safari-technology-preview-116/&quot; title=&quot;Release Notes for Safari Technology Preview 116 | WebKit&quot;&gt;webkit.org/blog/11348/release-notes-for-safari-technology-preview-116/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;webkit&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;safari&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Safari Technology Preview 116 릴리스.&lt;br&gt;
AudioWorklet API를 기본적으로 활성화, MediaRecorder 개선, Storage Access API가 per frame에서 per page으로 변경됐다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ecmascript-proposal-updates-2020-11-ecmascript-daily&quot;&gt;ECMAScript proposal updates @ 2020-11 | ECMAScript Daily&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ecmascript-daily.github.io/ecmascript/2020/11/22/ecmascript-proposal-updat&quot; title=&quot;ECMAScript proposal updates @ 2020-11 | ECMAScript Daily&quot;&gt;ecmascript-daily.github.io/ecmascript/2020/11/22/ecmascript-proposal-updat&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;proposal&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;news&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;2020년 11월 TC39 Meeting에서 변경된 ECMAScript Proposal 상태 정리.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;아티클&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;back-forward-cache&quot;&gt;Back/forward cache&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://web.dev/bfcache/&quot; title=&quot;Back/forward cache&quot;&gt;web.dev/bfcache/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 87(Android)부터 cross-site 탐색을 위한 BFCache가 활성화 된다.&lt;br&gt;
위 글에서는 BFCache의 동작, BFCache로 표시됐는지 판정하는 방법, BFCache 되지 않는 조건과 BFCache 에서의 처리 재개 방법을 소개한다.&lt;br&gt;
또, Google Analytics의 접근 해석과 BFCache의 관계, 성능 측정에 미치는 영향 등에 대해서도 작성돼 있다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;web-blog-jxck-io&quot;&gt;Web 기술의 조사 방법 | blog.jxck.io(일본어)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.jxck.io/entries/2020-11-19/how-to-track-web-standards.html&quot; title=&quot;Web 기술의 조사 방법 | blog.jxck.io&quot;&gt;blog.jxck.io/entries/2020-11-19/how-to-track-web-standards.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;spec&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;proposal&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;웹 기술과 관련한 사양, 상태(status), 기술에 대한 논의 내용을 어디서 살펴 볼 수 있는지 소개한다.&lt;br&gt;
이와 함께 Browser, IETF, W3C/WHAWG, TC39에 대해서도 설명한다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;슬라이드, 영상&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;blackfan-client-side-prototype-pollution-prototype-pollution-and-useful-script-gadgets&quot;&gt;BlackFan/client-side-prototype-pollution: Prototype Pollution and useful Script Gadgets&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/BlackFan/client-side-prototype-pollution&quot; title=&quot;BlackFan/client-side-prototype-pollution: Prototype Pollution and useful Script Gadgets&quot;&gt;github.com/BlackFan/client-side-prototype-pollution&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;security&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;XSS&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Prototype Pollution 공격 사례를 모아 놓은 저장소.&lt;br&gt;
여러가지 라이브러리에 대한 rototype Pollution 예제 코드가 정리돼 있다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;primefaces-ultimate-ui-framework&quot;&gt;PrimeFaces – Ultimate UI Framework&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.primefaces.org/&quot; title=&quot;PrimeFaces – Ultimate UI Framework&quot;&gt;www.primefaces.org/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Angular&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Vue&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;UI&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Java&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Angular, React, Vue, JSF를 지원하는 UI 프레임워크&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;사이트, 서비스, 문서&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;101arrowz-fflate-high-performance-de-compression-in-an-8kb-package&quot;&gt;101arrowz/fflate: High performance (de)compression in an 8kB package&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/101arrowz/fflate&quot; title=&quot;101arrowz/fflate: High performance (de)compression in an 8kB package&quot;&gt;github.com/101arrowz/fflate&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;deflate, gzip, zlib의 compress / decompress를 지원하는 라이브러리.&lt;br&gt;
작은 파일 크기와 안정적인 성능을 주 목적으로 개발하고 있으며 Worker에서의 비동기 처리에도 대응하고 있다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;microsoft-playwright-test-build-a-cross-browser-end-to-end-test-suite-with-playwright&quot;&gt;microsoft/playwright-test: Build a cross-browser end-to-end test suite with Playwright.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/microsoft/playwright-test&quot; title=&quot;microsoft/playwright-test: Build a cross-browser end-to-end test suite with Playwright.&quot;&gt;github.com/microsoft/playwright-test&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;E2E&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Playwright를 기반으로 한 E2E 테스트 프레임워크.&lt;br&gt;
Jest 스러운 Assertion, Playwright와 Folio를 사용한 테스트, Snapshot 테스트로서 시각 테스팅을 지원한다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/microsoft/folio&quot; title=&quot;microsoft/folio: A customizable test framework to build your own test frameworks&quot;&gt;microsoft/folio: A customizable test framework to build your own test frameworks&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;소프트웨어, 도구, 라이브러리&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;mkay581-cookie-store-a-polyfill-for-the-cookie-store-api&quot;&gt;mkay581/cookie-store: A polyfill for the Cookie Store API&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/mkay581/cookie-store&quot; title=&quot;mkay581/cookie-store: A polyfill for the Cookie Store API&quot;&gt;github.com/mkay581/cookie-store&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;polyfill&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Cookie Store API의 Polyfill 라이브러리&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;microsoft-folio-a-customizable-test-framework-to-build-your-own-test-frameworks&quot;&gt;microsoft/folio: A customizable test framework to build your own test frameworks&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/microsoft/folio&quot; title=&quot;microsoft/folio: A customizable test framework to build your own test frameworks&quot;&gt;github.com/microsoft/folio&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;testing&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;테스트 프레임워크를 만들기 위한 테스트 프레임워크.&lt;br&gt;
Test Fixture, Annotation API으로 Flaky Tests 선언과 재시도, 특정 환경을 위한 테스트를 생성할 수 있다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;kuu-hls-parser-a-simple-library-to-read-write-hls-playlists&quot;&gt;kuu/hls-parser: A simple library to read/write HLS playlists&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/kuu/hls-parser&quot; title=&quot;kuu/hls-parser: A simple library to read/write HLS playlists&quot;&gt;github.com/kuu/hls-parser&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;HLS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;HLS playlist 파서, 제너레이터 라이브러리&lt;br&gt;
Apple Low-Latency HLS 형식도 지원한다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;ceifa-wasmoon-a-real-lua-vm-with-js-bindings-made-with-webassembly&quot;&gt;ceifa/wasmoon: A real lua VM with JS bindings made with webassembly&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ceifa/wasmoon&quot; title=&quot;ceifa/wasmoon: A real lua VM with JS bindings made with webassembly&quot;&gt;github.com/ceifa/wasmoon&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Lua&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Lua VM을 WebAssembly로 변환해 JavaScript에서 Lua의 코드를 실행할 수 있는 라이브러리.&lt;/p&gt;

&lt;hr&gt;
</description>
        <pubDate>Sun, 22 Nov 2020 11:57:36 +0900</pubDate>
        <link>https://jser.info/ko/2020/11/22/tailwind-css-v2.0-electron-11.0.0-typescript-4.1-playwright-test/</link>
        <guid isPermaLink="true">https://jser.info/ko/2020/11/22/tailwind-css-v2.0-electron-11.0.0-typescript-4.1-playwright-test/</guid>
        
        <category>Chrome</category>
        
        <category>browser</category>
        
        <category>proposal</category>
        
        <category>security</category>
        
        <category>XSS</category>
        
        
        <category>JSer</category>
        
      </item>
    
      <item>
        <title>2020-11-16: Angular 11, React 앱 최적화, TypeScript를 채택(adopting)하고 배운것</title>
        <description>&lt;p&gt;JSer.info #514 -　Angular 11 릴리스.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.angular.io/version-11-of-angular-now-available-74721b7952f7&quot;&gt;Version 11 of Angular Now Available | by Mark Techson | Nov, 2020 | Angular Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/angular/angular/blob/master/CHANGELOG.md#1100-2020-11-11&quot;&gt;angular/CHANGELOG.md at master · angular/angular&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Angular 11에서는 폰트 자동 인라인 화 대응, Component Test Harnesses 모든 컴포넌트 지원, Language Service 대응 개선, HMR을 CLI 인수로 활성화 할 수 있도록 변경됐다. &lt;br&gt;
그 외로 webpack5 실험적 지원, Angular CLI의 기본 Linter 변경에 대해 정리돼 있다. &lt;/p&gt;

&lt;p&gt;현재 Angular에는 TSLint를 기반의 Lint가 구현돼 있다. 하지만, &lt;a href=&quot;https://medium.com/palantir/tslint-in-2019-1a144c2317a9&quot;&gt;TSLint는 비권장되어 ESLint로 이전&lt;/a&gt;이 진행되고 있다.&lt;br&gt;
Angular에서도 마찬가지로 TSLint에서 ESlint로 이전이 진행되고 있었으며, 이미 커뮤니티 기반으로 진행되고 있던 &lt;a href=&quot;https://github.com/angular-eslint/angular-eslint&quot;&gt;Angular ESLint&lt;/a&gt;로 이전하는 방침에 대해서도 정리돼 있다.&lt;/p&gt;

&lt;p&gt;자세한 내용은 아래 문서를 참고.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.lacolaco.net/2020/11/angular-state-of-linting-2020/&quot;&gt;Angular: ESLint 지원 현황 2020 Autumn | &lt;output type=text&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://thetuteur.com/optimize-react-apps-pagespeed-insights-score/&quot;&gt;Optimize React Apps PageSpeed Insights Score - thetuteur&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;리액트 기반 애플리케이션의 성능 개선을 주제로 정리돼 있다.&lt;/p&gt;

&lt;p&gt;미사용 자바스크립트 삭제, 컴포넌트 Lazy Load, TTFB 단축을 위해 Node.js 응답을 In-Memory로 캐시하는 방법.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Aljullu/react-lazy-load-image-component#readme&quot;&gt;&lt;code&gt;react-lazy-load-image-component&lt;/code&gt;&lt;/a&gt;를 사용한 이미지 지연 로드, &lt;a href=&quot;https://github.com/hadeeb/react-lazy-hydration&quot;&gt;&lt;code&gt;react-lazy-hydration&lt;/code&gt;&lt;/a&gt;을 사용한 초기 로드 시의 메인 스레드 처리를 줄이는 방법 등이 정리돼 있다.&lt;br&gt;
또, 비동기 로드나 &lt;a href=&quot;https://github.com/addyosmani/critical&quot;&gt;&lt;code&gt;critical&lt;/code&gt;&lt;/a&gt;을 사용한 UA 별 크리티컬 패스 CSS 생성 등에 대해서도 작성돼 있다.&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;&lt;a href=&quot;https://www.techatbloomberg.com/blog/10-insights-adopting-typescript-at-scale/&quot;&gt;10 Insights from Adopting TypeScript at Scale | Tech At Bloomberg&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;타입스크립트를 채택해서 배운 것에 대해서 여러가지 작성돼 있다.&lt;/p&gt;

&lt;p&gt;타입스크립트라는 언어, tsconfig 설정, 타입 정의 방법 등, 아래 원칙을 기준으로 다양하게 이야기한다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Scalability&lt;/li&gt;
&lt;li&gt;Ecosystem Coherence&lt;/li&gt;
&lt;li&gt;Standards Alignment&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;위 글에서 참조하고 있는 &lt;code&gt;type&lt;/code&gt;과 &lt;code&gt;interface&lt;/code&gt;의 차이점이나 컴파일 성능과 관련된 글도 꽤 흥미롭다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://ncjamieson.com/prefer-interfaces/&quot;&gt;TypeScript: Prefer Interfaces — @ncjamieson&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/microsoft/TypeScript/wiki/Performance&quot;&gt;Performance · microsoft/TypeScript Wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;헤드라인&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;node-v15-2-0-current-node-js&quot;&gt;Node v15.2.0 (Current) | Node.js&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://nodejs.org/en/blog/release/v15.2.0/&quot; title=&quot;Node v15.2.0 (Current) | Node.js&quot;&gt;nodejs.org/en/blog/release/v15.2.0/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;node.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Node v15.2.0 릴리스.&lt;br&gt;
&lt;code&gt;events&lt;/code&gt;에 이벤트를 지정해 리스너를 가져올 수 있는 &lt;code&gt;getEventListeners&lt;/code&gt; 추가, &lt;code&gt;fs&lt;/code&gt;의 &lt;code&gt;writeFile&lt;/code&gt; / &lt;code&gt;readFile&lt;/code&gt; AbortSignal에 대응.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;bootstrap-5-alpha-3-bootstrap-blog&quot;&gt;Bootstrap 5 Alpha 3 | Bootstrap Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.getbootstrap.com/2020/11/11/bootstrap-5-alpha-3/&quot; title=&quot;Bootstrap 5 Alpha 3 | Bootstrap Blog&quot;&gt;blog.getbootstrap.com/2020/11/11/bootstrap-5-alpha-3/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Bootstrap 5 Alpha 3 릴리스.&lt;br&gt;
&lt;code&gt;.card&lt;/code&gt; 기반의 아코디언 대신 &lt;code&gt;.accordion&lt;/code&gt; 추가, &lt;code&gt;.btn-block&lt;/code&gt; 삭제, Utilities 클래스 추가.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;version-11-of-angular-now-available-by-mark-techson-nov-2020-angular-blog&quot;&gt;Version 11 of Angular Now Available | by Mark Techson | Nov, 2020 | Angular Blog&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.angular.io/version-11-of-angular-now-available-74721b7952f7&quot; title=&quot;Version 11 of Angular Now Available | by Mark Techson | Nov, 2020 | Angular Blog&quot;&gt;blog.angular.io/version-11-of-angular-now-available-74721b7952f7&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Angular&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Angular 11 릴리스.&lt;br&gt;
폰트 자동 인라인 화 대응, Component Test Harnesses 모든 컴포넌트 지원, Service 대응 개선, HMR을 CLI의 인수로 활성화 할 수 있다.&lt;br&gt;
그 외로 Webpack5를 실험적으로 지원한다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/angular/angular/blob/master/CHANGELOG.md#1100-2020-11-11&quot; title=&quot;angular/CHANGELOG.md at master · angular/angular&quot;&gt;angular/CHANGELOG.md at master · angular/angular&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;release-v0-22-0-ryansolid-solid&quot;&gt;Release v0.22.0 · ryansolid/solid&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ryansolid/solid/releases/tag/v0.22.0&quot; title=&quot;Release v0.22.0 · ryansolid/solid&quot;&gt;github.com/ryansolid/solid/releases/tag/v0.22.0&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ReleaseNote&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;UI 개발 라이브러리 solid v0.22.0 릴리스.&lt;br&gt;
&lt;code&gt;splid-js/dom&lt;/code&gt;를 비권장하고 &lt;code&gt;solid-js/web&lt;/code&gt;을 대신 사용하도록.&lt;br&gt;
&lt;code&gt;dev&lt;/code&gt;옵션 지원 , CDN을 통해서 사용할 수 있도록 &lt;code&gt;solid-js/html&lt;/code&gt; 등을 패키지에 포함하고 &lt;code&gt;renderToWebStream&lt;/code&gt;와 &lt;code&gt;createMutable&lt;/code&gt; 추가.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;lunuy-iterable-weak-iterable-weakset-weakmap-using-es2021-weakref&quot;&gt;Lunuy/iterable-weak: Iterable WeakSet / WeakMap using ES2021 WeakRef&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Lunuy/iterable-weak&quot; title=&quot;Lunuy/iterable-weak: Iterable WeakSet / WeakMap using ES2021 WeakRef&quot;&gt;github.com/Lunuy/iterable-weak&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;WeakRef 사용해 개발한 Iterable한 WeakMap/WeakSet 구현 라이브러리.&lt;br&gt;
Iterate 가능하도록 요소를 참조하며 WeakRef의 FinalizationRegistry를 사용해 참조를 해제할 수도 있다.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;아티클&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;whats-new-in-devtools-chrome-88-web-google-developers&quot;&gt;What&amp;#39;s New In DevTools (Chrome 88)  |  Web  |  Google Developers&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/updates/2020/11/devtools&quot; title=&quot;What&amp;#39;s New In DevTools (Chrome 88)  |  Web  |  Google Developers&quot;&gt;developers.google.com/web/updates/2020/11/devtools&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Chrome&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Chrome 88 개발자 도구 변경 사항 정리.&lt;br&gt;
CSS angle 시각적 도구, AVIF가 지원하지 않는 상태를 에뮬레이트 할 수 있도록 지원, storage quota size 애뮬레이터 지원.&lt;br&gt;
Performance 패널에 Web Vitals 레인(lane) 추가, Application 패널에 Cross-Origin Isolated 상태 표시, network initiator 스택 트레이스 복사 지원.&lt;br&gt;
실험적인 기능으로 CSS Flexbox 디버깅 기능, 키보드 단축키(shortcut) 커스터마이즈 기능이 추가 됐다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;optimize-react-apps-pagespeed-insights-score-thetuteur&quot;&gt;Optimize React Apps PageSpeed Insights Score - thetuteur&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://thetuteur.com/optimize-react-apps-pagespeed-insights-score/&quot; title=&quot;Optimize React Apps PageSpeed Insights Score - thetuteur&quot;&gt;thetuteur.com/optimize-react-apps-pagespeed-insights-score/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React 앱 성능 개선.&lt;br&gt;
사용하지 않는 자바스크립트 삭제, 컴포넌트 Lazy Load, TTFB를 단축하기 위해서 응답 캐시.&lt;br&gt;
&lt;code&gt;react-lazy-load-image-component&lt;/code&gt;를 이용한 이미지 지연 로드, &lt;code&gt;react-lazy-hydration&lt;/code&gt;을 사용해 초기 로드 시점의 CPU 처리 줄이기.&lt;br&gt;
또, CSS 비동기 로드, &lt;code&gt;critical&lt;/code&gt;을 사용한 UA 별 크리티컬 패스 CSS 생성 등.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;typescript-prefer-interfaces-ncjamieson&quot;&gt;TypeScript: Prefer Interfaces — @ncjamieson&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://ncjamieson.com/prefer-interfaces/&quot; title=&quot;TypeScript: Prefer Interfaces — @ncjamieson&quot;&gt;ncjamieson.com/prefer-interfaces/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScript우ㅏ &lt;code&gt;type&lt;/code&gt;과 &lt;code&gt;interface&lt;/code&gt;의 다른점.&lt;br&gt;
&lt;code&gt;interface&lt;/code&gt;는 이름으로 참조되는 것에 반해 &lt;code&gt;type&lt;/code&gt;으로 정의한 형은 인라인 화 되는 경우가 있다. 때문에 &lt;code&gt;type&lt;/code&gt;을 사용한 경우  &lt;code&gt;d.ts&lt;/code&gt;가 필요 이상으로 커질 수 도 있다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.techatbloomberg.com/blog/10-insights-adopting-typescript-at-scale/&quot; title=&quot;10 Insights from Adopting TypeScript at Scale | Tech At Bloomberg&quot;&gt;10 Insights from Adopting TypeScript at Scale | Tech At Bloomberg&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;performance-microsoft-typescript-wiki&quot;&gt;Performance · microsoft/TypeScript Wiki&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/microsoft/TypeScript/wiki/Performance&quot; title=&quot;Performance · microsoft/TypeScript Wiki&quot;&gt;github.com/microsoft/TypeScript/wiki/Performance&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;TypeScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;TypeScript 컴파일 성능과 관련된 내용이 정리 돼 있다.&lt;br&gt;
&lt;code&gt;type&lt;/code&gt;과 &lt;code&gt;interface&lt;/code&gt;, Base Type과 Union Type, Project Reference, tsconfig.json 설정과 관련한 최적화.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;angular-eslint-2020-autumn&quot;&gt;Angular: ESLint 지원 상황 2020 Autumn | &lt;output type=text&gt;(일본)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://blog.lacolaco.net/2020/11/angular-state-of-linting-2020/&quot; title=&quot;Angular: ESLintサポートの現状 2020 Autumn | &amp;lt;output type=text&amp;gt;&quot;&gt;blog.lacolaco.net/2020/11/angular-state-of-linting-2020/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Angular&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ESLint&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Agular에서의 Lint(TSLint / ESLint) 향후 방향.&lt;br&gt;
TSLint는 Angular 12에서 비권장 될 예정으로 ESLint로의 이전은 커뮤니티 기반(angular-eslint 사용을 권장)으로 진행되고 있다.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/angular-eslint/angular-eslint&quot; title=&quot;angular-eslint/angular-eslint: Monorepo for all the tooling related to using ESLint with Angular&quot;&gt;angular-eslint/angular-eslint: Monorepo for all the tooling related to using ESLint with Angular&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;

&lt;h2 id=&quot;official-google-webmaster-central-blog-timing-for-bringing-page-experience-to-google-search&quot;&gt;Official Google Webmaster Central Blog: Timing for bringing page experience to Google Search&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://webmasters.googleblog.com/2020/11/timing-for-page-experience.html&quot; title=&quot;Official Google Webmaster Central Blog: Timing for bringing page experience to Google Search&quot;&gt;webmasters.googleblog.com/2020/11/timing-for-page-experience.html&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;google&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;SEO&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;performance&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;article&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;search&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;2021년 5월 부터 Core Web Vitals(LCP, FID, CLS) 점수가 구글 검색 결과의 시그널로 사용된다.&lt;br&gt;
웹 성능이 검색 결과 순위에 영향을 주게 된다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;microsoft-web-dev-for-beginners-24-lessons-12-weeks-get-started-as-a-web-developer&quot;&gt;microsoft/Web-Dev-For-Beginners: 24 Lessons, 12 Weeks, Get Started as a Web Developer&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/microsoft/Web-Dev-For-Beginners&quot; title=&quot;microsoft/Web-Dev-For-Beginners: 24 Lessons, 12 Weeks, Get Started as a Web Developer&quot;&gt;github.com/microsoft/Web-Dev-For-Beginners&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;CSS&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;tutorial&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;HTML / CSS / JS 및 애플리케이션 개발에 대해 학습할 수 있는 웹 개발 튜터리얼 모음 및 레슨.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;슬라이드, 영상&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;next-js-conf-2020-youtube&quot;&gt;Next.js Conf 2020 - YouTube&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/playlist?list=PLBnKlKpPeagnT2Cmv4giCbosfrbKnuYTD&quot; title=&quot;Next.js Conf 2020 - YouTube&quot;&gt;www.youtube.com/playlist?list&amp;#x3D;PLBnKlKpPeagnT2Cmv4giCbosfrbKnuYTD&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Next.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;video&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Conference&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Next.js Conf 2020 발표 영상 목록&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;사이트, 서비스, 문서&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;esm&quot;&gt;ESM&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://esm.sh/&quot; title=&quot;ESM&quot;&gt;esm.sh/&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ECMAScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;deno&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;cdn&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;esbuild로 의존을 포함해 bundle한 패키지를 배포하는 npm CDN 서비스.&lt;br&gt;
npm 패키지를 deno에서 ES Modules로 불러올 수 있고 polyfill 구조도 준비돼 있다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;open-source-labs-recoilize-recoil-developer-tool&quot;&gt;open-source-labs/Recoilize: Recoil developer tool&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/open-source-labs/Recoilize&quot; title=&quot;open-source-labs/Recoilize: Recoil developer tool&quot;&gt;github.com/open-source-labs/Recoilize&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;debug&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;recoil 디버깅 도구.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;acot-a11y-acot-more-accessible-web-all-over-the-world&quot;&gt;acot-a11y/acot: More accessible web, all over the world.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/acot-a11y/acot&quot; title=&quot;acot-a11y/acot: More accessible web, all over the world.&quot;&gt;github.com/acot-a11y/acot&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;ESLint&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;accessibility&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;Tools&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;ESLint와 비슷한 플러그인 시스템을 갖는 Accessibility 테스트 프레임워크.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;소프트웨어, 도구, 라이브러리&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;trivago-prettier-plugin-sort-imports-a-prettier-plugin-to-sort-imports-in-typescript-and-javascript-files-by-the-provided-regex-order&quot;&gt;trivago/prettier-plugin-sort-imports: A prettier plugin to sort imports in typescript and javascript files by the provided RegEx order.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/trivago/prettier-plugin-sort-imports&quot; title=&quot;trivago/prettier-plugin-sort-imports: A prettier plugin to sort imports in typescript and javascript files by the provided RegEx order.&quot;&gt;github.com/trivago/prettier-plugin-sort-imports&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;plugin&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;import 문 순서를 정렬하는 prettier plugin&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;vinissimus-next-translate-i18n-tool-for-next-js-10-load-page-translations-and-use-them-in-an-easy-way&quot;&gt;vinissimus/next-translate: i18n tool for Next.js 10 🌍 - Load page translations and use them in an easy way!&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/vinissimus/next-translate&quot; title=&quot;vinissimus/next-translate: i18n tool for Next.js 10 🌍 - Load page translations and use them in an easy way!&quot;&gt;github.com/vinissimus/next-translate&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Next.js&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;i18n&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Next.js 용 i18n 도구.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;angular-eslint-angular-eslint-monorepo-for-all-the-tooling-related-to-using-eslint-with-angular&quot;&gt;angular-eslint/angular-eslint: Monorepo for all the tooling related to using ESLint with Angular&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/angular-eslint/angular-eslint&quot; title=&quot;angular-eslint/angular-eslint: Monorepo for all the tooling related to using ESLint with Angular&quot;&gt;github.com/angular-eslint/angular-eslint&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;Angular&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;ESLint&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;Angular 용 ESLint 플러그인 세트.&lt;br&gt;
Codelyzer / TSLint에서 이전 시 사용을 권장하고 있다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;felixfbecker-dom-to-svg-library-to-convert-a-given-html-dom-node-into-an-accessible-svg-screenshot&quot;&gt;felixfbecker/dom-to-svg: Library to convert a given HTML DOM node into an accessible SVG &amp;quot;screenshot&amp;quot;.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/felixfbecker/dom-to-svg&quot; title=&quot;felixfbecker/dom-to-svg: Library to convert a given HTML DOM node into an accessible SVG \&amp;quot;screenshot\&amp;quot;.&quot;&gt;github.com/felixfbecker/dom-to-svg&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;DOM&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;SVG&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;foreignObject&amp;gt;&lt;/code&gt;를 사용하지 않고 DOM에서 SVG를 생성하는 라이브러리.&lt;br&gt;
DOM 상의 WAI-ARIA나 링크 등도 포함하는 SVG를 생성한다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;davnicwil-react-frontload-async-data-loading-for-react-components-on-client-server&quot;&gt;davnicwil/react-frontload: Async data loading for React components, on client &amp;amp; server&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/davnicwil/react-frontload&quot; title=&quot;davnicwil/react-frontload: Async data loading for React components, on client &amp;amp; server&quot;&gt;github.com/davnicwil/react-frontload&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;server&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React 용 Data Loader 라이브러리.&lt;br&gt;
컴포넌트에서 API를 호출해 데이터를 가져오거나 호출 상태를 다룰 수 있다. 클라이언트와 서버에서 각각 대응하는 API를 준비해 hydration도 가능하다.&lt;/p&gt;

&lt;hr&gt;

&lt;h2 id=&quot;alephjs-aleph-js-the-react-framework-in-deno&quot;&gt;alephjs/aleph.js: The React Framework in Deno.&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/alephjs/aleph.js&quot; title=&quot;alephjs/aleph.js: The React Framework in Deno.&quot;&gt;github.com/alephjs/aleph.js&lt;/a&gt;&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;deno&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;React&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;library&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;React를 기반으로 한 Next.js와 비슷한 Deno 용 프레임워크.&lt;/p&gt;

&lt;hr&gt;

&lt;h1 class=&quot;site-genre&quot;&gt;도서&lt;/h1&gt;

&lt;hr&gt;

&lt;h2 id=&quot;javascript-impress-top-gear-cay-s-horstmann-amazon&quot;&gt;JavaScript 모던 프로그래밍 완전 가이드 [견고한 코드를 효율적으로 개발! ] (impress top gear 시리즈) | Cay S. Horstmann, 요시카와 쿠니오 | 책 | 통신판매 | Amazon&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.amazon.co.jp/dp/4295010561/&quot; title=&quot;JavaScript 모던 프로그래밍 완전 가이드 \[견고한 코드를 효율적으로 개발! \] (impress top gear 시리즈) | Cay S. Horstmann, 요시카와 쿠니오 | 책 | 통신판매 | Amazon&quot;&gt;www.amazon.co.jp/dp/4295010561/&lt;/a&gt;(일본어)&lt;br&gt;
&lt;p class=&quot;jser-tags jser-tag-icon&quot;&gt;&lt;span class=&quot;jser-tag&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;jser-tag&quot;&gt;book&lt;/span&gt;&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;2020년 12월 21일 출간 예정인 Modern JavaScript for the Impatient의 번역서.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.amazon.co.jp/dp/B08F5HFWBH/&quot; title=&quot;Amazon | Modern JavaScript for the Impatient (English Edition) \[Kindle edition\] by Horstmann, Cay S. | Languages &amp;amp;amp; Tools | Kindle 스토어&quot;&gt;Amazon | Modern JavaScript for the Impatient (English Edition) [Kindle edition] by Horstmann, Cay S. | Languages &amp;amp; Tools | Kindle 스토어&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr&gt;
</description>
        <pubDate>Mon, 16 Nov 2020 09:28:55 +0900</pubDate>
        <link>https://jser.info/ko/2020/11/16/angular-11-react-typescript/</link>
        <guid isPermaLink="true">https://jser.info/ko/2020/11/16/angular-11-react-typescript/</guid>
        
        <category>React</category>
        
        <category>Angular</category>
        
        <category>ESLint</category>
        
        <category>performance</category>
        
        <category>ECMAScript</category>
        
        
        <category>JSer</category>
        
      </item>
    
  </channel>
</rss>
